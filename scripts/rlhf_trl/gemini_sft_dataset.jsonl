{"instruction": "Rotate left by 60 degrees then Fly to (-92, 79, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-92, 79, -13, 8).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Take off then Turn right 15 degrees then Move to coordinates (-35, 24, -16)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-35, 24, -16, 3).join()"}
{"instruction": "Fly to (-80, 49, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-80, 49, -7, 9).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move backward 7 meters then Retreat backward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 4).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 22 meters then Fly to (-68, 21, -17) then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-68, 21, -17, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move right 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 6).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Execute takeoff then Turn left 60 degrees then Rotate right by 90 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move to coordinates (-21, -99, -15) then Retreat backward by 31 meters then Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-21, -99, -15, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate right by 45 degrees then Shift left by 19 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (37, -15, -16) then Fly to (-5, -56, -10) then Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(37, -15, -16, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-5, -56, -10, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 3).join()"}
{"instruction": "Turn left 45 degrees then Initiate takeoff sequence then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 30 degrees then Shift right by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 10).join()"}
{"instruction": "Retreat backward by 20 meters then Move right 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 5).join()"}
{"instruction": "Execute landing then Retreat backward by 23 meters then Execute landing", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 10).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 10).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift right by 14 meters then Move right 18 meters then Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 9).join()"}
{"instruction": "Take off then Move backward 26 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 5).join()"}
{"instruction": "Execute landing then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Shift left by 49 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 23 meters then Move right 32 meters then Shift left by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 5).join()"}
{"instruction": "Fly to (60, -68, -5) then Shift left by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(60, -68, -5, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 8).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Fly to (-32, -19, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, -19, -20, 6).join()"}
{"instruction": "Maintain hover for 10 seconds then Turn right 30 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Advance forward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 9).join()"}
{"instruction": "Advance forward by 29 meters then Shift left by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 6).join()"}
{"instruction": "Move to coordinates (-11, -54, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-11, -54, -11, 4).join()"}
{"instruction": "Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 10).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Hover for 10 seconds then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 15 degrees then Move forward 24 meters then Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 3).join()"}
{"instruction": "Rotate right by 15 degrees then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Advance forward by 31 meters then Rotate left by 30 degrees then Fly to (-46, 97, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-46, 97, -12, 8).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 3).join()"}
{"instruction": "Move to coordinates (-36, 64, -9) then Shift right by 35 meters then Shift left by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-36, 64, -9, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 4).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Shift right by 39 meters then Turn right 15 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 24 meters then Execute takeoff then Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 9).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 3).join()"}
{"instruction": "Move left 11 meters then Rotate right by 30 degrees then Retreat backward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 4).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move forward 26 meters then Hover for 9 seconds then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Fly to (-30, 3, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-30, 3, -14, 3).join()"}
{"instruction": "Fly to (-77, -88, -20) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-77, -88, -20, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 17 meters then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 10).join()"}
{"instruction": "Please land then Shift left by 24 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 4).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 8 seconds then Shift right by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 8).join()"}
{"instruction": "Land then Shift right by 17 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 9).join()"}
{"instruction": "Initiate takeoff sequence then Please land then Initiate landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Shift left by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 10).join()"}
{"instruction": "Move backward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 9 seconds then Advance forward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 10).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 8).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-81, -10, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-81, -10, -15, 7).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (-29, -62, -16) then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-29, -62, -16, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move right 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 6).join()"}
{"instruction": "Move forward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 3).join()"}
{"instruction": "Move right 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 9).join()"}
{"instruction": "Maintain hover for 10 seconds then Move left 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 9).join()"}
{"instruction": "Shift right by 50 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 6).join()"}
{"instruction": "Shift right by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 45 degrees then Hover for 4 seconds then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Fly to (60, -22, -18) then Fly to (1, -66, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(60, -22, -18, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(1, -66, -15, 9).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Advance forward by 35 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 9).join() then client.landAsync().join()"}
{"instruction": "Shift right by 22 meters then Shift right by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 5).join()"}
{"instruction": "Rotate left by 90 degrees then Execute takeoff then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 4 seconds then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.takeoffAsync().join()"}
{"instruction": "Advance forward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 6).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Advance forward by 48 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 4).join() then client.landAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move right 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 4).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please land then Move backward 36 meters then Retreat backward by 25 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 10).join()"}
{"instruction": "Advance forward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 6).join()"}
{"instruction": "Maintain hover for 8 seconds then Move left 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 5).join()"}
{"instruction": "Move backward 12 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 7).join() then client.landAsync().join()"}
{"instruction": "Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 60 degrees then Shift left by 43 meters then Fly to (78, -5, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, -5, -16, 7).join()"}
{"instruction": "Move right 26 meters then Maintain hover for 5 seconds then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.landAsync().join()"}
{"instruction": "Shift right by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 4).join()"}
{"instruction": "Rotate left by 45 degrees then Maintain hover for 5 seconds then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Advance forward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 3).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees then Hover for 10 seconds then Move to coordinates (63, -94, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(63, -94, -20, 10).join()"}
{"instruction": "Move to coordinates (-16, -42, -16) then Maintain hover for 4 seconds then Move left 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-16, -42, -16, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 10).join()"}
{"instruction": "Move right 44 meters then Turn left 60 degrees then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Fly to (-76, -66, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-76, -66, -19, 10).join()"}
{"instruction": "Turn right 30 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 7).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (-6, 65, -7) then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-6, 65, -7, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Initiate landing then Take off then Turn left 60 degrees", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 14 meters then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move to coordinates (16, -10, -6) then Shift right by 46 meters then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(16, -10, -6, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn left 60 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 31 meters then Move forward 7 meters then Move backward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 10 meters then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 90 degrees then Maintain hover for 5 seconds then Move backward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 18 meters then Move to coordinates (-23, 13, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-23, 13, -14, 7).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Maintain hover for 5 seconds then Rotate left by 45 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 40 meters then Rotate right by 60 degrees then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-84, 42, -19) then Turn right 90 degrees then Retreat backward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-84, 42, -19, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 8).join()"}
{"instruction": "Execute takeoff then Rotate right by 30 degrees then Maintain hover for 10 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Advance forward by 39 meters then Move backward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 5).join()"}
{"instruction": "Please take off then Move to coordinates (-8, -19, -15) then Please take off", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-8, -19, -15, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 29 meters then Hover for 9 seconds then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move to coordinates (67, -19, -7) then Initiate takeoff sequence then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(67, -19, -7, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move left 28 meters then Shift left by 5 meters then Fly to (19, -35, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(19, -35, -15, 5).join()"}
{"instruction": "Move forward 17 meters then Advance forward by 8 meters then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 7).join()"}
{"instruction": "Move backward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 3).join()"}
{"instruction": "Move backward 45 meters then Retreat backward by 24 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Execute takeoff then Move forward 9 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 10).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Shift left by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 3).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Move right 40 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 9).join()"}
{"instruction": "Move left 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 8).join()"}
{"instruction": "Turn right 45 degrees then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate left by 60 degrees then Move left 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 4).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Advance forward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 6).join()"}
{"instruction": "Please land then Execute takeoff then Rotate left by 45 degrees", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move left 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 9).join()"}
{"instruction": "Hover for 3 seconds then Retreat backward by 5 meters then Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 4).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Advance forward by 46 meters then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move left 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 10).join()"}
{"instruction": "Fly to (-78, -20, -13) then Move right 40 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-78, -20, -13, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 8 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 6).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate takeoff sequence then Move left 31 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 4).join()"}
{"instruction": "Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 45 degrees then Shift right by 24 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Advance forward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 8).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Maintain hover for 5 seconds then Shift right by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 7).join()"}
{"instruction": "Shift left by 8 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 10).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 6).join()"}
{"instruction": "Rotate left by 30 degrees then Move forward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 9).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move backward 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 6).join()"}
{"instruction": "Move backward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move to coordinates (-92, 11, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-92, 11, -19, 10).join()"}
{"instruction": "Advance forward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 7).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate left by 90 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.landAsync().join()"}
{"instruction": "Execute takeoff then Shift left by 8 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 9).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff then Shift left by 35 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 4).join()"}
{"instruction": "Move left 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 6).join()"}
{"instruction": "Maintain hover for 8 seconds then Move backward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 8).join()"}
{"instruction": "Move forward 10 meters then Advance forward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 6).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 10).join()"}
{"instruction": "Fly to (-50, 23, -10) then Hover for 8 seconds then Move left 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-50, 23, -10, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 4).join()"}
{"instruction": "Advance forward by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 10).join()"}
{"instruction": "Move forward 35 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate left by 15 degrees then Take off then Retreat backward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 5).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Advance forward by 19 meters then Shift left by 43 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn left 15 degrees then Retreat backward by 29 meters then Fly to (-7, -84, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-7, -84, -10, 9).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 35 meters then Rotate left by 30 degrees then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.takeoffAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 5).join()"}
{"instruction": "Move left 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 3).join()"}
{"instruction": "Move to coordinates (44, -81, -10) then Move to coordinates (-76, -85, -10) then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(44, -81, -10, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-76, -85, -10, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Hover for 7 seconds then Shift right by 14 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move left 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 8).join()"}
{"instruction": "Move left 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 6).join()"}
{"instruction": "Advance forward by 32 meters then Shift right by 14 meters then Move right 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 4).join()"}
{"instruction": "Fly to (-97, 57, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-97, 57, -19, 9).join()"}
{"instruction": "Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 4).join()"}
{"instruction": "Please land then Hover for 4 seconds then Move forward 38 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 7).join()"}
{"instruction": "Fly to (-26, 60, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-26, 60, -6, 10).join()"}
{"instruction": "Shift left by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 7).join()"}
{"instruction": "Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 8).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Advance forward by 27 meters then Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (15, 99, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(15, 99, -20, 7).join()"}
{"instruction": "Advance forward by 25 meters then Shift left by 38 meters then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Maintain hover for 5 seconds then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 5).join()"}
{"instruction": "Rotate left by 30 degrees then Rotate right by 30 degrees then Fly to (68, 94, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(68, 94, -7, 8).join()"}
{"instruction": "Rotate right by 90 degrees then Retreat backward by 6 meters then Retreat backward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 10).join()"}
{"instruction": "Advance forward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 7).join()"}
{"instruction": "Move backward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Shift right by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 6).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Fly to (-92, -65, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-92, -65, -12, 6).join()"}
{"instruction": "Move forward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 10).join()"}
{"instruction": "Please take off then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (2, 17, -14) then Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, 17, -14, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 4).join()"}
{"instruction": "Fly to (-8, 69, -6) then Rotate left by 45 degrees then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-8, 69, -6, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Land then Move right 36 meters then Rotate right by 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 23 meters then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 48 meters then Maintain hover for 4 seconds then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move backward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move forward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 9).join()"}
{"instruction": "Turn right 60 degrees then Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Shift left by 46 meters then Take off then Move left 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 10).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 7).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 9).join()"}
{"instruction": "Move left 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 4).join()"}
{"instruction": "Move backward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 9).join()"}
{"instruction": "Move forward 8 meters then Shift right by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 5).join()"}
{"instruction": "Move right 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 9).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please take off then Shift left by 29 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 3).join()"}
{"instruction": "Execute takeoff then Initiate takeoff sequence then Move to coordinates (-46, 63, -12)", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-46, 63, -12, 10).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move right 13 meters then Execute landing then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 6).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move left 43 meters then Fly to (89, -97, -19) then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(89, -97, -19, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Initiate landing then Land then Turn right 45 degrees", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 37 meters then Move to coordinates (2, 15, -5) then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, 15, -5, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 15 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move right 34 meters then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift right by 40 meters then Advance forward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 5).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land then Move forward 36 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 8).join()"}
{"instruction": "Hover for 8 seconds then Move forward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 4).join()"}
{"instruction": "Move forward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 10).join()"}
{"instruction": "Move left 38 meters then Advance forward by 49 meters then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 9).join()"}
{"instruction": "Turn right 90 degrees then Move left 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 3).join()"}
{"instruction": "Shift right by 16 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 10).join() then client.takeoffAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 10).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Hover for 3 seconds then Hover for 5 seconds then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move to coordinates (99, -17, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(99, -17, -18, 10).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 7).join()"}
{"instruction": "Move backward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 3).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (23, 42, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(23, 42, -7, 4).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move forward 38 meters then Shift right by 35 meters then Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Maintain hover for 7 seconds then Move backward 32 meters then Move left 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 10).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Advance forward by 7 meters then Move right 12 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 5).join()"}
{"instruction": "Please take off then Move left 33 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 8).join()"}
{"instruction": "Maintain hover for 4 seconds then Move left 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 7).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Fly to (-64, -27, -16) then Move left 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-64, -27, -16, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 9).join()"}
{"instruction": "Move backward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 5).join()"}
{"instruction": "Shift left by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 10).join()"}
{"instruction": "Move backward 48 meters then Move backward 38 meters then Move left 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 7).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (-67, -6, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-67, -6, -5, 10).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Fly to (-41, 1, -18) then Initiate landing then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-41, 1, -18, 5).join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 9).join()"}
{"instruction": "Fly to (14, 91, -15) then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(14, 91, -15, 5).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 6).join()"}
{"instruction": "Shift right by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 10).join()"}
{"instruction": "Move forward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 5).join()"}
{"instruction": "Move right 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 7).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate left by 30 degrees then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move right 32 meters then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move right 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 3).join()"}
{"instruction": "Shift right by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 6).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 45 degrees then Hover for 10 seconds then Move to coordinates (-42, -42, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-42, -42, -15, 8).join()"}
{"instruction": "Move to coordinates (7, -82, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(7, -82, -6, 10).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 9 seconds then Move left 48 meters then Move backward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees then Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 8).join()"}
{"instruction": "Retreat backward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (57, -45, -19) then Shift right by 49 meters then Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(57, -45, -19, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 8).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 3).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 10).join()"}
{"instruction": "Move to coordinates (21, 93, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, 93, -5, 4).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 28 meters then Turn right 30 degrees then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (34, -78, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(34, -78, -11, 6).join()"}
{"instruction": "Shift right by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 5).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Please land then Move backward 46 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 6).join()"}
{"instruction": "Retreat backward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (99, -39, -18) then Shift left by 33 meters then Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(99, -39, -18, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Advance forward by 12 meters then Maintain hover for 10 seconds then Shift right by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 7).join()"}
{"instruction": "Please take off then Turn right 60 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Retreat backward by 43 meters then Turn left 45 degrees then Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 7).join()"}
{"instruction": "Please land then Move to coordinates (-52, 31, -5) then Retreat backward by 20 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-52, 31, -5, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift right by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 10).join()"}
{"instruction": "Move right 37 meters then Shift left by 6 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Shift right by 26 meters then Execute takeoff then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 9).join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 6).join()"}
{"instruction": "Initiate landing then Execute landing then Retreat backward by 49 meters", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 4).join()"}
{"instruction": "Move backward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 6).join()"}
{"instruction": "Move right 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 7).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move to coordinates (-58, -17, -17) then Move left 11 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-58, -17, -17, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 8).join()"}
{"instruction": "Move right 41 meters then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move forward 9 meters then Advance forward by 50 meters then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Advance forward by 9 meters then Advance forward by 13 meters then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Fly to (72, -82, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, -82, -17, 4).join()"}
{"instruction": "Move to coordinates (38, 95, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(38, 95, -17, 6).join()"}
{"instruction": "Move to coordinates (-77, -85, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-77, -85, -10, 8).join()"}
{"instruction": "Shift left by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 9).join()"}
{"instruction": "Retreat backward by 43 meters then Move right 32 meters then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Retreat backward by 38 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 6 meters then Maintain hover for 3 seconds then Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 7).join()"}
{"instruction": "Take off then Shift left by 41 meters then Move right 8 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 4).join()"}
{"instruction": "Turn left 60 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.landAsync().join()"}
{"instruction": "Shift right by 49 meters then Turn right 15 degrees then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move forward 48 meters then Shift right by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 3).join()"}
{"instruction": "Turn right 60 degrees then Maintain hover for 4 seconds then Move to coordinates (77, 96, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(77, 96, -17, 6).join()"}
{"instruction": "Rotate right by 45 degrees then Initiate takeoff sequence then Retreat backward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-21, -59, -18) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-21, -59, -18, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 10).join()"}
{"instruction": "Take off then Move right 11 meters then Move to coordinates (-91, -71, -6)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-91, -71, -6, 4).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 4).join()"}
{"instruction": "Shift right by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 6).join()"}
{"instruction": "Move left 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 9).join()"}
{"instruction": "Execute takeoff then Hover for 10 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 7).join()"}
{"instruction": "Rotate right by 45 degrees then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Maintain hover for 3 seconds then Advance forward by 49 meters then Move to coordinates (84, -94, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(84, -94, -18, 4).join()"}
{"instruction": "Move left 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 5).join()"}
{"instruction": "Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Fly to (-38, -52, -18) then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-38, -52, -18, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move backward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 9).join()"}
{"instruction": "Move right 36 meters then Hover for 6 seconds then Retreat backward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 8).join()"}
{"instruction": "Move right 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 6).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 11 meters then Move to coordinates (-35, 74, -20) then Shift left by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-35, 74, -20, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 5).join()"}
{"instruction": "Turn right 30 degrees then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 90 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move backward 23 meters then Hover for 4 seconds then Move forward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 5).join()"}
{"instruction": "Fly to (94, -82, -15) then Move forward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(94, -82, -15, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (81, -29, -6) then Move left 8 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(81, -29, -6, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (30, -92, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(30, -92, -18, 7).join()"}
{"instruction": "Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 4).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move right 17 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-94, 76, -9) then Retreat backward by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-94, 76, -9, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 10).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Retreat backward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 4).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 38 meters then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Turn left 45 degrees then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Please land then Initiate takeoff sequence then Shift left by 41 meters", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 9).join()"}
{"instruction": "Shift right by 48 meters then Move to coordinates (50, 12, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(50, 12, -18, 6).join()"}
{"instruction": "Move forward 26 meters then Initiate takeoff sequence then Move to coordinates (-52, -69, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 8).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-52, -69, -18, 7).join()"}
{"instruction": "Move to coordinates (5, 47, -18) then Retreat backward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(5, 47, -18, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 45 degrees then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-74, -83, -7) then Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-74, -83, -7, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 47 meters then Shift left by 18 meters then Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 4).join()"}
{"instruction": "Maintain hover for 6 seconds then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-38, -70, -13) then Shift left by 41 meters then Retreat backward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-38, -70, -13, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 8).join()"}
{"instruction": "Move backward 41 meters then Move to coordinates (3, -26, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(3, -26, -13, 10).join()"}
{"instruction": "Take off then Rotate right by 60 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please take off then Land", "api_call": "client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Retreat backward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 5).join()"}
{"instruction": "Move backward 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 5).join()"}
{"instruction": "Move right 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 9).join()"}
{"instruction": "Take off then Land then Initiate landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Move forward 41 meters then Move right 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 9).join()"}
{"instruction": "Shift left by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 8).join()"}
{"instruction": "Retreat backward by 33 meters then Rotate right by 15 degrees then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate right by 45 degrees then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 90 degrees then Move backward 40 meters then Move to coordinates (-87, 39, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-87, 39, -8, 8).join()"}
{"instruction": "Shift right by 14 meters then Fly to (79, -3, -7) then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(79, -3, -7, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Advance forward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 10).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (78, -10, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, -10, -17, 7).join()"}
{"instruction": "Please take off then Take off", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate left by 90 degrees then Fly to (29, 48, -10) then Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, 48, -10, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-18, 37, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-18, 37, -6, 4).join()"}
{"instruction": "Shift left by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 9).join()"}
{"instruction": "Retreat backward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 10).join()"}
{"instruction": "Move right 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 7).join()"}
{"instruction": "Shift left by 10 meters then Rotate left by 90 degrees then Move right 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 5).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-85, -62, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-85, -62, -13, 9).join()"}
{"instruction": "Move to coordinates (44, -28, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(44, -28, -10, 4).join()"}
{"instruction": "Retreat backward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 3).join()"}
{"instruction": "Turn left 60 degrees then Execute landing then Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 5).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Please land then Turn right 45 degrees then Move forward 23 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 6).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 28 meters then Advance forward by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 4).join()"}
{"instruction": "Move forward 37 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 7).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Retreat backward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 10).join()"}
{"instruction": "Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 9).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 7).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 6).join()"}
{"instruction": "Turn right 45 degrees then Initiate takeoff sequence then Move left 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 4).join()"}
{"instruction": "Execute takeoff then Rotate left by 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Take off then Turn right 60 degrees then Retreat backward by 39 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 6).join()"}
{"instruction": "Move right 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 7).join()"}
{"instruction": "Turn right 30 degrees then Rotate left by 15 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 30 degrees then Turn left 30 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.takeoffAsync().join()"}
{"instruction": "Turn left 30 degrees then Move forward 32 meters then Shift left by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 6).join()"}
{"instruction": "Move to coordinates (-69, 12, -18) then Maintain hover for 10 seconds then Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-69, 12, -18, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 6).join()"}
{"instruction": "Move forward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 8).join()"}
{"instruction": "Move left 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 5).join()"}
{"instruction": "Move left 37 meters then Hover for 10 seconds then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Shift left by 14 meters then Shift right by 23 meters then Fly to (99, 94, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(99, 94, -7, 7).join()"}
{"instruction": "Rotate left by 30 degrees then Shift left by 40 meters then Shift left by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 9).join()"}
{"instruction": "Shift right by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 4).join()"}
{"instruction": "Move left 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 10).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff then Move backward 50 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 6).join()"}
{"instruction": "Fly to (64, 77, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(64, 77, -18, 5).join()"}
{"instruction": "Turn left 15 degrees then Retreat backward by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 5).join()"}
{"instruction": "Shift right by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 8).join()"}
{"instruction": "Move right 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 4).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 5).join()"}
{"instruction": "Turn left 15 degrees then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 9).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 8 meters then Advance forward by 24 meters then Shift right by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 6).join()"}
{"instruction": "Move backward 17 meters then Advance forward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 4).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move forward 9 meters then Rotate right by 90 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 15 meters then Move right 26 meters then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 41 meters then Move left 32 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 9).join()"}
{"instruction": "Move forward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 3).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Shift left by 26 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 45 degrees then Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 5).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (-3, 34, -19) then Move forward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-3, 34, -19, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 9).join()"}
{"instruction": "Move left 5 meters then Please take off then Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 3).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 6).join()"}
{"instruction": "Turn left 30 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 3).join()"}
{"instruction": "Execute landing then Turn left 30 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move right 41 meters then Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 8).join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 8).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move right 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 10).join()"}
{"instruction": "Fly to (-65, 19, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-65, 19, -8, 5).join()"}
{"instruction": "Move to coordinates (-47, 9, -7) then Please land then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-47, 9, -7, 3).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Fly to (42, -3, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(42, -3, -10, 5).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move left 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 3).join()"}
{"instruction": "Advance forward by 39 meters then Please take off then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 7).join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate landing then Move to coordinates (61, 53, -16) then Move to coordinates (44, -52, -7)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(61, 53, -16, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(44, -52, -7, 8).join()"}
{"instruction": "Move left 47 meters then Fly to (10, -42, -12) then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(10, -42, -12, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move right 14 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Rotate left by 45 degrees then Execute takeoff then Move left 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 10).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move right 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 3).join()"}
{"instruction": "Move to coordinates (18, -89, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(18, -89, -19, 7).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Maintain hover for 3 seconds then Move right 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 10).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Fly to (98, 13, -5) then Shift left by 14 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(98, 13, -5, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Retreat backward by 13 meters then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate right by 60 degrees then Land then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Hover for 4 seconds then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.landAsync().join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift left by 29 meters then Shift right by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 3).join()"}
{"instruction": "Move right 21 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift right by 37 meters then Rotate left by 60 degrees then Move left 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 7).join()"}
{"instruction": "Move backward 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 10).join()"}
{"instruction": "Turn right 90 degrees then Move left 20 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 7).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 6).join()"}
{"instruction": "Shift left by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 3).join()"}
{"instruction": "Initiate takeoff sequence then Execute takeoff then Shift left by 42 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 7).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 3).join()"}
{"instruction": "Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 8).join()"}
{"instruction": "Move forward 8 meters then Shift left by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 6).join()"}
{"instruction": "Advance forward by 46 meters then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move left 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 5).join()"}
{"instruction": "Move to coordinates (43, 98, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(43, 98, -7, 8).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Land then Advance forward by 46 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 4).join()"}
{"instruction": "Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 7).join()"}
{"instruction": "Move to coordinates (50, 27, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(50, 27, -10, 3).join()"}
{"instruction": "Move to coordinates (62, -63, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(62, -63, -14, 6).join()"}
{"instruction": "Move backward 25 meters then Move left 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 3).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Turn left 90 degrees then Shift left by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 5).join()"}
{"instruction": "Turn right 30 degrees then Move backward 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 3).join()"}
{"instruction": "Move left 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 5).join()"}
{"instruction": "Move left 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 6).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 4).join()"}
{"instruction": "Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 9).join()"}
{"instruction": "Fly to (-43, 37, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-43, 37, -13, 8).join()"}
{"instruction": "Move forward 23 meters then Fly to (45, 61, -11) then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(45, 61, -11, 10).join() then client.landAsync().join()"}
{"instruction": "Shift left by 23 meters then Initiate landing then Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 8).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 6).join()"}
{"instruction": "Fly to (-90, -69, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-90, -69, -17, 4).join()"}
{"instruction": "Advance forward by 40 meters then Take off then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 5).join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Rotate right by 90 degrees then Advance forward by 12 meters then Advance forward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 8).join()"}
{"instruction": "Move backward 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 6).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (41, -38, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(41, -38, -7, 8).join()"}
{"instruction": "Please land then Take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 45 degrees then Retreat backward by 46 meters then Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 6).join()"}
{"instruction": "Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 4).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Land then Rotate left by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate left by 15 degrees then Turn left 15 degrees then Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (-21, -35, -18) then Advance forward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-21, -35, -18, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 6).join()"}
{"instruction": "Execute takeoff then Turn right 30 degrees then Turn left 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move to coordinates (-62, 1, -8) then Move forward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-62, 1, -8, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 5).join()"}
{"instruction": "Move backward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 4).join()"}
{"instruction": "Shift left by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 3).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 90 degrees then Retreat backward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 3).join()"}
{"instruction": "Rotate right by 30 degrees then Fly to (46, -16, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(46, -16, -14, 9).join()"}
{"instruction": "Execute landing then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 46 meters then Move left 23 meters then Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 5).join()"}
{"instruction": "Execute takeoff then Move to coordinates (34, 17, -20)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(34, 17, -20, 10).join()"}
{"instruction": "Please land then Fly to (6, 17, -14)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(6, 17, -14, 8).join()"}
{"instruction": "Shift right by 44 meters then Move to coordinates (-54, -84, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-54, -84, -20, 6).join()"}
{"instruction": "Move left 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 3).join()"}
{"instruction": "Fly to (-38, -87, -18) then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-38, -87, -18, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 10).join()"}
{"instruction": "Move forward 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 22 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 9).join() then client.landAsync().join()"}
{"instruction": "Hover for 6 seconds then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Fly to (87, 15, -15) then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(87, 15, -15, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join()"}
{"instruction": "Fly to (58, -95, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(58, -95, -6, 3).join()"}
{"instruction": "Move to coordinates (21, -22, -11) then Move to coordinates (-5, 28, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, -22, -11, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-5, 28, -14, 8).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 4).join()"}
{"instruction": "Land then Rotate left by 90 degrees then Turn right 15 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn right 30 degrees then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 13 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 10).join()"}
{"instruction": "Turn right 90 degrees then Hover for 10 seconds then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Shift left by 35 meters then Move to coordinates (87, 57, -9) then Shift left by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(87, 57, -9, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 5).join()"}
{"instruction": "Land then Move left 11 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 8).join()"}
{"instruction": "Shift left by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 10).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please take off then Shift right by 50 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 7).join()"}
{"instruction": "Move backward 15 meters then Move to coordinates (29, 14, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, 14, -8, 3).join()"}
{"instruction": "Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 8 seconds then Move backward 31 meters then Advance forward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 5).join()"}
{"instruction": "Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 7).join()"}
{"instruction": "Shift left by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 8).join()"}
{"instruction": "Take off then Retreat backward by 45 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 5).join()"}
{"instruction": "Move left 40 meters then Move to coordinates (29, 5, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, 5, -18, 9).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 38 meters then Move left 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 3).join()"}
{"instruction": "Move left 11 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 38 meters then Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 10).join()"}
{"instruction": "Initiate landing then Shift right by 8 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute landing then Move right 13 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 3).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 30 degrees then Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 9).join()"}
{"instruction": "Shift right by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 5).join()"}
{"instruction": "Move right 47 meters then Move right 18 meters then Shift right by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 3).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate left by 90 degrees then Advance forward by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 44 meters then Rotate left by 30 degrees then Shift left by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 8).join()"}
{"instruction": "Maintain hover for 9 seconds then Advance forward by 32 meters then Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 9).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move right 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 6).join()"}
{"instruction": "Fly to (-32, 14, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, 14, -7, 3).join()"}
{"instruction": "Shift left by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 4).join()"}
{"instruction": "Rotate right by 60 degrees then Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 10).join()"}
{"instruction": "Take off then Turn right 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Retreat backward by 21 meters then Advance forward by 29 meters then Retreat backward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 10).join()"}
{"instruction": "Fly to (-26, 48, -5) then Advance forward by 8 meters then Retreat backward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-26, 48, -5, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 8).join()"}
{"instruction": "Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 3).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move backward 35 meters then Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 6).join()"}
{"instruction": "Maintain hover for 8 seconds then Shift right by 39 meters then Advance forward by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 5).join()"}
{"instruction": "Rotate left by 30 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate left by 90 degrees then Move left 48 meters then Shift right by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 4).join()"}
{"instruction": "Move forward 7 meters then Move to coordinates (59, 83, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(59, 83, -7, 3).join()"}
{"instruction": "Shift right by 31 meters then Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 4).join()"}
{"instruction": "Fly to (31, 51, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(31, 51, -15, 5).join()"}
{"instruction": "Retreat backward by 50 meters then Move backward 35 meters then Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 4).join()"}
{"instruction": "Fly to (91, 78, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, 78, -20, 10).join()"}
{"instruction": "Shift right by 45 meters then Move forward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 3).join()"}
{"instruction": "Initiate landing then Initiate landing then Move left 33 meters", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 10).join()"}
{"instruction": "Rotate right by 90 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (-24, -54, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-24, -54, -20, 4).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (64, 36, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(64, 36, -8, 4).join()"}
{"instruction": "Move to coordinates (74, 43, -18) then Fly to (-41, 5, -16) then Shift right by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(74, 43, -18, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-41, 5, -16, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 4).join()"}
{"instruction": "Turn right 15 degrees then Shift left by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 5).join()"}
{"instruction": "Fly to (74, 21, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(74, 21, -8, 4).join()"}
{"instruction": "Initiate takeoff sequence then Land", "api_call": "client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Move forward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 10).join()"}
{"instruction": "Move right 8 meters then Move forward 6 meters then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Advance forward by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 9).join()"}
{"instruction": "Move to coordinates (-56, 62, -10) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-56, 62, -10, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 7).join()"}
{"instruction": "Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 6).join()"}
{"instruction": "Execute landing then Advance forward by 28 meters then Move left 20 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 3).join()"}
{"instruction": "Land then Fly to (-49, 38, -10)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-49, 38, -10, 3).join()"}
{"instruction": "Shift left by 30 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 10).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 24 meters then Shift right by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 10).join()"}
{"instruction": "Fly to (-59, 22, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-59, 22, -20, 3).join()"}
{"instruction": "Move backward 20 meters then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Fly to (16, -11, -7) then Retreat backward by 43 meters then Advance forward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(16, -11, -7, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Execute landing then Move backward 39 meters then Move right 14 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 3).join()"}
{"instruction": "Turn left 60 degrees then Shift left by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 6).join()"}
{"instruction": "Shift left by 11 meters then Move to coordinates (71, -17, -14) then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(71, -17, -14, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Take off then Shift left by 15 meters then Advance forward by 24 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 8).join()"}
{"instruction": "Please take off then Retreat backward by 30 meters then Fly to (-99, -50, -17)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-99, -50, -17, 3).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Fly to (13, -95, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(13, -95, -7, 10).join()"}
{"instruction": "Move to coordinates (-94, 66, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-94, 66, -10, 7).join()"}
{"instruction": "Fly to (23, -40, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(23, -40, -11, 8).join()"}
{"instruction": "Turn right 60 degrees then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move backward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (81, -88, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(81, -88, -5, 7).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move left 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 6).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-48, -47, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, -47, -6, 10).join()"}
{"instruction": "Move to coordinates (-24, -42, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-24, -42, -16, 7).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land then Move forward 19 meters then Rotate left by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Please land then Fly to (-47, -13, -5)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-47, -13, -5, 6).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 9).join()"}
{"instruction": "Please land then Execute landing then Turn left 60 degrees", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Fly to (-85, -30, -7) then Shift right by 19 meters then Move right 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-85, -30, -7, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 4).join()"}
{"instruction": "Rotate right by 90 degrees then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Turn right 90 degrees then Take off then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move forward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 3).join()"}
{"instruction": "Retreat backward by 29 meters then Turn left 15 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join()"}
{"instruction": "Advance forward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 8).join()"}
{"instruction": "Maintain hover for 9 seconds then Move backward 26 meters then Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 7).join()"}
{"instruction": "Turn left 15 degrees then Rotate left by 30 degrees then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.landAsync().join()"}
{"instruction": "Move right 11 meters then Move forward 10 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 47 meters then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move forward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 6).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 34 meters then Move to coordinates (63, 79, -7) then Move forward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(63, 79, -7, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 5).join()"}
{"instruction": "Advance forward by 34 meters then Shift left by 34 meters then Advance forward by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 9).join()"}
{"instruction": "Turn right 15 degrees then Shift right by 47 meters then Move backward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 10).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move right 37 meters then Shift left by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 6).join()"}
{"instruction": "Shift left by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 3).join()"}
{"instruction": "Move left 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 5).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 10).join()"}
{"instruction": "Shift right by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 6).join()"}
{"instruction": "Fly to (50, -84, -11) then Hover for 3 seconds then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(50, -84, -11, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move to coordinates (2, -96, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, -96, -18, 10).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move forward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 10).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 3).join()"}
{"instruction": "Move backward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 5).join()"}
{"instruction": "Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 6).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 3).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 48 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 6).join()"}
{"instruction": "Rotate left by 15 degrees then Shift left by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 10).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land then Fly to (-48, -92, -7) then Initiate takeoff sequence", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, -92, -7, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Please take off then Move forward 15 meters then Move backward 46 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 3).join()"}
{"instruction": "Move right 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 3).join()"}
{"instruction": "Please take off then Retreat backward by 31 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 10).join()"}
{"instruction": "Move forward 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 9).join()"}
{"instruction": "Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 4).join()"}
{"instruction": "Retreat backward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 20 meters then Hover for 8 seconds then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Please land then Shift left by 34 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 7).join()"}
{"instruction": "Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 10).join()"}
{"instruction": "Retreat backward by 5 meters then Take off then Move to coordinates (66, -3, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 3).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(66, -3, -19, 5).join()"}
{"instruction": "Move to coordinates (98, 92, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(98, 92, -8, 3).join()"}
{"instruction": "Execute takeoff then Fly to (-3, 28, -12) then Move forward 34 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-3, 28, -12, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 8).join()"}
{"instruction": "Turn right 15 degrees then Shift left by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 4).join()"}
{"instruction": "Hover for 10 seconds then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move right 21 meters then Shift right by 38 meters then Retreat backward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 7).join()"}
{"instruction": "Move right 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 5).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 6).join()"}
{"instruction": "Retreat backward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 10).join()"}
{"instruction": "Advance forward by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 3).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Fly to (55, 55, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(55, 55, -5, 9).join()"}
{"instruction": "Retreat backward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 10).join()"}
{"instruction": "Move to coordinates (100, 8, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(100, 8, -6, 10).join()"}
{"instruction": "Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 5).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 4).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move left 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 8).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Maintain hover for 6 seconds then Fly to (65, -17, -8) then Shift right by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(65, -17, -8, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 8).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 8 seconds then Move forward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 3).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Land then Turn left 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 50 meters then Advance forward by 49 meters then Move backward 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 6).join()"}
{"instruction": "Land then Fly to (-22, -2, -15)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-22, -2, -15, 4).join()"}
{"instruction": "Rotate right by 45 degrees then Rotate left by 30 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 4).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move right 41 meters then Initiate landing then Move right 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 3).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 7).join()"}
{"instruction": "Move to coordinates (11, -68, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(11, -68, -18, 8).join()"}
{"instruction": "Advance forward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence then Turn left 30 degrees then Turn right 15 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Retreat backward by 20 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 30 degrees then Move backward 25 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 9).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (71, 8, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(71, 8, -15, 7).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move to coordinates (-39, -44, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-39, -44, -15, 3).join()"}
{"instruction": "Maintain hover for 7 seconds then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Maintain hover for 8 seconds then Please take off then Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 5).join()"}
{"instruction": "Shift left by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 3).join()"}
{"instruction": "Move to coordinates (87, 62, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(87, 62, -19, 10).join()"}
{"instruction": "Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 7).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 15 degrees then Shift right by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 10).join()"}
{"instruction": "Retreat backward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 9).join()"}
{"instruction": "Retreat backward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 5).join()"}
{"instruction": "Rotate right by 90 degrees then Initiate landing then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move forward 33 meters then Shift left by 8 meters then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please take off then Initiate landing then Initiate landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move backward 10 meters then Initiate takeoff sequence then Retreat backward by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 8).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 9).join()"}
{"instruction": "Execute takeoff then Move backward 24 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 7).join()"}
{"instruction": "Move to coordinates (70, 2, -9) then Move forward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(70, 2, -9, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 3).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 90 degrees then Turn right 15 degrees then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Maintain hover for 10 seconds then Execute landing then Fly to (32, 6, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(32, 6, -12, 8).join()"}
{"instruction": "Move right 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 4).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Land then Move right 21 meters then Move to coordinates (87, -90, -14)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(87, -90, -14, 9).join()"}
{"instruction": "Advance forward by 30 meters then Turn right 90 degrees then Advance forward by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence then Advance forward by 27 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 9).join()"}
{"instruction": "Move to coordinates (68, -52, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(68, -52, -12, 3).join()"}
{"instruction": "Fly to (21, 0, -11) then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, 0, -11, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 5).join()"}
{"instruction": "Rotate left by 30 degrees then Take off then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Move right 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 5).join()"}
{"instruction": "Initiate takeoff sequence then Shift left by 44 meters then Rotate right by 60 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move backward 39 meters then Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 9).join()"}
{"instruction": "Retreat backward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (-94, 96, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-94, 96, -18, 9).join()"}
{"instruction": "Execute landing then Rotate left by 45 degrees then Rotate right by 30 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 90 degrees then Move forward 21 meters then Shift left by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 6).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Retreat backward by 47 meters then Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 9).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 10).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Please take off then Rotate left by 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 90 degrees then Move to coordinates (-29, -63, -17) then Move right 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-29, -63, -17, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 10).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move right 5 meters then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 8 seconds then Move right 37 meters then Fly to (-93, -54, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-93, -54, -19, 8).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move to coordinates (59, 42, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(59, 42, -17, 3).join()"}
{"instruction": "Shift right by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 9).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move left 23 meters then Rotate left by 30 degrees then Retreat backward by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 9).join()"}
{"instruction": "Move backward 30 meters then Fly to (39, 40, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(39, 40, -16, 5).join()"}
{"instruction": "Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate right by 90 degrees then Fly to (52, 24, -12) then Retreat backward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(52, 24, -12, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 5).join()"}
{"instruction": "Shift right by 41 meters then Move left 20 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 9 seconds then Retreat backward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 4).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift right by 36 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff then Turn right 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Initiate landing then Please take off then Turn right 60 degrees", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 15 degrees then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Shift left by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 8).join()"}
{"instruction": "Move left 36 meters then Shift right by 13 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Move left 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 3).join()"}
{"instruction": "Move backward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing then Rotate right by 15 degrees then Move backward 40 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (61, -16, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(61, -16, -11, 6).join()"}
{"instruction": "Move backward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (14, 61, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(14, 61, -12, 3).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 3).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Fly to (-56, 3, -10) then Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-56, 3, -10, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 4).join()"}
{"instruction": "Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 3).join()"}
{"instruction": "Move left 9 meters then Turn right 15 degrees then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move right 15 meters then Shift left by 8 meters then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move forward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 6).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Turn right 60 degrees then Move to coordinates (-27, 51, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-27, 51, -5, 7).join()"}
{"instruction": "Fly to (-77, -4, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-77, -4, -9, 9).join()"}
{"instruction": "Fly to (89, -2, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(89, -2, -16, 4).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Retreat backward by 44 meters then Please land then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 8).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move backward 47 meters then Move backward 26 meters then Move left 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 60 degrees then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 7 meters then Rotate right by 90 degrees then Move to coordinates (89, -9, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(89, -9, -17, 3).join()"}
{"instruction": "Fly to (-86, 72, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-86, 72, -13, 10).join()"}
{"instruction": "Move forward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (81, -4, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(81, -4, -14, 8).join()"}
{"instruction": "Hover for 3 seconds then Fly to (24, 60, -5) then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(24, 60, -5, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 45 degrees then Initiate landing then Move right 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 7).join()"}
{"instruction": "Move right 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 8).join()"}
{"instruction": "Move left 7 meters then Initiate takeoff sequence then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 6).join() then client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 21 meters then Move to coordinates (97, 52, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(97, 52, -10, 4).join()"}
{"instruction": "Move forward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 9).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 9).join()"}
{"instruction": "Advance forward by 20 meters then Move backward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 10).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move left 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 6).join()"}
{"instruction": "Retreat backward by 24 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 8).join()"}
{"instruction": "Initiate landing then Shift right by 41 meters then Rotate left by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 7 meters then Move backward 35 meters then Move backward 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 3).join()"}
{"instruction": "Retreat backward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 8 seconds then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.landAsync().join()"}
{"instruction": "Move to coordinates (36, -19, -12) then Hover for 10 seconds then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(36, -19, -12, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then client.takeoffAsync().join()"}
{"instruction": "Shift right by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 4).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift right by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 8).join()"}
{"instruction": "Rotate right by 15 degrees then Move left 34 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Fly to (7, -37, -13) then Fly to (1, 25, -19) then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(7, -37, -13, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(1, 25, -19, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Turn right 90 degrees then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (71, 39, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(71, 39, -13, 3).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Maintain hover for 4 seconds then Rotate left by 45 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn right 60 degrees then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 15 degrees then Please land then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Initiate takeoff sequence then Rotate right by 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move to coordinates (-12, 13, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-12, 13, -16, 9).join()"}
{"instruction": "Shift left by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 6).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move to coordinates (2, 41, -13) then Turn left 30 degrees then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, 41, -13, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Initiate landing then Turn left 30 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Maintain hover for 5 seconds then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.landAsync().join()"}
{"instruction": "Shift left by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 10).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate left by 15 degrees then Take off then Shift right by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 5).join()"}
{"instruction": "Rotate right by 45 degrees then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence then Rotate right by 15 degrees then Take off", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.takeoffAsync().join()"}
{"instruction": "Move right 24 meters then Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift right by 27 meters then Move left 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 7).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 6).join()"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 5).join()"}
{"instruction": "Rotate right by 15 degrees then Move forward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 5).join()"}
{"instruction": "Move forward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 10).join()"}
{"instruction": "Move to coordinates (21, 32, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, 32, -7, 5).join()"}
{"instruction": "Shift right by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 5).join()"}
{"instruction": "Move forward 38 meters then Fly to (-2, -60, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-2, -60, -5, 4).join()"}
{"instruction": "Initiate landing then Advance forward by 21 meters then Move left 15 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 8).join()"}
{"instruction": "Shift right by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 10).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (76, -47, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(76, -47, -8, 6).join()"}
{"instruction": "Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 6).join()"}
{"instruction": "Land then Initiate takeoff sequence then Execute takeoff", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Initiate landing then Move backward 20 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 3).join()"}
{"instruction": "Shift left by 47 meters then Shift right by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 7).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Retreat backward by 36 meters then Advance forward by 42 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift left by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 6).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 26 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn left 45 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 3).join()"}
{"instruction": "Move forward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 8).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 60 degrees then Execute landing then Move to coordinates (18, -70, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(18, -70, -18, 8).join()"}
{"instruction": "Move to coordinates (-80, -96, -20) then Move right 36 meters then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-80, -96, -20, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate left by 90 degrees then Shift right by 37 meters then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift left by 44 meters then Move backward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 5).join()"}
{"instruction": "Maintain hover for 9 seconds then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then client.landAsync().join()"}
{"instruction": "Hover for 9 seconds then Execute takeoff then Move backward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 6).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Retreat backward by 24 meters then Shift right by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 4).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Execute landing then Rotate right by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 26 meters then Execute takeoff then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Advance forward by 6 meters then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move right 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 7).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 5 seconds then Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 10).join()"}
{"instruction": "Move backward 11 meters then Turn left 15 degrees then Retreat backward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 4).join()"}
{"instruction": "Advance forward by 24 meters then Shift right by 21 meters then Move to coordinates (27, -16, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(27, -16, -17, 7).join()"}
{"instruction": "Land then Execute takeoff then Turn left 30 degrees", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift left by 30 meters then Retreat backward by 17 meters then Retreat backward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 9).join()"}
{"instruction": "Take off then Hover for 7 seconds then Move backward 19 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 4).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 9).join()"}
{"instruction": "Maintain hover for 4 seconds then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Hover for 9 seconds then Fly to (-4, 41, -13) then Move right 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-4, 41, -13, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 3).join()"}
{"instruction": "Maintain hover for 3 seconds then Shift right by 6 meters then Move forward 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 9).join()"}
{"instruction": "Turn left 45 degrees then Shift left by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 9).join()"}
{"instruction": "Shift left by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 10).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move right 9 meters then Initiate takeoff sequence then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 5).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Hover for 7 seconds then Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 4).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Execute landing then Initiate landing then Hover for 10 seconds", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move forward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 5).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Execute takeoff then Execute takeoff then Retreat backward by 43 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 3).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Land then Turn left 90 degrees then Move backward 49 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 8).join()"}
{"instruction": "Move left 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 6).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move left 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 3).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 30 degrees then Retreat backward by 21 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Turn right 90 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Shift right by 26 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Initiate takeoff sequence then Move to coordinates (74, -66, -10) then Turn right 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(74, -66, -10, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move right 43 meters then Move forward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 8).join()"}
{"instruction": "Turn right 60 degrees then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (-73, -17, -19) then Move right 38 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-73, -17, -19, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Maintain hover for 8 seconds then Initiate takeoff sequence then Shift left by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 6).join()"}
{"instruction": "Hover for 7 seconds then Shift left by 10 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 4).join() then client.landAsync().join()"}
{"instruction": "Rotate left by 15 degrees then Move forward 42 meters then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Initiate takeoff sequence then Move backward 11 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 10).join()"}
{"instruction": "Move backward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 10).join()"}
{"instruction": "Rotate left by 30 degrees then Please take off then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 3).join()"}
{"instruction": "Move to coordinates (-81, -62, -6) then Turn right 60 degrees then Move backward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-81, -62, -6, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 8).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move to coordinates (-66, -70, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-66, -70, -6, 4).join()"}
{"instruction": "Initiate landing then Turn left 90 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Shift right by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 10).join()"}
{"instruction": "Rotate left by 30 degrees then Fly to (96, -83, -5) then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(96, -83, -5, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Execute takeoff then Hover for 9 seconds then Fly to (-48, 54, -12)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, 54, -12, 4).join()"}
{"instruction": "Advance forward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 4).join()"}
{"instruction": "Turn left 60 degrees then Take off then Move to coordinates (-10, 39, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-10, 39, -8, 10).join()"}
{"instruction": "Please take off then Move to coordinates (25, 60, -20) then Land", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(25, 60, -20, 7).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (-5, -43, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-5, -43, -9, 4).join()"}
{"instruction": "Shift left by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 9).join()"}
{"instruction": "Fly to (58, -86, -17) then Initiate landing then Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(58, -86, -17, 9).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 8).join()"}
{"instruction": "Maintain hover for 10 seconds then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff then Move right 44 meters then Execute landing", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Shift right by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 8).join()"}
{"instruction": "Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 3).join()"}
{"instruction": "Retreat backward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 10).join()"}
{"instruction": "Move backward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 5).join()"}
{"instruction": "Fly to (84, 70, -13) then Maintain hover for 6 seconds then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(84, 70, -13, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn right 15 degrees then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move backward 33 meters then Initiate takeoff sequence then Retreat backward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 8).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 4).join()"}
{"instruction": "Fly to (-93, 74, -12) then Rotate left by 60 degrees then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-93, 74, -12, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Fly to (-45, 41, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-45, 41, -5, 10).join()"}
{"instruction": "Turn left 15 degrees then Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Rotate right by 90 degrees then Move to coordinates (-72, 30, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-72, 30, -17, 8).join()"}
{"instruction": "Retreat backward by 37 meters then Take off then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 4).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land then Advance forward by 40 meters then Move left 11 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 8).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff then Maintain hover for 3 seconds then Please take off", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then client.takeoffAsync().join()"}
{"instruction": "Execute takeoff then Take off", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 5).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move left 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 9).join()"}
{"instruction": "Land then Move right 17 meters then Move left 9 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 8).join()"}
{"instruction": "Retreat backward by 49 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 6).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 60 degrees then Move to coordinates (-89, 68, -5) then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-89, 68, -5, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 9 meters then Move forward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 8).join()"}
{"instruction": "Fly to (-36, 7, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-36, 7, -12, 3).join()"}
{"instruction": "Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 6).join()"}
{"instruction": "Retreat backward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 9).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 10).join()"}
{"instruction": "Move left 44 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Move backward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 5).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (-1, 28, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-1, 28, -17, 4).join()"}
{"instruction": "Shift right by 21 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 7).join()"}
{"instruction": "Retreat backward by 40 meters then Advance forward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-97, -70, -5) then Rotate left by 45 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-97, -70, -5, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees then Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 5).join()"}
{"instruction": "Move forward 39 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Initiate landing then Rotate left by 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 38 meters then Move right 10 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move right 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 7).join()"}
{"instruction": "Advance forward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 9).join()"}
{"instruction": "Execute takeoff then Rotate left by 60 degrees then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 3).join()"}
{"instruction": "Move forward 38 meters then Shift left by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 6).join()"}
{"instruction": "Retreat backward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 7).join()"}
{"instruction": "Turn right 60 degrees then Maintain hover for 8 seconds then Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 3).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (81, 24, -9) then Move to coordinates (54, -64, -12) then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(81, 24, -9, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(54, -64, -12, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence then Move forward 48 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 90 degrees then Shift left by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 8).join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 4).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 5).join()"}
{"instruction": "Move forward 36 meters then Shift right by 11 meters then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn left 60 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.landAsync().join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Maintain hover for 8 seconds then Retreat backward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 9).join()"}
{"instruction": "Move forward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 6).join()"}
{"instruction": "Hover for 6 seconds then Please land then Move to coordinates (-7, 54, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-7, 54, -8, 4).join()"}
{"instruction": "Advance forward by 41 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 14 meters then Shift left by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 4).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 10).join()"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 3).join()"}
{"instruction": "Fly to (-11, 73, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-11, 73, -11, 8).join()"}
{"instruction": "Shift left by 45 meters then Please land then Shift right by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 3).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 8).join()"}
{"instruction": "Move backward 11 meters then Fly to (-18, 56, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-18, 56, -14, 10).join()"}
{"instruction": "Move backward 23 meters then Move to coordinates (-13, 38, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-13, 38, -6, 3).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Please land then Shift right by 49 meters then Shift right by 14 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 8).join()"}
{"instruction": "Move to coordinates (-100, 15, -16) then Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-100, 15, -16, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 4).join()"}
{"instruction": "Move backward 31 meters then Move backward 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 6).join()"}
{"instruction": "Hover for 8 seconds then Fly to (-90, -63, -10) then Move to coordinates (77, -64, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-90, -63, -10, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(77, -64, -17, 8).join()"}
{"instruction": "Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 6).join()"}
{"instruction": "Shift right by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 3).join()"}
{"instruction": "Shift left by 5 meters then Retreat backward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 3).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off then Shift right by 27 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 10).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 90 degrees then Move backward 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 28 meters then Move right 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 5).join()"}
{"instruction": "Move to coordinates (57, -89, -15) then Shift right by 33 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(57, -89, -15, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift left by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 10).join()"}
{"instruction": "Move forward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 3).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 15 degrees then Fly to (56, 79, -12) then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(56, 79, -12, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 5).join()"}
{"instruction": "Hover for 3 seconds then Execute landing then Fly to (45, 41, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(45, 41, -12, 5).join()"}
{"instruction": "Move backward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 8).join()"}
{"instruction": "Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move right 29 meters then Please take off then Move to coordinates (-75, -33, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 10).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -33, -13, 7).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift left by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 8).join()"}
{"instruction": "Move right 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 3).join()"}
{"instruction": "Move right 6 meters then Move left 13 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Rotate right by 90 degrees then Move right 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 9).join()"}
{"instruction": "Move backward 17 meters then Shift right by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 3).join()"}
{"instruction": "Retreat backward by 10 meters then Rotate left by 15 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 15 degrees then Advance forward by 30 meters then Move left 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 10).join()"}
{"instruction": "Retreat backward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 5).join()"}
{"instruction": "Advance forward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 9 meters then Shift left by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 9).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 5).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 10).join()"}
{"instruction": "Shift right by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 4).join()"}
{"instruction": "Initiate takeoff sequence then Rotate left by 30 degrees then Move to coordinates (67, -10, -14)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(67, -10, -14, 3).join()"}
{"instruction": "Move to coordinates (-31, 12, -11) then Shift right by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-31, 12, -11, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 8).join()"}
{"instruction": "Move backward 27 meters then Shift left by 41 meters then Move backward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 10).join()"}
{"instruction": "Move right 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 9).join()"}
{"instruction": "Fly to (-6, -44, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-6, -44, -16, 10).join()"}
{"instruction": "Turn left 45 degrees then Shift left by 37 meters then Fly to (-31, 12, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-31, 12, -17, 5).join()"}
{"instruction": "Turn right 30 degrees then Please land then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move right 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 5).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 6).join()"}
{"instruction": "Shift right by 42 meters then Move to coordinates (-20, -51, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-20, -51, -10, 10).join()"}
{"instruction": "Fly to (59, 87, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(59, 87, -7, 10).join()"}
{"instruction": "Retreat backward by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 8).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Shift left by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 3).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn left 60 degrees then Move to coordinates (-26, -65, -15) then Move to coordinates (58, -71, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-26, -65, -15, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(58, -71, -6, 9).join()"}
{"instruction": "Advance forward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 7).join()"}
{"instruction": "Rotate left by 15 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 7).join()"}
{"instruction": "Shift right by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 6).join()"}
{"instruction": "Move left 27 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 16 meters then Fly to (78, -70, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, -70, -10, 3).join()"}
{"instruction": "Retreat backward by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 6).join()"}
{"instruction": "Move right 34 meters then Move backward 46 meters then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 90 degrees then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.landAsync().join()"}
{"instruction": "Move forward 43 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 45 meters then Initiate landing then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 5).join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 45 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 6).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 60 degrees then Move to coordinates (-73, 83, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-73, 83, -6, 8).join()"}
{"instruction": "Take off then Retreat backward by 15 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 8).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 30 degrees then Shift right by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 9).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Take off then Please land then Turn left 60 degrees", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move backward 44 meters then Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 8).join()"}
{"instruction": "Move backward 35 meters then Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Fly to (-26, 20, -9) then Move right 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-26, 20, -9, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 3).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Retreat backward by 18 meters then Move to coordinates (-47, -9, -6) then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-47, -9, -6, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move forward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (91, -71, -10) then Move left 48 meters then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, -71, -10, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 34 meters then Move left 47 meters then Advance forward by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 5).join()"}
{"instruction": "Turn right 45 degrees then Retreat backward by 17 meters then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Shift left by 24 meters then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move left 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 3).join()"}
{"instruction": "Advance forward by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 7).join()"}
{"instruction": "Fly to (45, 21, -17) then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(45, 21, -17, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move backward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 6).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate right by 90 degrees then Move backward 6 meters then Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 10).join()"}
{"instruction": "Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-63, -23, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-63, -23, -14, 3).join()"}
{"instruction": "Shift right by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 10).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 4).join()"}
{"instruction": "Shift left by 29 meters then Move left 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 10).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 4).join()"}
{"instruction": "Turn left 60 degrees then Rotate left by 30 degrees then Shift left by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 8).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate left by 45 degrees then Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 5).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-39, 68, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-39, 68, -11, 6).join()"}
{"instruction": "Rotate left by 30 degrees then Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 30 degrees then Fly to (-90, -84, -10) then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-90, -84, -10, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 5).join()"}
{"instruction": "Advance forward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 10).join()"}
{"instruction": "Turn right 30 degrees then Please land then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move forward 14 meters then Move forward 49 meters then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move right 9 meters then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Fly to (79, -83, -5) then Shift right by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(79, -83, -5, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 4).join()"}
{"instruction": "Hover for 5 seconds then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.takeoffAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 16 meters then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift left by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 8).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Rotate left by 45 degrees then Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 4).join()"}
{"instruction": "Move right 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 3).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 28 meters then Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 6).join()"}
{"instruction": "Rotate right by 60 degrees then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join()"}
{"instruction": "Move right 32 meters then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move to coordinates (10, 20, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(10, 20, -12, 9).join()"}
{"instruction": "Take off then Shift right by 5 meters then Turn left 30 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Fly to (84, -31, -10) then Initiate landing then Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(84, -31, -10, 6).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 5).join()"}
{"instruction": "Fly to (18, -50, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(18, -50, -17, 7).join()"}
{"instruction": "Advance forward by 27 meters then Move left 5 meters then Shift right by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 7).join()"}
{"instruction": "Turn right 30 degrees then Move to coordinates (-3, 21, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-3, 21, -19, 9).join()"}
{"instruction": "Move left 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 5).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Turn left 15 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Shift right by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 4).join()"}
{"instruction": "Please take off then Turn right 45 degrees then Hover for 5 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move backward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (-26, 3, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-26, 3, -7, 9).join()"}
{"instruction": "Move to coordinates (16, -12, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(16, -12, -11, 6).join()"}
{"instruction": "Turn left 15 degrees then Shift left by 10 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 5 seconds then Fly to (38, -22, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(38, -22, -5, 6).join()"}
{"instruction": "Move forward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 9).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Fly to (-2, 95, -7) then Move to coordinates (-49, -15, -20) then Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-2, 95, -7, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-49, -15, -20, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 36 meters then Rotate right by 30 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 41 meters then Shift left by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 10).join()"}
{"instruction": "Shift left by 41 meters then Advance forward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 5).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Shift left by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 5).join()"}
{"instruction": "Shift left by 42 meters then Initiate landing then Advance forward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 10).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 8).join()"}
{"instruction": "Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 4).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (53, -45, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(53, -45, -9, 6).join()"}
{"instruction": "Please land then Rotate right by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff then Advance forward by 6 meters then Hover for 6 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift left by 6 meters then Move backward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 10).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift left by 8 meters then Move backward 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 7).join()"}
{"instruction": "Move right 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 7).join()"}
{"instruction": "Shift right by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 6).join()"}
{"instruction": "Move to coordinates (-25, 74, -18) then Maintain hover for 9 seconds then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-25, 74, -18, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate left by 60 degrees then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 3).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift left by 30 meters then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Initiate takeoff sequence then Turn right 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 30 degrees then Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Initiate landing then Move backward 34 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 10).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Advance forward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 4).join()"}
{"instruction": "Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 9).join()"}
{"instruction": "Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 6).join()"}
{"instruction": "Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 7).join()"}
{"instruction": "Rotate left by 30 degrees then Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 10).join()"}
{"instruction": "Fly to (52, 95, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(52, 95, -6, 5).join()"}
{"instruction": "Move to coordinates (81, -67, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(81, -67, -14, 9).join()"}
{"instruction": "Move to coordinates (-89, -56, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-89, -56, -9, 5).join()"}
{"instruction": "Take off then Hover for 6 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move to coordinates (70, -96, -13) then Retreat backward by 30 meters then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(70, -96, -13, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Shift left by 23 meters then Initiate landing then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 3).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move forward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Advance forward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 7).join()"}
{"instruction": "Move backward 43 meters then Advance forward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 5).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Take off then Shift right by 21 meters then Move right 21 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 5).join()"}
{"instruction": "Maintain hover for 4 seconds then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Turn left 15 degrees then Fly to (-21, 28, -5) then Move right 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-21, 28, -5, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 3).join()"}
{"instruction": "Move right 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 3).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-38, 9, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-38, 9, -6, 9).join()"}
{"instruction": "Turn left 30 degrees then Move to coordinates (-99, 44, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-99, 44, -9, 10).join()"}
{"instruction": "Please take off then Turn left 15 degrees then Turn right 30 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 7 seconds then Shift left by 39 meters then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 4 seconds then Retreat backward by 31 meters then Move backward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move to coordinates (-90, 13, -20) then Move to coordinates (65, 83, -9) then Move backward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-90, 13, -20, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(65, 83, -9, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 9).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 30 degrees then Shift left by 24 meters then Move forward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 8).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 7).join()"}
{"instruction": "Shift right by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 4).join()"}
{"instruction": "Turn left 60 degrees then Fly to (-63, 56, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-63, 56, -10, 9).join()"}
{"instruction": "Initiate landing then Rotate right by 90 degrees then Retreat backward by 10 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 10).join()"}
{"instruction": "Move backward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 10).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute landing then Move forward 24 meters then Move right 8 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 7).join()"}
{"instruction": "Fly to (16, 21, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(16, 21, -6, 10).join()"}
{"instruction": "Move forward 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 5).join()"}
{"instruction": "Turn left 90 degrees then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 48 meters then Advance forward by 14 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 10).join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Initiate landing then Rotate left by 30 degrees then Rotate right by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Retreat backward by 23 meters then Fly to (-4, -92, -20) then Move left 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-4, -92, -20, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 4).join()"}
{"instruction": "Retreat backward by 9 meters then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move to coordinates (-70, -86, -10) then Move to coordinates (-85, -24, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, -86, -10, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-85, -24, -14, 3).join()"}
{"instruction": "Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 9).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Shift right by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 6).join()"}
{"instruction": "Hover for 7 seconds then Land then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (10, 35, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(10, 35, -9, 5).join()"}
{"instruction": "Shift left by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 3).join()"}
{"instruction": "Move backward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 7).join()"}
{"instruction": "Move to coordinates (21, 95, -9) then Execute takeoff then Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, 95, -9, 4).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (-66, 38, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-66, 38, -5, 7).join()"}
{"instruction": "Move right 47 meters then Turn right 15 degrees then Move to coordinates (6, 55, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(6, 55, -16, 7).join()"}
{"instruction": "Rotate left by 15 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 10).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move backward 8 meters then Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 6).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Shift left by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 5).join()"}
{"instruction": "Retreat backward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 4).join()"}
{"instruction": "Move right 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 6).join()"}
{"instruction": "Execute landing then Move left 34 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 3).join()"}
{"instruction": "Move right 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 10).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Advance forward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 3).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 5 meters then Move left 32 meters then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Land then Rotate left by 15 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate right by 90 degrees then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (3, -87, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(3, -87, -11, 10).join()"}
{"instruction": "Move left 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 6).join()"}
{"instruction": "Move forward 21 meters then Move forward 13 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 49 meters then Move left 48 meters then Move backward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 10).join()"}
{"instruction": "Move forward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 3).join()"}
{"instruction": "Move forward 47 meters then Move left 41 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Turn left 90 degrees then Move forward 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 9).join()"}
{"instruction": "Move left 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 9).join()"}
{"instruction": "Shift left by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 9).join()"}
{"instruction": "Move forward 21 meters then Fly to (91, 46, -19) then Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, 46, -19, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 6).join()"}
{"instruction": "Move forward 31 meters then Please take off then Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 8).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 8).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move right 10 meters then Fly to (-36, -12, -8) then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-36, -12, -8, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Shift right by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 7).join()"}
{"instruction": "Retreat backward by 45 meters then Execute landing then Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 5).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 8).join()"}
{"instruction": "Turn right 60 degrees then Move backward 10 meters then Move forward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 4).join()"}
{"instruction": "Advance forward by 12 meters then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 9).join()"}
{"instruction": "Retreat backward by 27 meters then Move left 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 10).join()"}
{"instruction": "Move right 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 8).join()"}
{"instruction": "Move right 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 3).join()"}
{"instruction": "Rotate right by 15 degrees then Move backward 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 6).join()"}
{"instruction": "Hover for 9 seconds then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then client.landAsync().join()"}
{"instruction": "Land then Rotate right by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Retreat backward by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 6).join()"}
{"instruction": "Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 8).join()"}
{"instruction": "Hover for 8 seconds then Turn right 30 degrees then Move forward 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 4).join()"}
{"instruction": "Move backward 46 meters then Advance forward by 40 meters then Fly to (-48, 3, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, 3, -5, 4).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 23 meters then Rotate left by 45 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 41 meters then Retreat backward by 12 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 20 meters then Rotate right by 15 degrees then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move backward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 8).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Advance forward by 38 meters then Shift right by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 9).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move left 40 meters then Move forward 37 meters then Shift right by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 7).join()"}
{"instruction": "Retreat backward by 41 meters then Execute takeoff then Move backward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 5).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 6).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Maintain hover for 8 seconds then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.landAsync().join()"}
{"instruction": "Fly to (66, -2, -5) then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(66, -2, -5, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move right 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 9).join()"}
{"instruction": "Move backward 39 meters then Fly to (-64, 3, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-64, 3, -13, 6).join()"}
{"instruction": "Move right 10 meters then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move forward 6 meters then Rotate right by 45 degrees then Fly to (-64, 69, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-64, 69, -19, 10).join()"}
{"instruction": "Shift right by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 9).join()"}
{"instruction": "Rotate right by 60 degrees then Move forward 44 meters then Move left 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 9).join()"}
{"instruction": "Rotate right by 15 degrees then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 15 degrees then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 3 seconds then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move left 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 10).join()"}
{"instruction": "Move left 12 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Advance forward by 49 meters then Shift left by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 4).join()"}
{"instruction": "Move left 30 meters then Advance forward by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 5).join()"}
{"instruction": "Turn left 30 degrees then Rotate right by 90 degrees then Fly to (29, 87, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, 87, -6, 4).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift right by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 6).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 16 meters then Initiate landing then Move right 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 6).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 6).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move backward 5 meters then Move backward 13 meters then Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 7).join()"}
{"instruction": "Retreat backward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 10).join()"}
{"instruction": "Land then Shift right by 27 meters then Fly to (90, 96, -19)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(90, 96, -19, 8).join()"}
{"instruction": "Retreat backward by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 3).join()"}
{"instruction": "Fly to (-75, -65, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -65, -20, 9).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Please land then Rotate left by 30 degrees then Retreat backward by 43 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 6).join()"}
{"instruction": "Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 5).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move forward 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (16, 43, -15) then Shift right by 40 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(16, 43, -15, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 30 meters then Retreat backward by 28 meters then Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 3).join()"}
{"instruction": "Rotate right by 90 degrees then Move to coordinates (-74, 32, -10) then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-74, 32, -10, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 6).join()"}
{"instruction": "Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 5).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Execute takeoff then Move left 24 meters then Move to coordinates (-74, 36, -16)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-74, 36, -16, 8).join()"}
{"instruction": "Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 37 meters then Fly to (-77, 18, -18) then Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-77, 18, -18, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 6).join()"}
{"instruction": "Retreat backward by 46 meters then Move left 28 meters then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 49 meters then Land then Move to coordinates (-9, -55, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 7).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-9, -55, -16, 5).join()"}
{"instruction": "Shift right by 45 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Fly to (-70, -85, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, -85, -8, 6).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Please land then Move right 8 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 4).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 37 meters then Move forward 50 meters then Move backward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 7).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move forward 17 meters then Move left 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 7).join()"}
{"instruction": "Advance forward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 3).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Initiate takeoff sequence then Move backward 19 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 8).join()"}
{"instruction": "Turn left 15 degrees then Please land then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-75, -78, -12) then Rotate right by 30 degrees then Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -78, -12, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 5).join()"}
{"instruction": "Turn right 15 degrees then Execute landing then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift left by 43 meters then Move right 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 10).join()"}
{"instruction": "Move forward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence then Retreat backward by 39 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 5).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move right 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 3).join()"}
{"instruction": "Shift left by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 6).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 17 meters then Land then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 5).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Land then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate left by 15 degrees then Fly to (95, -31, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(95, -31, -6, 7).join()"}
{"instruction": "Rotate left by 15 degrees then Please take off then Retreat backward by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 8).join()"}
{"instruction": "Move right 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 9).join()"}
{"instruction": "Move left 10 meters then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 5).join()"}
{"instruction": "Move left 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 7).join()"}
{"instruction": "Move right 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 6).join()"}
{"instruction": "Move to coordinates (-73, -58, -9) then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-73, -58, -9, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Advance forward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (-91, 44, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-91, 44, -6, 10).join()"}
{"instruction": "Move to coordinates (-56, 41, -20) then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-56, 41, -20, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 6).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Fly to (-10, 16, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-10, 16, -15, 9).join()"}
{"instruction": "Fly to (-46, 23, -19) then Turn left 45 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-46, 23, -19, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.landAsync().join()"}
{"instruction": "Move left 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 6).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Rotate right by 30 degrees then Move right 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 4).join()"}
{"instruction": "Move right 18 meters then Take off then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 10).join() then client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 9).join()"}
{"instruction": "Move to coordinates (-22, 32, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-22, 32, -5, 4).join()"}
{"instruction": "Fly to (-90, 72, -11) then Move forward 10 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-90, 72, -11, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Move right 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 7).join()"}
{"instruction": "Shift left by 50 meters then Retreat backward by 6 meters then Retreat backward by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 5).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Shift right by 33 meters then Move to coordinates (21, 96, -10) then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, 96, -10, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move backward 49 meters then Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 5).join()"}
{"instruction": "Advance forward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 5).join()"}
{"instruction": "Rotate left by 30 degrees then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.landAsync().join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move forward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 3).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 10).join()"}
{"instruction": "Turn left 60 degrees then Move right 17 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 6 seconds then Advance forward by 42 meters then Move backward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 3).join()"}
{"instruction": "Move right 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 8).join()"}
{"instruction": "Rotate left by 45 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please land then Move to coordinates (7, 85, -15)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(7, 85, -15, 3).join()"}
{"instruction": "Move forward 37 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 3).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 9).join()"}
{"instruction": "Move left 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 5).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift right by 30 meters then Move backward 42 meters then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Initiate takeoff sequence then Execute takeoff then Shift right by 13 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 10).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Retreat backward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 6).join()"}
{"instruction": "Maintain hover for 9 seconds then Retreat backward by 44 meters then Move forward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 4).join()"}
{"instruction": "Move backward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 6).join()"}
{"instruction": "Hover for 5 seconds then Hover for 4 seconds then Fly to (3, -13, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(3, -13, -6, 10).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn left 45 degrees then Fly to (-38, 6, -8) then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-38, 6, -8, 10).join() then client.landAsync().join()"}
{"instruction": "Fly to (22, -42, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(22, -42, -7, 9).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move to coordinates (-60, 31, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-60, 31, -8, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 10).join()"}
{"instruction": "Turn right 90 degrees then Retreat backward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 5).join()"}
{"instruction": "Move backward 37 meters then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 5).join()"}
{"instruction": "Shift right by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 6).join()"}
{"instruction": "Execute takeoff then Move right 23 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 10).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 5 meters then Move right 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 3).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Execute takeoff then Move backward 46 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 7).join()"}
{"instruction": "Hover for 5 seconds then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.landAsync().join()"}
{"instruction": "Maintain hover for 5 seconds then Move right 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 6).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 6).join()"}
{"instruction": "Hover for 10 seconds then Move right 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 6).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 6 meters then Retreat backward by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 3).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 10).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-8, 58, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-8, 58, -12, 10).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 49 meters then Shift left by 44 meters then Retreat backward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 12 meters then Move backward 13 meters then Shift right by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 6).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Advance forward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 8).join()"}
{"instruction": "Fly to (72, -90, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, -90, -15, 5).join()"}
{"instruction": "Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 5).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move right 42 meters then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Hover for 7 seconds then Advance forward by 25 meters then Move to coordinates (69, -25, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(69, -25, -6, 3).join()"}
{"instruction": "Maintain hover for 10 seconds then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move right 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate left by 15 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Shift right by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 4).join()"}
{"instruction": "Advance forward by 12 meters then Retreat backward by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move left 43 meters then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Execute takeoff then Turn left 30 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Fly to (13, -89, -20) then Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(13, -89, -20, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 9).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Hover for 3 seconds then Retreat backward by 27 meters then Move forward 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 5).join()"}
{"instruction": "Move forward 16 meters then Move to coordinates (66, 73, -15) then Shift right by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(66, 73, -15, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 10).join()"}
{"instruction": "Move right 15 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 10).join()"}
{"instruction": "Move backward 22 meters then Rotate left by 30 degrees then Move forward 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 8).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Fly to (12, 50, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(12, 50, -17, 9).join()"}
{"instruction": "Hover for 10 seconds then Shift right by 41 meters then Move backward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 3).join()"}
{"instruction": "Turn right 15 degrees then Rotate right by 30 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.landAsync().join()"}
{"instruction": "Move backward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 8).join()"}
{"instruction": "Retreat backward by 11 meters then Move right 19 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 60 degrees then Shift right by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 8).join()"}
{"instruction": "Move right 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 5).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Advance forward by 12 meters then Move backward 37 meters then Move forward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 5).join()"}
{"instruction": "Initiate takeoff sequence then Retreat backward by 41 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 6).join()"}
{"instruction": "Turn left 90 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift right by 14 meters then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 3).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 7).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Fly to (-62, -3, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-62, -3, -8, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 40 meters then Maintain hover for 4 seconds then Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 4).join()"}
{"instruction": "Move to coordinates (-78, 88, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-78, 88, -12, 9).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move backward 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 8).join()"}
{"instruction": "Rotate right by 15 degrees then Maintain hover for 9 seconds then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move to coordinates (-72, 39, -12) then Advance forward by 25 meters then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-72, 39, -12, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 6).join()"}
{"instruction": "Shift left by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 4).join()"}
{"instruction": "Hover for 6 seconds then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Shift right by 34 meters then Shift right by 37 meters then Shift right by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 8).join()"}
{"instruction": "Hover for 7 seconds then Fly to (-11, 60, -17) then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-11, 60, -17, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move forward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 5).join()"}
{"instruction": "Please land then Shift right by 11 meters then Shift left by 36 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 10).join()"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 3).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Please take off then Advance forward by 38 meters then Execute landing", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Turn left 60 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move backward 14 meters then Move right 41 meters then Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 9).join()"}
{"instruction": "Move backward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 4).join()"}
{"instruction": "Shift left by 40 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 6).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 30 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute takeoff then Move left 5 meters then Initiate landing", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 7).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 48 meters then Execute takeoff then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 8).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move right 32 meters then Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 5).join()"}
{"instruction": "Advance forward by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 10).join()"}
{"instruction": "Move left 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 10).join()"}
{"instruction": "Shift right by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 9).join()"}
{"instruction": "Move to coordinates (-23, -83, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-23, -83, -8, 3).join()"}
{"instruction": "Shift right by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 6).join()"}
{"instruction": "Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 4).join()"}
{"instruction": "Move to coordinates (6, -84, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(6, -84, -9, 10).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 15 degrees then Rotate left by 90 degrees then Move to coordinates (79, 80, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(79, 80, -8, 8).join()"}
{"instruction": "Shift left by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 5).join()"}
{"instruction": "Rotate left by 30 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Maintain hover for 9 seconds then Shift left by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 9).join()"}
{"instruction": "Execute landing then Move right 5 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 7).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute takeoff then Retreat backward by 41 meters then Move to coordinates (-87, 53, -14)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-87, 53, -14, 8).join()"}
{"instruction": "Rotate right by 30 degrees then Move left 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 8).join()"}
{"instruction": "Move right 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 6).join()"}
{"instruction": "Fly to (-75, -57, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -57, -13, 8).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Advance forward by 37 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 10).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 9).join()"}
{"instruction": "Move left 30 meters then Shift right by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 6).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 7).join()"}
{"instruction": "Move left 31 meters then Initiate landing then Move to coordinates (61, 100, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 8).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(61, 100, -5, 9).join()"}
{"instruction": "Move left 33 meters then Move right 44 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 8).join()"}
{"instruction": "Retreat backward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 10).join()"}
{"instruction": "Shift right by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 7).join()"}
{"instruction": "Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 8).join()"}
{"instruction": "Fly to (-97, -56, -6) then Shift right by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-97, -56, -6, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 7).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift right by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 8).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Hover for 8 seconds then Advance forward by 20 meters then Move backward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (-35, 54, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-35, 54, -14, 6).join()"}
{"instruction": "Execute takeoff then Land then Execute landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Shift left by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 3).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 15 degrees then Move right 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 8).join()"}
{"instruction": "Execute landing then Move backward 39 meters then Rotate left by 30 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move right 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 5).join()"}
{"instruction": "Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 5).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 3).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-4, 44, -19) then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-4, 44, -19, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Retreat backward by 47 meters then Fly to (-27, 47, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-27, 47, -19, 9).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 9).join()"}
{"instruction": "Move to coordinates (-25, -100, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-25, -100, -9, 10).join()"}
{"instruction": "Land then Shift right by 14 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 4).join()"}
{"instruction": "Shift right by 43 meters then Retreat backward by 22 meters then Shift left by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 4).join()"}
{"instruction": "Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 5).join()"}
{"instruction": "Initiate takeoff sequence then Move to coordinates (72, -85, -13)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, -85, -13, 5).join()"}
{"instruction": "Move left 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 7).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Please take off then Shift left by 17 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 7).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move forward 46 meters then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 20 meters then Move left 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 7).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 8).join()"}
{"instruction": "Turn left 30 degrees then Turn right 45 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.landAsync().join()"}
{"instruction": "Hover for 10 seconds then Move right 35 meters then Move to coordinates (-41, 17, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-41, 17, -20, 10).join()"}
{"instruction": "Rotate right by 30 degrees then Move backward 38 meters then Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift right by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 10).join()"}
{"instruction": "Fly to (-22, -63, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-22, -63, -7, 9).join()"}
{"instruction": "Rotate right by 30 degrees then Rotate left by 15 degrees then Retreat backward by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 3).join()"}
{"instruction": "Move right 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 8).join()"}
{"instruction": "Shift left by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 5).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift right by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 4).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (54, 75, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(54, 75, -8, 3).join()"}
{"instruction": "Move to coordinates (53, -39, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(53, -39, -11, 10).join()"}
{"instruction": "Shift right by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 4).join()"}
{"instruction": "Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (-27, -74, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-27, -74, -20, 10).join()"}
{"instruction": "Move forward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 8).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move backward 48 meters then Shift left by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 9).join()"}
{"instruction": "Rotate left by 15 degrees then Maintain hover for 5 seconds then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Take off then Fly to (-33, 62, -19)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-33, 62, -19, 3).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Fly to (97, -29, -19) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(97, -29, -19, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (32, -84, -16) then Move backward 42 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(32, -84, -16, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Turn left 45 degrees then Land then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move left 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 5).join()"}
{"instruction": "Take off then Land then Please land", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Move left 14 meters then Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 7).join()"}
{"instruction": "Execute takeoff then Please take off then Move left 18 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move to coordinates (-40, -12, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-40, -12, -20, 10).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Hover for 5 seconds then Shift left by 37 meters then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Advance forward by 48 meters then Move right 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 3).join()"}
{"instruction": "Move forward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 3).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 5).join()"}
{"instruction": "Move forward 32 meters then Initiate takeoff sequence then Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 5).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 30 degrees then Advance forward by 29 meters then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move right 6 meters then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 33 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Land then Rotate right by 60 degrees then Move left 42 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 5).join()"}
{"instruction": "Shift left by 37 meters then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Shift left by 50 meters then Move left 9 meters then Move forward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 4).join()"}
{"instruction": "Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 7).join()"}
{"instruction": "Shift right by 23 meters then Shift left by 25 meters then Advance forward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 6).join()"}
{"instruction": "Fly to (-37, -98, -18) then Advance forward by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-37, -98, -18, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 7).join()"}
{"instruction": "Execute takeoff then Execute takeoff then Shift right by 48 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 9).join()"}
{"instruction": "Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 7).join()"}
{"instruction": "Shift left by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 6).join()"}
{"instruction": "Advance forward by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 3).join()"}
{"instruction": "Turn left 45 degrees then Rotate right by 45 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 10).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence then Retreat backward by 23 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 5).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 90 degrees then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Turn left 60 degrees then Fly to (-88, 63, -8) then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-88, 63, -8, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Move right 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 5).join()"}
{"instruction": "Rotate left by 30 degrees then Rotate left by 60 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.landAsync().join()"}
{"instruction": "Move left 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 4).join()"}
{"instruction": "Execute landing then Move to coordinates (92, 56, -17)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(92, 56, -17, 10).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 60 degrees then Rotate left by 15 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift left by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 8).join()"}
{"instruction": "Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 7).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Fly to (3, 78, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(3, 78, -16, 4).join()"}
{"instruction": "Fly to (-18, 30, -16) then Initiate landing then Move right 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-18, 30, -16, 5).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees then Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 5).join()"}
{"instruction": "Move forward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 4).join()"}
{"instruction": "Move forward 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 8).join()"}
{"instruction": "Move forward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 4).join()"}
{"instruction": "Hover for 5 seconds then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Take off then Please take off then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 10).join()"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Initiate landing then Take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Initiate takeoff sequence then Take off then Shift left by 15 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 7).join()"}
{"instruction": "Fly to (-37, -7, -10) then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-37, -7, -10, 10).join() then client.landAsync().join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn right 15 degrees then Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 3).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Rotate right by 30 degrees then Shift right by 42 meters then Retreat backward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 4).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 7).join()"}
{"instruction": "Please land then Move right 27 meters then Move forward 21 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 8).join()"}
{"instruction": "Move backward 7 meters then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Execute landing then Rotate right by 90 degrees then Execute landing", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.landAsync().join()"}
{"instruction": "Turn left 60 degrees then Fly to (-7, 57, -11) then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-7, 57, -11, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move backward 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (33, -38, -5) then Initiate takeoff sequence then Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(33, -38, -5, 8).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 10).join()"}
{"instruction": "Turn right 45 degrees then Please take off then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Retreat backward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 4).join()"}
{"instruction": "Fly to (25, 60, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(25, 60, -8, 4).join()"}
{"instruction": "Move backward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 5).join()"}
{"instruction": "Please land then Maintain hover for 6 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move left 5 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Retreat backward by 38 meters then Maintain hover for 8 seconds then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Advance forward by 39 meters then Retreat backward by 34 meters then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move forward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 10).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift left by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 10).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 5).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate left by 90 degrees then Shift left by 7 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 9).join() then client.landAsync().join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 10).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Hover for 3 seconds then Move to coordinates (15, -49, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(15, -49, -20, 8).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Advance forward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 3).join()"}
{"instruction": "Rotate left by 45 degrees then Shift right by 35 meters then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 3).join()"}
{"instruction": "Move backward 41 meters then Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 7).join()"}
{"instruction": "Execute landing then Shift right by 29 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 5).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move to coordinates (72, 95, -11) then Hover for 3 seconds then Move to coordinates (15, -23, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, 95, -11, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(15, -23, -12, 7).join()"}
{"instruction": "Shift right by 24 meters then Move forward 38 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Fly to (-85, 6, -17) then Shift left by 13 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-85, 6, -17, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move to coordinates (5, -6, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(5, -6, -9, 8).join()"}
{"instruction": "Fly to (63, -49, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(63, -49, -19, 6).join()"}
{"instruction": "Please take off then Turn right 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift left by 46 meters then Execute landing then Move right 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 5).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 5).join()"}
{"instruction": "Move right 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 6).join()"}
{"instruction": "Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 9).join()"}
{"instruction": "Move right 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 10).join()"}
{"instruction": "Fly to (-23, -82, -7) then Please land then Shift right by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-23, -82, -7, 3).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 10).join()"}
{"instruction": "Shift right by 11 meters then Rotate right by 30 degrees then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Hover for 10 seconds then Move forward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 3).join()"}
{"instruction": "Move left 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 9).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move forward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (-98, -62, -8) then Move to coordinates (-17, 29, -13) then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-98, -62, -8, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-17, 29, -13, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 9).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate left by 30 degrees then Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 4).join()"}
{"instruction": "Move right 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 7).join()"}
{"instruction": "Move backward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 7).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 15 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 8).join()"}
{"instruction": "Shift right by 33 meters then Hover for 9 seconds then Shift right by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 6).join()"}
{"instruction": "Turn right 60 degrees then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Fly to (-9, -41, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-9, -41, -6, 7).join()"}
{"instruction": "Move backward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 7).join()"}
{"instruction": "Maintain hover for 6 seconds then Move backward 5 meters then Shift right by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 6).join()"}
{"instruction": "Retreat backward by 8 meters then Move to coordinates (-18, 37, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-18, 37, -17, 10).join()"}
{"instruction": "Rotate left by 45 degrees then Shift left by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 9).join()"}
{"instruction": "Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 8).join()"}
{"instruction": "Advance forward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 3).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 33 meters then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 5).join()"}
{"instruction": "Fly to (-35, -38, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-35, -38, -5, 7).join()"}
{"instruction": "Fly to (34, -65, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(34, -65, -8, 8).join()"}
{"instruction": "Shift right by 7 meters then Move right 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 8).join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 5).join()"}
{"instruction": "Fly to (25, -88, -18) then Please land then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(25, -88, -18, 5).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Please land then Retreat backward by 35 meters then Move to coordinates (-81, 74, -20)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-81, 74, -20, 6).join()"}
{"instruction": "Move left 39 meters then Shift right by 12 meters then Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 10).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Retreat backward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 6).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Retreat backward by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 7).join()"}
{"instruction": "Move left 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 5).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Retreat backward by 24 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate right by 15 degrees then Move forward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 6).join()"}
{"instruction": "Hover for 5 seconds then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 5).join()"}
{"instruction": "Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 4).join()"}
{"instruction": "Move left 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 5).join()"}
{"instruction": "Shift left by 6 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 5).join()"}
{"instruction": "Move backward 47 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 6).join() then client.takeoffAsync().join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Fly to (-30, 83, -10) then Move to coordinates (-9, -92, -9) then Retreat backward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-30, 83, -10, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-9, -92, -9, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Shift right by 6 meters then Move backward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 4).join()"}
{"instruction": "Move right 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 10).join()"}
{"instruction": "Shift right by 10 meters then Shift left by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 4).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 9).join()"}
{"instruction": "Move backward 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 19 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Shift left by 42 meters then Please take off then Move to coordinates (-41, -64, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-41, -64, -19, 5).join()"}
{"instruction": "Rotate right by 15 degrees then Rotate left by 60 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 3).join()"}
{"instruction": "Turn right 90 degrees then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 15 degrees then Shift left by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 8).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move backward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please take off then Execute landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Move left 12 meters then Maintain hover for 4 seconds then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Fly to (94, -35, -8) then Advance forward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(94, -35, -8, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (99, -55, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(99, -55, -20, 5).join()"}
{"instruction": "Move left 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 7).join()"}
{"instruction": "Move backward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 4).join()"}
{"instruction": "Advance forward by 38 meters then Shift left by 27 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-60, -5, -14) then Take off then Move to coordinates (63, 66, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-60, -5, -14, 10).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(63, 66, -17, 8).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Turn right 45 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move backward 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 9).join()"}
{"instruction": "Move right 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 4).join()"}
{"instruction": "Move left 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 6).join()"}
{"instruction": "Move right 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 7).join()"}
{"instruction": "Execute takeoff then Rotate right by 60 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Retreat backward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 9).join()"}
{"instruction": "Move right 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 3).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 7 meters then Move left 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 6).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-79, -7, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-79, -7, -9, 9).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move backward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 4).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Maintain hover for 10 seconds then Move left 32 meters then Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 3).join()"}
{"instruction": "Please take off then Shift left by 17 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 7).join()"}
{"instruction": "Hover for 5 seconds then Retreat backward by 10 meters then Shift right by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 5).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move backward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Hover for 4 seconds then Move right 9 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 9).join()"}
{"instruction": "Hover for 5 seconds then Turn right 90 degrees then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.takeoffAsync().join()"}
{"instruction": "Please land then Advance forward by 19 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 9).join()"}
{"instruction": "Fly to (-88, 42, -5) then Move left 17 meters then Shift right by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-88, 42, -5, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 10).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (-99, 17, -17) then Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-99, 17, -17, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 3).join()"}
{"instruction": "Retreat backward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 7).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Fly to (10, 78, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(10, 78, -5, 6).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move left 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 4).join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 6).join()"}
{"instruction": "Fly to (2, 17, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, 17, -13, 5).join()"}
{"instruction": "Retreat backward by 38 meters then Hover for 10 seconds then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 8).join()"}
{"instruction": "Move backward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 9).join()"}
{"instruction": "Turn right 15 degrees then Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move right 20 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 4).join()"}
{"instruction": "Execute landing then Move to coordinates (32, 64, -20) then Move forward 19 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(32, 64, -20, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 49 meters then Retreat backward by 43 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move left 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 10).join()"}
{"instruction": "Shift left by 15 meters then Move left 23 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 6).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 8).join()"}
{"instruction": "Retreat backward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 8).join()"}
{"instruction": "Execute takeoff then Advance forward by 35 meters then Turn right 90 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move to coordinates (59, 2, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(59, 2, -10, 4).join()"}
{"instruction": "Move left 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 3).join()"}
{"instruction": "Shift left by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 5).join()"}
{"instruction": "Fly to (-48, 11, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, 11, -17, 5).join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 8).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 5).join()"}
{"instruction": "Hover for 10 seconds then Hover for 7 seconds then Move right 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 3).join()"}
{"instruction": "Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 4).join()"}
{"instruction": "Retreat backward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 3).join()"}
{"instruction": "Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 10).join()"}
{"instruction": "Shift right by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 4).join()"}
{"instruction": "Rotate left by 45 degrees then Shift left by 15 meters then Move right 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 10).join()"}
{"instruction": "Advance forward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 4).join()"}
{"instruction": "Move forward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 16 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Move forward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 5).join()"}
{"instruction": "Shift right by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 4).join()"}
{"instruction": "Take off then Move backward 45 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 3).join()"}
{"instruction": "Fly to (53, -62, -14) then Move to coordinates (-42, 46, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(53, -62, -14, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-42, 46, -19, 6).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Please land then Move right 18 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 90 degrees then Advance forward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 9).join()"}
{"instruction": "Fly to (-18, 24, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-18, 24, -9, 10).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-12, 60, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-12, 60, -17, 7).join()"}
{"instruction": "Initiate landing then Move left 41 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 5).join()"}
{"instruction": "Advance forward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 3).join()"}
{"instruction": "Shift right by 37 meters then Move left 18 meters then Fly to (-40, 29, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-40, 29, -13, 3).join()"}
{"instruction": "Shift right by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 3).join()"}
{"instruction": "Fly to (-16, -68, -8) then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-16, -68, -8, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 6).join()"}
{"instruction": "Move backward 46 meters then Move forward 37 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move to coordinates (-91, 96, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-91, 96, -15, 7).join()"}
{"instruction": "Maintain hover for 7 seconds then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then client.landAsync().join()"}
{"instruction": "Move right 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 10).join()"}
{"instruction": "Retreat backward by 27 meters then Advance forward by 24 meters then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 8).join()"}
{"instruction": "Turn right 45 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 8).join()"}
{"instruction": "Move to coordinates (-75, -54, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -54, -8, 10).join()"}
{"instruction": "Fly to (-51, -100, -6) then Shift right by 9 meters then Shift left by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-51, -100, -6, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 10).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 4).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 3).join()"}
{"instruction": "Maintain hover for 9 seconds then Move left 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 8).join()"}
{"instruction": "Execute takeoff then Land then Turn left 90 degrees", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move to coordinates (-33, 63, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-33, 63, -10, 8).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Hover for 7 seconds then Shift left by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 10).join()"}
{"instruction": "Move to coordinates (52, -97, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(52, -97, -20, 6).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 7).join()"}
{"instruction": "Move forward 27 meters then Move backward 23 meters then Retreat backward by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 10).join()"}
{"instruction": "Move to coordinates (0, -60, -17) then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(0, -60, -17, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 10).join()"}
{"instruction": "Move right 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 5).join()"}
{"instruction": "Move forward 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 3).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 8).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 9).join()"}
{"instruction": "Shift right by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 7).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 6).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Fly to (-30, -65, -5) then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-30, -65, -5, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-55, -3, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-55, -3, -19, 4).join()"}
{"instruction": "Advance forward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 4).join()"}
{"instruction": "Move forward 29 meters then Maintain hover for 4 seconds then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Maintain hover for 4 seconds then Move right 30 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Rotate left by 15 degrees then Maintain hover for 5 seconds then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Execute landing then Rotate left by 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Advance forward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 6).join()"}
{"instruction": "Fly to (13, -87, -20) then Rotate right by 90 degrees then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(13, -87, -20, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 3).join()"}
{"instruction": "Move backward 29 meters then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Fly to (-78, 67, -8) then Retreat backward by 6 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-78, 67, -8, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 42 meters then Turn right 15 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 43 meters then Rotate left by 60 degrees then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 9).join()"}
{"instruction": "Hover for 3 seconds then Move forward 34 meters then Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 6).join()"}
{"instruction": "Turn right 90 degrees then Please take off then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 6).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move right 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 3).join()"}
{"instruction": "Maintain hover for 10 seconds then Rotate left by 90 degrees then Move left 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 8).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing then Fly to (-96, 17, -13)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-96, 17, -13, 10).join()"}
{"instruction": "Fly to (88, -94, -17) then Rotate left by 60 degrees then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(88, -94, -17, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 4).join()"}
{"instruction": "Advance forward by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 10).join()"}
{"instruction": "Move right 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 9).join()"}
{"instruction": "Initiate takeoff sequence then Rotate left by 90 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Fly to (-27, -70, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-27, -70, -7, 6).join()"}
{"instruction": "Move left 43 meters then Fly to (-1, 34, -5) then Move right 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-1, 34, -5, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 4).join()"}
{"instruction": "Move left 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 10).join()"}
{"instruction": "Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 3).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Advance forward by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 5).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 49 meters then Move left 27 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Move left 10 meters then Hover for 4 seconds then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-10, 83, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-10, 83, -7, 4).join()"}
{"instruction": "Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 5).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Initiate takeoff sequence then Move to coordinates (-86, -51, -11)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-86, -51, -11, 5).join()"}
{"instruction": "Advance forward by 10 meters then Take off then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 8).join() then client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Please take off then Shift left by 13 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 8).join()"}
{"instruction": "Rotate left by 60 degrees then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.landAsync().join()"}
{"instruction": "Move left 41 meters then Move right 20 meters then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Execute landing then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Move forward 35 meters then Shift left by 6 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 6).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Fly to (-56, 88, -5) then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-56, 88, -5, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move to coordinates (-4, -81, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-4, -81, -9, 6).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Hover for 3 seconds then Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 6).join()"}
{"instruction": "Move left 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move right 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 10).join()"}
{"instruction": "Retreat backward by 23 meters then Shift right by 14 meters then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off then Please land", "api_call": "client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Please land then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Take off then Retreat backward by 48 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 10).join()"}
{"instruction": "Move right 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 3).join()"}
{"instruction": "Retreat backward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 3).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Fly to (77, 71, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(77, 71, -8, 10).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 5).join()"}
{"instruction": "Move forward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 6).join()"}
{"instruction": "Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing then Shift left by 10 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 6).join()"}
{"instruction": "Move forward 15 meters then Move left 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 9).join()"}
{"instruction": "Maintain hover for 4 seconds then Retreat backward by 33 meters then Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 7).join()"}
{"instruction": "Move to coordinates (-34, -13, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-34, -13, -6, 6).join()"}
{"instruction": "Shift left by 13 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land then Rotate left by 90 degrees then Please land", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.landAsync().join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 3).join()"}
{"instruction": "Move forward 31 meters then Take off then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 5).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 42 meters then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Retreat backward by 16 meters then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move left 11 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Move right 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 4).join()"}
{"instruction": "Shift left by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 3).join()"}
{"instruction": "Move forward 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 6).join()"}
{"instruction": "Shift right by 29 meters then Shift left by 40 meters then Move forward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 3).join()"}
{"instruction": "Move backward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 8).join()"}
{"instruction": "Move right 40 meters then Advance forward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 4).join()"}
{"instruction": "Initiate takeoff sequence then Please land", "api_call": "client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 36 meters then Move backward 47 meters then Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence then Retreat backward by 19 meters then Hover for 10 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Hover for 3 seconds then Shift left by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 7).join()"}
{"instruction": "Maintain hover for 9 seconds then Advance forward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 4).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 5).join()"}
{"instruction": "Move forward 5 meters then Execute landing then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 6).join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Advance forward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 15 degrees then Move backward 40 meters then Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 8).join()"}
{"instruction": "Hover for 7 seconds then Shift right by 42 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 23 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 10).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 7).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move to coordinates (-83, 46, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-83, 46, -9, 10).join()"}
{"instruction": "Shift right by 8 meters then Move backward 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please take off then Please land then Shift right by 7 meters", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 4).join()"}
{"instruction": "Move left 14 meters then Move left 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 8).join()"}
{"instruction": "Shift left by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 6).join()"}
{"instruction": "Turn right 45 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move backward 22 meters then Shift left by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 6).join()"}
{"instruction": "Rotate left by 60 degrees then Retreat backward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 4).join()"}
{"instruction": "Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 10).join()"}
{"instruction": "Move backward 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 3).join()"}
{"instruction": "Retreat backward by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 7).join()"}
{"instruction": "Turn right 15 degrees then Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 4).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 44 meters then Shift right by 43 meters then Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn right 45 degrees then Rotate right by 45 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 50 meters then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 45 degrees then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate right by 30 degrees then Move backward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 60 degrees then Move forward 10 meters then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 45 degrees then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Maintain hover for 4 seconds then Execute takeoff then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 7).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 6).join()"}
{"instruction": "Turn right 45 degrees then Move backward 14 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 34 meters then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 13 meters then Move forward 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 13 meters then Move right 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 3).join()"}
{"instruction": "Move backward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 6).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Fly to (-64, -18, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-64, -18, -11, 5).join()"}
{"instruction": "Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 4).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Move backward 37 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 6).join()"}
{"instruction": "Move left 45 meters then Shift right by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 9).join()"}
{"instruction": "Move right 46 meters then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (86, 5, -7) then Shift left by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(86, 5, -7, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 10).join()"}
{"instruction": "Move backward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 36 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 41 meters then Advance forward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 8).join()"}
{"instruction": "Shift left by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 5).join()"}
{"instruction": "Rotate right by 15 degrees then Advance forward by 44 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Fly to (97, 2, -16) then Move to coordinates (-2, -52, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(97, 2, -16, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-2, -52, -10, 7).join()"}
{"instruction": "Turn left 30 degrees then Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 6).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move to coordinates (50, 21, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(50, 21, -15, 5).join()"}
{"instruction": "Retreat backward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 5).join()"}
{"instruction": "Move left 37 meters then Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 3).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing then Move to coordinates (71, -34, -11)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(71, -34, -11, 6).join()"}
{"instruction": "Fly to (-41, 35, -13) then Retreat backward by 18 meters then Shift left by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-41, 35, -13, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 8).join()"}
{"instruction": "Shift left by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 5).join()"}
{"instruction": "Take off then Move left 23 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 10).join()"}
{"instruction": "Move to coordinates (-38, -5, -20) then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-38, -5, -20, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Fly to (2, 72, -13) then Move right 6 meters then Move to coordinates (-7, 35, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, 72, -13, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-7, 35, -16, 5).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 32 meters then Fly to (83, -95, -9) then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(83, -95, -9, 6).join() then client.takeoffAsync().join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 3).join()"}
{"instruction": "Move to coordinates (29, 82, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, 82, -17, 5).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 5).join()"}
{"instruction": "Rotate right by 45 degrees then Move to coordinates (-75, -49, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -49, -11, 8).join()"}
{"instruction": "Move to coordinates (-26, -83, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-26, -83, -19, 8).join()"}
{"instruction": "Move forward 26 meters then Move backward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 6).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move to coordinates (-71, -26, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-71, -26, -16, 8).join()"}
{"instruction": "Move forward 49 meters then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move right 49 meters then Move forward 40 meters then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move forward 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 3).join()"}
{"instruction": "Advance forward by 21 meters then Maintain hover for 6 seconds then Move backward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 8).join()"}
{"instruction": "Shift right by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 8).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move right 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 40 meters then Move backward 27 meters then Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join()"}
{"instruction": "Move forward 14 meters then Retreat backward by 46 meters then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 3).join()"}
{"instruction": "Move left 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 10).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (85, 92, -13) then Turn left 15 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(85, 92, -13, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Fly to (88, 59, -7) then Retreat backward by 26 meters then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(88, 59, -7, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 22 meters then Maintain hover for 5 seconds then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 8).join()"}
{"instruction": "Shift left by 49 meters then Move right 18 meters then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Advance forward by 48 meters then Fly to (72, 25, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, 25, -18, 10).join()"}
{"instruction": "Shift right by 45 meters then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move left 46 meters then Move backward 12 meters then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Shift right by 38 meters then Move backward 33 meters then Retreat backward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (27, -87, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(27, -87, -16, 3).join()"}
{"instruction": "Hover for 3 seconds then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 21 meters then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 37 meters then Move forward 39 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move left 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 6).join()"}
{"instruction": "Move right 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 10).join()"}
{"instruction": "Advance forward by 15 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Advance forward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 6).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 39 meters then Move right 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 8).join()"}
{"instruction": "Rotate left by 30 degrees then Fly to (4, 17, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(4, 17, -20, 6).join()"}
{"instruction": "Rotate left by 15 degrees then Retreat backward by 39 meters then Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 7).join()"}
{"instruction": "Retreat backward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 9).join()"}
{"instruction": "Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 7).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move to coordinates (-33, 43, -11) then Move left 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-33, 43, -11, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 9).join()"}
{"instruction": "Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 4).join()"}
{"instruction": "Turn left 30 degrees then Fly to (-31, -70, -8) then Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-31, -70, -8, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 8).join()"}
{"instruction": "Retreat backward by 45 meters then Execute landing then Move to coordinates (-58, -98, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 8).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-58, -98, -14, 8).join()"}
{"instruction": "Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 10).join()"}
{"instruction": "Shift left by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 10).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate left by 90 degrees then Move left 14 meters then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate left by 15 degrees then Move left 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 8).join()"}
{"instruction": "Please take off then Move to coordinates (42, -94, -16) then Maintain hover for 8 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(42, -94, -16, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Shift left by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 6).join()"}
{"instruction": "Retreat backward by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 8).join()"}
{"instruction": "Move forward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 4 seconds then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.landAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees then Move right 18 meters then Move backward 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Retreat backward by 32 meters then Move left 34 meters then Move left 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 3).join()"}
{"instruction": "Take off then Retreat backward by 23 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 7).join()"}
{"instruction": "Move backward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 4).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 7).join()"}
{"instruction": "Move forward 42 meters then Turn right 90 degrees then Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 4).join()"}
{"instruction": "Retreat backward by 6 meters then Fly to (21, -97, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, -97, -12, 6).join()"}
{"instruction": "Move forward 43 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Move forward 36 meters then Shift left by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 7).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 8 seconds then Move to coordinates (-72, 88, -15) then Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-72, 88, -15, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Fly to (8, -43, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(8, -43, -11, 6).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 10).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 7).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Execute takeoff then Take off then Shift left by 45 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 4).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 37 meters then Retreat backward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 7).join()"}
{"instruction": "Move right 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 3).join()"}
{"instruction": "Fly to (17, -49, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(17, -49, -8, 7).join()"}
{"instruction": "Fly to (-48, 80, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, 80, -9, 10).join()"}
{"instruction": "Retreat backward by 5 meters then Move to coordinates (26, -14, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(26, -14, -19, 8).join()"}
{"instruction": "Move backward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 6).join()"}
{"instruction": "Move forward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 10).join()"}
{"instruction": "Move backward 40 meters then Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 4).join()"}
{"instruction": "Shift right by 37 meters then Turn right 45 degrees then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move forward 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 9).join()"}
{"instruction": "Move right 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 9).join()"}
{"instruction": "Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 8).join()"}
{"instruction": "Fly to (94, 2, -20) then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(94, 2, -20, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move backward 5 meters then Shift left by 34 meters then Shift left by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 5).join()"}
{"instruction": "Retreat backward by 17 meters then Take off then Shift left by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 10).join()"}
{"instruction": "Shift left by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 10).join()"}
{"instruction": "Turn left 30 degrees then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.landAsync().join()"}
{"instruction": "Turn right 15 degrees then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Turn right 30 degrees then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Maintain hover for 8 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 8).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 10).join()"}
{"instruction": "Fly to (-1, -73, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-1, -73, -11, 6).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 45 degrees then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move left 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 3).join()"}
{"instruction": "Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 10).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 5).join()"}
{"instruction": "Rotate right by 15 degrees then Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 7).join()"}
{"instruction": "Move left 48 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 7).join() then client.landAsync().join()"}
{"instruction": "Move right 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 5).join()"}
{"instruction": "Execute takeoff then Shift left by 40 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 4).join()"}
{"instruction": "Move to coordinates (-65, 75, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-65, 75, -8, 5).join()"}
{"instruction": "Shift left by 47 meters then Rotate right by 30 degrees then Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 3).join()"}
{"instruction": "Move backward 5 meters then Move forward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 6).join()"}
{"instruction": "Land then Move backward 19 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 10).join()"}
{"instruction": "Move right 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 10).join()"}
{"instruction": "Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 8).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Advance forward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 3).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 12 meters then Retreat backward by 41 meters then Fly to (50, 93, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(50, 93, -9, 6).join()"}
{"instruction": "Move forward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 9).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift right by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 3).join()"}
{"instruction": "Please land then Retreat backward by 25 meters then Take off", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move left 14 meters then Please take off then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 8).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move forward 12 meters then Move left 49 meters then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 3).join()"}
{"instruction": "Shift right by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 6).join()"}
{"instruction": "Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 4).join()"}
{"instruction": "Land then Execute landing then Rotate right by 45 degrees", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn right 60 degrees then Fly to (2, -87, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, -87, -10, 4).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (51, -52, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(51, -52, -9, 7).join()"}
{"instruction": "Retreat backward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 10).join()"}
{"instruction": "Move to coordinates (86, -19, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(86, -19, -16, 9).join()"}
{"instruction": "Initiate takeoff sequence then Execute takeoff", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 7).join()"}
{"instruction": "Take off then Fly to (21, -98, -12)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, -98, -12, 9).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 43 meters then Move backward 9 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (-7, -92, -14) then Shift right by 9 meters then Fly to (-17, 24, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-7, -92, -14, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-17, 24, -12, 3).join()"}
{"instruction": "Move backward 45 meters then Move left 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 7).join()"}
{"instruction": "Move right 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 4).join()"}
{"instruction": "Fly to (-30, 0, -15) then Move right 12 meters then Advance forward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-30, 0, -15, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 46 meters then Shift left by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 8).join()"}
{"instruction": "Shift left by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 7).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Shift right by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 8).join()"}
{"instruction": "Move left 30 meters then Rotate right by 30 degrees then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.landAsync().join()"}
{"instruction": "Please take off then Shift right by 14 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 10).join()"}
{"instruction": "Move right 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 7).join()"}
{"instruction": "Retreat backward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 7).join()"}
{"instruction": "Move left 30 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Shift right by 22 meters then Move right 47 meters then Retreat backward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 7).join()"}
{"instruction": "Turn right 45 degrees then Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 3).join()"}
{"instruction": "Shift left by 22 meters then Move backward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 3).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 60 degrees then Advance forward by 40 meters then Shift left by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 9).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 7).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Maintain hover for 8 seconds then Hover for 10 seconds then Move to coordinates (-19, 31, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-19, 31, -7, 7).join()"}
{"instruction": "Execute landing then Rotate left by 30 degrees then Shift left by 25 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 3).join()"}
{"instruction": "Move backward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 25 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Maintain hover for 10 seconds then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then client.takeoffAsync().join()"}
{"instruction": "Move backward 10 meters then Please land then Shift left by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 9).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 3).join()"}
{"instruction": "Hover for 6 seconds then Move forward 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 3).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 5 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 9).join() then client.landAsync().join()"}
{"instruction": "Shift right by 43 meters then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 10).join()"}
{"instruction": "Move left 37 meters then Turn left 30 degrees then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 35 meters then Move to coordinates (-55, 78, -10) then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-55, 78, -10, 5).join() then client.landAsync().join()"}
{"instruction": "Rotate right by 60 degrees then Move to coordinates (85, -69, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(85, -69, -19, 8).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 9).join()"}
{"instruction": "Move forward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 8).join()"}
{"instruction": "Turn left 60 degrees then Retreat backward by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 4).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 10).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 3).join()"}
{"instruction": "Turn left 30 degrees then Turn right 45 degrees then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.landAsync().join()"}
{"instruction": "Rotate right by 60 degrees then Retreat backward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 5).join()"}
{"instruction": "Execute takeoff then Move backward 39 meters then Shift left by 6 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 10).join()"}
{"instruction": "Shift right by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 8).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move right 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 8).join()"}
{"instruction": "Move to coordinates (44, 44, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(44, 44, -16, 7).join()"}
{"instruction": "Shift left by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 3).join()"}
{"instruction": "Turn left 15 degrees then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move to coordinates (78, 28, -6) then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, 28, -6, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 4).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn right 30 degrees then Rotate right by 30 degrees then Move left 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 4).join()"}
{"instruction": "Shift left by 13 meters then Initiate takeoff sequence then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn left 15 degrees then Advance forward by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 5).join()"}
{"instruction": "Move to coordinates (-97, 13, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-97, 13, -12, 7).join()"}
{"instruction": "Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 5).join()"}
{"instruction": "Move left 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 36 meters then Maintain hover for 4 seconds then Shift right by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 7).join()"}
{"instruction": "Move left 18 meters then Retreat backward by 49 meters then Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 4).join()"}
{"instruction": "Retreat backward by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 5).join()"}
{"instruction": "Move backward 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 8).join()"}
{"instruction": "Shift right by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 3).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Fly to (34, 97, -14) then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(34, 97, -14, 7).join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 3 seconds then Move right 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence then Move forward 39 meters then Rotate right by 90 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn right 90 degrees then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move to coordinates (-12, -20, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-12, -20, -11, 8).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Hover for 8 seconds then Shift left by 44 meters then Advance forward by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 10).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 30 degrees then Advance forward by 5 meters then Move to coordinates (18, 68, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(18, 68, -13, 4).join()"}
{"instruction": "Maintain hover for 7 seconds then Move right 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 8).join()"}
{"instruction": "Turn right 60 degrees then Initiate landing then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 10).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land then Rotate right by 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move left 24 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Take off then Hover for 3 seconds then Move right 40 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 9).join()"}
{"instruction": "Shift right by 25 meters then Shift left by 29 meters then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift right by 7 meters then Turn right 15 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move to coordinates (98, -57, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(98, -57, -8, 3).join()"}
{"instruction": "Advance forward by 27 meters then Fly to (-96, 14, -8) then Move right 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-96, 14, -8, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 5).join()"}
{"instruction": "Advance forward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 9).join()"}
{"instruction": "Move backward 44 meters then Move backward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence then Please land", "api_call": "client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Please take off then Turn right 60 degrees then Move left 46 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 4).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Initiate landing then Move forward 15 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 9).join()"}
{"instruction": "Execute takeoff then Rotate right by 60 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move left 35 meters then Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 10).join()"}
{"instruction": "Move right 31 meters then Execute landing then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 7).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 3).join()"}
{"instruction": "Shift left by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 4).join()"}
{"instruction": "Shift left by 38 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (71, 75, -13) then Rotate left by 30 degrees then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(71, 75, -13, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move right 16 meters then Advance forward by 5 meters then Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move backward 29 meters then Take off then Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 10).join()"}
{"instruction": "Rotate left by 90 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.takeoffAsync().join()"}
{"instruction": "Please take off then Retreat backward by 32 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 9).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move right 15 meters then Move to coordinates (40, 29, -8) then Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(40, 29, -8, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 4).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 8).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 60 degrees then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 3).join()"}
{"instruction": "Shift left by 9 meters then Turn right 45 degrees then Advance forward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 7).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-74, 68, -17) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-74, 68, -17, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 4).join()"}
{"instruction": "Move right 28 meters then Advance forward by 42 meters then Move right 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 9).join()"}
{"instruction": "Move forward 38 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 50 meters then Execute takeoff then Move backward 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 9).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 60 degrees then Fly to (-9, -83, -7) then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-9, -83, -7, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 90 degrees then Move to coordinates (80, -52, -16) then Advance forward by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(80, -52, -16, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 7).join()"}
{"instruction": "Execute takeoff then Please land then Land", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Initiate landing then Move right 5 meters then Turn left 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Execute takeoff then Retreat backward by 8 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 10).join()"}
{"instruction": "Rotate right by 15 degrees then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 60 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move forward 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 5).join()"}
{"instruction": "Fly to (82, 56, -15) then Move backward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(82, 56, -15, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 4).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate right by 30 degrees then Shift left by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 5).join()"}
{"instruction": "Please take off then Please take off then Move to coordinates (76, -9, -18)", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(76, -9, -18, 4).join()"}
{"instruction": "Move to coordinates (88, -29, -20) then Please take off then Move forward 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(88, -29, -20, 8).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Retreat backward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 9).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 7).join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 5).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn left 45 degrees then Hover for 7 seconds then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 60 degrees then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.takeoffAsync().join()"}
{"instruction": "Move right 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 3).join()"}
{"instruction": "Hover for 6 seconds then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Please take off then Take off", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-46, -29, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-46, -29, -12, 3).join()"}
{"instruction": "Please take off then Execute takeoff then Move to coordinates (68, 1, -9)", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(68, 1, -9, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Fly to (-81, -73, -8) then Shift left by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-81, -73, -8, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 5).join()"}
{"instruction": "Move right 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 6).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move forward 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 10).join()"}
{"instruction": "Land then Move left 27 meters then Execute landing", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move forward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 36 meters then Retreat backward by 22 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Turn left 15 degrees then Move right 21 meters then Retreat backward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 8).join()"}
{"instruction": "Move right 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 10).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift right by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 9).join()"}
{"instruction": "Advance forward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 10).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Please land then Turn right 60 degrees then Fly to (68, 54, -6)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(68, 54, -6, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 6).join()"}
{"instruction": "Move right 36 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move backward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 3).join()"}
{"instruction": "Move backward 50 meters then Move left 46 meters then Move forward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 9).join()"}
{"instruction": "Move backward 26 meters then Move to coordinates (51, 52, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(51, 52, -15, 9).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 15 degrees then Retreat backward by 40 meters then Move backward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 5).join()"}
{"instruction": "Shift right by 31 meters then Move left 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 3).join()"}
{"instruction": "Fly to (-83, -85, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-83, -85, -19, 3).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate right by 60 degrees then Maintain hover for 6 seconds then Move to coordinates (-11, -81, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-11, -81, -19, 6).join()"}
{"instruction": "Move forward 8 meters then Rotate right by 30 degrees then Move to coordinates (72, 58, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, 58, -14, 6).join()"}
{"instruction": "Rotate left by 60 degrees then Advance forward by 31 meters then Fly to (47, -57, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(47, -57, -14, 3).join()"}
{"instruction": "Move right 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 8).join()"}
{"instruction": "Retreat backward by 10 meters then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn left 30 degrees then Move right 28 meters then Move right 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 8).join()"}
{"instruction": "Advance forward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 5).join()"}
{"instruction": "Advance forward by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 7).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move backward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 4).join()"}
{"instruction": "Move right 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 10).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift right by 7 meters then Execute takeoff then Retreat backward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 3).join()"}
{"instruction": "Move right 26 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate left by 15 degrees then Retreat backward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 8).join()"}
{"instruction": "Move backward 49 meters then Move backward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 3).join()"}
{"instruction": "Move left 16 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Move forward 25 meters then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (17, 4, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(17, 4, -13, 7).join()"}
{"instruction": "Shift right by 41 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 4).join() then client.landAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move right 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 3).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift left by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence then Fly to (56, 9, -13) then Execute takeoff", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(56, 9, -13, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 29 meters then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate left by 90 degrees then Move forward 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 5).join()"}
{"instruction": "Move left 27 meters then Move left 39 meters then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate right by 90 degrees then Retreat backward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 5).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Take off then Advance forward by 39 meters then Move forward 43 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 9).join()"}
{"instruction": "Turn right 60 degrees then Please land then Shift left by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 3).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move to coordinates (68, -31, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(68, -31, -10, 7).join()"}
{"instruction": "Move to coordinates (12, 40, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(12, 40, -15, 9).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 10).join()"}
{"instruction": "Retreat backward by 39 meters then Move to coordinates (-89, 54, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-89, 54, -11, 7).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move forward 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 6).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (7, -14, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(7, -14, -8, 7).join()"}
{"instruction": "Move right 30 meters then Retreat backward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 5).join()"}
{"instruction": "Fly to (-95, -47, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-95, -47, -13, 10).join()"}
{"instruction": "Move left 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 7).join()"}
{"instruction": "Execute landing then Shift left by 12 meters then Turn right 90 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Retreat backward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 9).join()"}
{"instruction": "Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (-41, 60, -15) then Shift right by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-41, 60, -15, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 5).join()"}
{"instruction": "Move left 46 meters then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Fly to (98, 2, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(98, 2, -20, 9).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Shift left by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 7).join()"}
{"instruction": "Move right 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 8).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Advance forward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 9).join()"}
{"instruction": "Retreat backward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 10).join()"}
{"instruction": "Shift right by 31 meters then Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 9).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 9).join()"}
{"instruction": "Rotate left by 45 degrees then Move right 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 8).join()"}
{"instruction": "Shift left by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Please land then Move left 18 meters then Turn right 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift right by 8 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-82, 86, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-82, 86, -16, 10).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 3 seconds then Move right 27 meters then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Advance forward by 30 meters then Shift left by 14 meters then Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 5).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (11, 66, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(11, 66, -15, 10).join()"}
{"instruction": "Shift right by 25 meters then Move forward 40 meters then Fly to (-10, 15, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-10, 15, -8, 10).join()"}
{"instruction": "Turn right 15 degrees then Move right 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 4).join()"}
{"instruction": "Move backward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 4).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn left 30 degrees then Shift left by 26 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 45 degrees then Hover for 8 seconds then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Hover for 3 seconds then Retreat backward by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 8).join()"}
{"instruction": "Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 4).join()"}
{"instruction": "Shift right by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 10).join()"}
{"instruction": "Fly to (62, 0, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(62, 0, -10, 6).join()"}
{"instruction": "Move backward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 5).join()"}
{"instruction": "Please land then Move left 11 meters then Maintain hover for 9 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Please land then Move backward 25 meters then Move left 44 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 4).join()"}
{"instruction": "Move forward 20 meters then Hover for 8 seconds then Shift left by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 9).join()"}
{"instruction": "Fly to (-86, -42, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-86, -42, -6, 9).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Land then Turn right 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (-70, -65, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, -65, -15, 6).join()"}
{"instruction": "Maintain hover for 5 seconds then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 8).join()"}
{"instruction": "Initiate landing then Initiate takeoff sequence then Move left 15 meters", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 8).join()"}
{"instruction": "Shift left by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 5).join()"}
{"instruction": "Hover for 4 seconds then Move to coordinates (-59, 78, -6) then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-59, 78, -6, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 24 meters then Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 7).join()"}
{"instruction": "Shift left by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 7).join()"}
{"instruction": "Shift right by 20 meters then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 37 meters then Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 8).join()"}
{"instruction": "Move left 29 meters then Move left 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 8).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Advance forward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 7).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-29, 18, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-29, 18, -5, 5).join()"}
{"instruction": "Initiate landing then Move to coordinates (-5, -77, -7) then Move left 19 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-5, -77, -7, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 6).join()"}
{"instruction": "Fly to (-86, 92, -6) then Move to coordinates (-84, 75, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-86, 92, -6, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-84, 75, -14, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 9).join()"}
{"instruction": "Move left 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 6).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Shift left by 30 meters then Maintain hover for 6 seconds then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Please land then Turn left 90 degrees then Shift right by 8 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 3).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move left 44 meters then Move forward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Take off then Shift right by 37 meters then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 15 degrees then Turn right 45 degrees then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.landAsync().join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift right by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 4).join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 6).join()"}
{"instruction": "Shift left by 5 meters then Move backward 47 meters then Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 8).join()"}
{"instruction": "Initiate takeoff sequence then Initiate landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Move backward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 8).join()"}
{"instruction": "Move left 26 meters then Move backward 14 meters then Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 6).join()"}
{"instruction": "Rotate left by 90 degrees then Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 5).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move backward 11 meters then Retreat backward by 30 meters then Shift right by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 10).join()"}
{"instruction": "Turn right 45 degrees then Move right 7 meters then Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 8).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (-12, -79, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-12, -79, -9, 7).join()"}
{"instruction": "Turn left 30 degrees then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move to coordinates (16, 35, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(16, 35, -16, 10).join()"}
{"instruction": "Please land then Move backward 47 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 10).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 22 meters then Turn left 15 degrees then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Turn right 45 degrees then Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 10).join()"}
{"instruction": "Fly to (0, -86, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(0, -86, -11, 10).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move forward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 45 degrees then Move to coordinates (4, 54, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(4, 54, -19, 7).join()"}
{"instruction": "Initiate takeoff sequence then Move left 50 meters then Retreat backward by 9 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 6).join()"}
{"instruction": "Shift right by 25 meters then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing then Advance forward by 25 meters then Move backward 27 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 7).join()"}
{"instruction": "Move to coordinates (93, -35, -19) then Advance forward by 41 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(93, -35, -19, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move backward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 3).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 36 meters then Move backward 17 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Advance forward by 11 meters then Shift left by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 8).join()"}
{"instruction": "Shift right by 23 meters then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Retreat backward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 9).join()"}
{"instruction": "Move left 46 meters then Hover for 7 seconds then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move left 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 10).join()"}
{"instruction": "Fly to (-10, 64, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-10, 64, -18, 8).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move left 7 meters then Move to coordinates (-72, 99, -9) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-72, 99, -9, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 8 seconds then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.takeoffAsync().join()"}
{"instruction": "Execute takeoff then Retreat backward by 9 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 3).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 50 meters then Shift right by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 4).join()"}
{"instruction": "Move forward 11 meters then Shift right by 19 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 6).join() then client.takeoffAsync().join()"}
{"instruction": "Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 5).join()"}
{"instruction": "Shift right by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 4).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Shift left by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 7).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (72, 37, -18) then Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, 37, -18, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 5).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 7).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 90 degrees then Move left 49 meters then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Advance forward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move to coordinates (93, -54, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(93, -54, -10, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 8).join()"}
{"instruction": "Shift right by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 8).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 45 degrees then Move backward 15 meters then Move right 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 10).join()"}
{"instruction": "Move backward 21 meters then Shift left by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 9).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Retreat backward by 42 meters then Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 9).join()"}
{"instruction": "Move left 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 4).join()"}
{"instruction": "Hover for 4 seconds then Take off then Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 4).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (10, 43, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(10, 43, -15, 9).join()"}
{"instruction": "Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 3).join()"}
{"instruction": "Initiate takeoff sequence then Advance forward by 46 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 4).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Maintain hover for 9 seconds then Retreat backward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 9).join()"}
{"instruction": "Maintain hover for 3 seconds then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then client.landAsync().join()"}
{"instruction": "Shift right by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 8).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Execute landing then Shift left by 28 meters then Execute takeoff", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (80, 36, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(80, 36, -20, 6).join()"}
{"instruction": "Fly to (-70, -62, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, -62, -6, 9).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate right by 15 degrees then Move left 42 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Please land then Turn left 15 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move forward 48 meters then Fly to (-75, 8, -10) then Move forward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, 8, -10, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 10).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 5).join()"}
{"instruction": "Move to coordinates (92, -51, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(92, -51, -19, 7).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (20, 7, -8) then Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(20, 7, -8, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 3).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 20 meters then Initiate landing then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 4).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Advance forward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 5).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (51, 79, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(51, 79, -14, 4).join()"}
{"instruction": "Maintain hover for 7 seconds then Move right 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 9).join()"}
{"instruction": "Move to coordinates (68, 67, -17) then Retreat backward by 38 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(68, 67, -17, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 7).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Advance forward by 19 meters then Maintain hover for 8 seconds then Move to coordinates (20, -27, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(20, -27, -9, 5).join()"}
{"instruction": "Initiate landing then Rotate left by 90 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate left by 30 degrees then Shift left by 24 meters then Move to coordinates (37, -11, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(37, -11, -11, 6).join()"}
{"instruction": "Retreat backward by 17 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute landing then Turn right 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 38 meters then Move to coordinates (-82, 58, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-82, 58, -12, 7).join()"}
{"instruction": "Retreat backward by 11 meters then Move to coordinates (-67, 48, -12) then Move right 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-67, 48, -12, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 7).join()"}
{"instruction": "Retreat backward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 10).join()"}
{"instruction": "Maintain hover for 7 seconds then Turn right 45 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Retreat backward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 3).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 36 meters then Move forward 6 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 7).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (-86, -91, -8) then Hover for 10 seconds then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-86, -91, -8, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (35, -77, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(35, -77, -13, 10).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 33 meters then Maintain hover for 7 seconds then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then client.takeoffAsync().join()"}
{"instruction": "Shift left by 12 meters then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Fly to (-67, 86, -15) then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-67, 86, -15, 8).join() then client.landAsync().join()"}
{"instruction": "Turn right 15 degrees then Move right 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Turn right 45 degrees then Move to coordinates (43, 9, -5) then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(43, 9, -5, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Shift right by 33 meters then Move to coordinates (-20, 33, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-20, 33, -8, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 30 degrees then Execute landing then Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 4).join()"}
{"instruction": "Move to coordinates (-75, 9, -18) then Rotate left by 45 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, 9, -18, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move right 10 meters then Rotate right by 60 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join()"}
{"instruction": "Shift left by 13 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 10).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 27 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 6).join() then client.takeoffAsync().join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Shift left by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 10).join()"}
{"instruction": "Retreat backward by 17 meters then Move to coordinates (1, 82, -16) then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(1, 82, -16, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift right by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move to coordinates (-31, 30, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-31, 30, -14, 9).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move backward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 3).join()"}
{"instruction": "Move to coordinates (11, -34, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(11, -34, -17, 7).join()"}
{"instruction": "Move left 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 3).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-40, -16, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-40, -16, -11, 3).join()"}
{"instruction": "Move backward 11 meters then Move backward 28 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 9).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move to coordinates (-97, -7, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-97, -7, -5, 5).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 5 seconds then Advance forward by 30 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move to coordinates (-89, 91, -17) then Initiate takeoff sequence then Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-89, 91, -17, 10).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 8).join()"}
{"instruction": "Rotate left by 30 degrees then Maintain hover for 7 seconds then Fly to (-98, 46, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-98, 46, -12, 10).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 5 meters then Advance forward by 50 meters then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move right 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 9).join()"}
{"instruction": "Shift left by 29 meters then Hover for 8 seconds then Shift left by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 4).join()"}
{"instruction": "Rotate right by 45 degrees then Rotate right by 15 degrees then Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 5).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off then Hover for 10 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move to coordinates (-42, -27, -12) then Turn right 30 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-42, -27, -12, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 45 degrees then Land then Move right 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 8).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Hover for 6 seconds then Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 4).join()"}
{"instruction": "Move left 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 10).join()"}
{"instruction": "Shift right by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 3).join()"}
{"instruction": "Move backward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 10).join()"}
{"instruction": "Advance forward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing then Turn left 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift left by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 3).join()"}
{"instruction": "Fly to (24, 38, -7) then Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(24, 38, -7, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 8).join()"}
{"instruction": "Shift right by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 5).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Retreat backward by 36 meters then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move left 38 meters then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 6 meters then Move backward 48 meters then Fly to (69, 38, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(69, 38, -14, 9).join()"}
{"instruction": "Fly to (-72, 54, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-72, 54, -19, 10).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Shift right by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 5).join()"}
{"instruction": "Advance forward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 6).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move right 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 5).join()"}
{"instruction": "Advance forward by 10 meters then Take off then Move to coordinates (33, 72, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 3).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(33, 72, -12, 9).join()"}
{"instruction": "Initiate landing then Turn left 90 degrees then Hover for 8 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Advance forward by 17 meters then Fly to (-35, 90, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-35, 90, -15, 10).join()"}
{"instruction": "Shift left by 37 meters then Advance forward by 22 meters then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff then Please take off then Initiate landing", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move left 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 3).join()"}
{"instruction": "Shift left by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 3).join()"}
{"instruction": "Maintain hover for 8 seconds then Maintain hover for 10 seconds then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 4).join()"}
{"instruction": "Hover for 9 seconds then Move forward 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 6).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift left by 5 meters then Advance forward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 6).join()"}
{"instruction": "Move left 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 3).join()"}
{"instruction": "Hover for 8 seconds then Hover for 3 seconds then Advance forward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 8).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move left 44 meters then Move left 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 9).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 10).join()"}
{"instruction": "Move right 9 meters then Move to coordinates (-14, -20, -9) then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-14, -20, -9, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 8).join()"}
{"instruction": "Fly to (4, -12, -18) then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(4, -12, -18, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 45 degrees then Move forward 23 meters then Fly to (-81, 71, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-81, 71, -6, 4).join()"}
{"instruction": "Move left 29 meters then Advance forward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 6).join()"}
{"instruction": "Move backward 26 meters then Fly to (-43, 80, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-43, 80, -7, 3).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 7).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move forward 12 meters then Move forward 11 meters then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Advance forward by 32 meters then Retreat backward by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 4).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 4).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 15 degrees then Move right 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 6).join()"}
{"instruction": "Shift right by 10 meters then Shift right by 40 meters then Move right 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 6).join()"}
{"instruction": "Shift left by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 5).join()"}
{"instruction": "Move to coordinates (64, 50, -6) then Rotate right by 90 degrees then Shift right by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(64, 50, -6, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 5).join()"}
{"instruction": "Shift right by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 3).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move right 37 meters then Move backward 36 meters then Move left 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 7).join()"}
{"instruction": "Move forward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 7).join()"}
{"instruction": "Hover for 9 seconds then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 7).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 90 degrees then Advance forward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 9).join()"}
{"instruction": "Rotate right by 30 degrees then Retreat backward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 5).join()"}
{"instruction": "Execute landing then Move to coordinates (-82, 99, -14) then Rotate left by 30 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-82, 99, -14, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift left by 41 meters then Advance forward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 6).join()"}
{"instruction": "Fly to (-53, 61, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-53, 61, -18, 7).join()"}
{"instruction": "Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 5).join()"}
{"instruction": "Move backward 21 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Retreat backward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 8).join()"}
{"instruction": "Move right 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 6).join()"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 7).join()"}
{"instruction": "Rotate left by 30 degrees then Maintain hover for 6 seconds then Move to coordinates (87, -66, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(87, -66, -8, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 8).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move forward 10 meters then Move left 39 meters then Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 3).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 30 degrees then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Shift left by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 9).join()"}
{"instruction": "Shift left by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 10).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move to coordinates (-32, -1, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, -1, -13, 5).join()"}
{"instruction": "Take off then Rotate left by 15 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 8).join()"}
{"instruction": "Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 3).join()"}
{"instruction": "Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 5).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 3).join()"}
{"instruction": "Move left 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 9).join()"}
{"instruction": "Move forward 24 meters then Retreat backward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 10).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Fly to (18, -56, -18) then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(18, -56, -18, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate right by 30 degrees then Initiate takeoff sequence then Advance forward by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 6).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land then Fly to (7, -36, -17)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(7, -36, -17, 7).join()"}
{"instruction": "Initiate landing then Advance forward by 12 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 10).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift left by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 8).join()"}
{"instruction": "Fly to (-32, 6, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, 6, -14, 6).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 10).join()"}
{"instruction": "Maintain hover for 5 seconds then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 3 seconds then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then client.takeoffAsync().join()"}
{"instruction": "Move backward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 3).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-7, -69, -12) then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-7, -69, -12, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 6).join()"}
{"instruction": "Move backward 46 meters then Move right 16 meters then Shift right by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 6).join()"}
{"instruction": "Move right 27 meters then Fly to (-10, -71, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-10, -71, -8, 4).join()"}
{"instruction": "Maintain hover for 10 seconds then Retreat backward by 44 meters then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Take off then Move left 16 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 7).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move to coordinates (46, 22, -20) then Advance forward by 24 meters then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(46, 22, -20, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Turn left 90 degrees then Fly to (12, 85, -19) then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(12, 85, -19, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Fly to (8, 28, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(8, 28, -12, 7).join()"}
{"instruction": "Retreat backward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 9).join()"}
{"instruction": "Land then Take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Shift left by 34 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 4).join()"}
{"instruction": "Hover for 9 seconds then Turn right 15 degrees then Move backward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 10).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 9).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 4).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move to coordinates (14, -73, -12) then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(14, -73, -12, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 19 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 7).join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 9).join()"}
{"instruction": "Retreat backward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 9).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 7 meters then Initiate takeoff sequence then Shift left by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 9).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 7).join()"}
{"instruction": "Move left 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 6).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 7).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 5).join()"}
{"instruction": "Shift left by 11 meters then Maintain hover for 6 seconds then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then client.takeoffAsync().join()"}
{"instruction": "Move left 42 meters then Initiate landing then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 7).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-32, 65, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, 65, -9, 9).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Please land then Maintain hover for 3 seconds then Move to coordinates (21, 7, -5)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(21, 7, -5, 7).join()"}
{"instruction": "Advance forward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 9).join()"}
{"instruction": "Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move right 36 meters then Shift left by 34 meters then Shift left by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 7).join()"}
{"instruction": "Turn left 45 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 31 meters then Move to coordinates (-62, -81, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-62, -81, -8, 8).join()"}
{"instruction": "Execute takeoff then Rotate left by 60 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Hover for 3 seconds then Shift right by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 6).join()"}
{"instruction": "Move left 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 7).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 26 meters then Maintain hover for 7 seconds then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Maintain hover for 5 seconds then Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Retreat backward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Fly to (-75, -69, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -69, -14, 4).join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 9).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Turn left 45 degrees then Retreat backward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 4).join()"}
{"instruction": "Move backward 8 meters then Rotate right by 15 degrees then Retreat backward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 45 meters then Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 3).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 5).join()"}
{"instruction": "Retreat backward by 42 meters then Advance forward by 10 meters then Move forward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 4).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 5).join()"}
{"instruction": "Execute landing then Move backward 14 meters then Maintain hover for 8 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Shift left by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 3).join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 6).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate left by 90 degrees then Maintain hover for 3 seconds then Fly to (-14, 96, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-14, 96, -16, 4).join()"}
{"instruction": "Turn left 60 degrees then Shift right by 34 meters then Shift left by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 9).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move backward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 6).join()"}
{"instruction": "Move right 39 meters then Move to coordinates (-7, 56, -9) then Shift right by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-7, 56, -9, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 10).join()"}
{"instruction": "Move left 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 10).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 3).join()"}
{"instruction": "Take off then Rotate right by 60 degrees then Move to coordinates (-32, -38, -18)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, -38, -18, 9).join()"}
{"instruction": "Execute landing then Maintain hover for 10 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move left 24 meters then Please take off then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move left 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 9).join()"}
{"instruction": "Execute landing then Execute takeoff", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (3, 55, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(3, 55, -8, 5).join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 4).join()"}
{"instruction": "Move backward 27 meters then Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 6).join()"}
{"instruction": "Move right 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 7).join()"}
{"instruction": "Execute takeoff then Move backward 22 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 6).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn left 15 degrees then Shift left by 47 meters then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 9).join()"}
{"instruction": "Move left 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 3).join()"}
{"instruction": "Move to coordinates (0, 5, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(0, 5, -10, 10).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move forward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 5).join()"}
{"instruction": "Execute landing then Shift right by 47 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 10).join()"}
{"instruction": "Move backward 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 8).join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 7).join()"}
{"instruction": "Move to coordinates (78, -64, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, -64, -9, 5).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (98, -31, -8) then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(98, -31, -8, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (63, 62, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(63, 62, -12, 10).join()"}
{"instruction": "Move forward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 9).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (29, 56, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, 56, -11, 3).join()"}
{"instruction": "Shift right by 13 meters then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute landing then Move backward 11 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 6).join()"}
{"instruction": "Maintain hover for 10 seconds then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 15 degrees then Move forward 45 meters then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Turn right 60 degrees then Please land then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate left by 60 degrees then Shift right by 45 meters then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-28, 48, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-28, 48, -9, 7).join()"}
{"instruction": "Retreat backward by 21 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move left 28 meters then Advance forward by 18 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move backward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 10).join()"}
{"instruction": "Move to coordinates (-52, 73, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-52, 73, -15, 5).join()"}
{"instruction": "Move forward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 9).join()"}
{"instruction": "Move left 46 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move to coordinates (-22, -87, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-22, -87, -10, 4).join()"}
{"instruction": "Move to coordinates (19, -8, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(19, -8, -13, 7).join()"}
{"instruction": "Turn right 15 degrees then Please land then Move right 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 8).join()"}
{"instruction": "Shift left by 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 7).join()"}
{"instruction": "Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 3).join()"}
{"instruction": "Move left 49 meters then Move left 32 meters then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move right 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 3).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 45 degrees then Initiate takeoff sequence then Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 10).join()"}
{"instruction": "Move forward 11 meters then Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 10).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move backward 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 7).join()"}
{"instruction": "Shift left by 50 meters then Move left 41 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move forward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 3).join()"}
{"instruction": "Advance forward by 50 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift left by 31 meters then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate right by 60 degrees then Move to coordinates (-59, -53, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-59, -53, -7, 4).join()"}
{"instruction": "Fly to (-78, -20, -8) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-78, -20, -8, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move right 37 meters then Move to coordinates (-89, -59, -10) then Advance forward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-89, -59, -10, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 7).join()"}
{"instruction": "Turn right 45 degrees then Move right 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 4).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move left 18 meters then Move forward 12 meters then Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 7).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Take off then Rotate right by 60 degrees then Fly to (46, 97, -10)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(46, 97, -10, 6).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move left 21 meters then Retreat backward by 15 meters then Move forward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 6).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn right 90 degrees then Move backward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 25 meters then Turn left 45 degrees then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 7).join()"}
{"instruction": "Move to coordinates (38, 7, -13) then Turn right 15 degrees then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(38, 7, -13, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 7).join()"}
{"instruction": "Fly to (58, -74, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(58, -74, -15, 9).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Fly to (-85, 12, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-85, 12, -14, 3).join()"}
{"instruction": "Shift left by 47 meters then Fly to (-87, -81, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-87, -81, -5, 10).join()"}
{"instruction": "Move right 7 meters then Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 6).join()"}
{"instruction": "Fly to (-46, -30, -10) then Move left 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-46, -30, -10, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 10).join()"}
{"instruction": "Rotate left by 30 degrees then Move backward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 6).join()"}
{"instruction": "Take off then Advance forward by 11 meters then Move to coordinates (-57, 45, -13)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-57, 45, -13, 4).join()"}
{"instruction": "Retreat backward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 10).join()"}
{"instruction": "Turn left 30 degrees then Initiate takeoff sequence then Move to coordinates (-76, -84, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-76, -84, -7, 3).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move to coordinates (-91, -98, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-91, -98, -7, 9).join()"}
{"instruction": "Shift right by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 10).join()"}
{"instruction": "Move to coordinates (-31, 5, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-31, 5, -7, 4).join()"}
{"instruction": "Maintain hover for 6 seconds then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then client.takeoffAsync().join()"}
{"instruction": "Move right 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 10).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 60 degrees then Move left 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 8).join()"}
{"instruction": "Land then Move left 31 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 7).join()"}
{"instruction": "Please take off then Shift left by 13 meters then Hover for 3 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move left 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 4).join()"}
{"instruction": "Move right 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 4).join()"}
{"instruction": "Shift right by 34 meters then Move left 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 5).join()"}
{"instruction": "Shift right by 8 meters then Move forward 35 meters then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 8).join()"}
{"instruction": "Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 3).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Hover for 8 seconds then Advance forward by 36 meters then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move backward 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 8).join()"}
{"instruction": "Move right 27 meters then Maintain hover for 6 seconds then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Fly to (93, -31, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(93, -31, -7, 9).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Initiate landing then Rotate left by 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-30, 16, -8) then Maintain hover for 4 seconds then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-30, 16, -8, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move forward 46 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move right 48 meters then Move forward 8 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 7 meters then Move left 49 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Please land then Move left 14 meters then Turn left 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Retreat backward by 31 meters then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Retreat backward by 38 meters then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Fly to (4, 37, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(4, 37, -6, 8).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 40 meters then Initiate landing then Move left 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 40, current_z, 7).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 3).join()"}
{"instruction": "Retreat backward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 7).join()"}
{"instruction": "Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 5).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift right by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 3).join()"}
{"instruction": "Rotate right by 30 degrees then Move right 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 7).join()"}
{"instruction": "Rotate right by 45 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move right 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 10).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate left by 60 degrees then Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Fly to (51, 33, -11) then Retreat backward by 24 meters then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(51, 33, -11, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 7).join()"}
{"instruction": "Fly to (51, -20, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(51, -20, -20, 4).join()"}
{"instruction": "Shift left by 22 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn left 90 degrees then Move backward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 10).join()"}
{"instruction": "Hover for 6 seconds then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 27 meters then Turn left 30 degrees then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 8).join()"}
{"instruction": "Retreat backward by 7 meters then Turn left 90 degrees then Move to coordinates (2, -68, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(2, -68, -20, 10).join()"}
{"instruction": "Shift left by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 3).join()"}
{"instruction": "Shift right by 37 meters then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Retreat backward by 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 5).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 8).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-6, 4, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-6, 4, -13, 4).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 7).join()"}
{"instruction": "Maintain hover for 4 seconds then Move right 16 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 3 seconds then Move backward 35 meters then Move forward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 6).join()"}
{"instruction": "Shift left by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 8).join()"}
{"instruction": "Execute landing then Initiate takeoff sequence then Move backward 8 meters", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 9).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Execute takeoff then Move right 48 meters then Fly to (0, -9, -12)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(0, -9, -12, 9).join()"}
{"instruction": "Please take off then Shift right by 37 meters then Advance forward by 9 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 7).join()"}
{"instruction": "Rotate right by 60 degrees then Please take off then Advance forward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 10).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift left by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 3).join()"}
{"instruction": "Execute landing then Fly to (-93, -50, -7)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-93, -50, -7, 7).join()"}
{"instruction": "Execute landing then Rotate left by 30 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 90 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.takeoffAsync().join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Shift right by 34 meters then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move to coordinates (42, 74, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(42, 74, -12, 10).join()"}
{"instruction": "Shift left by 35 meters then Please take off then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Hover for 3 seconds then Move to coordinates (-64, -34, -5) then Move to coordinates (13, 62, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-64, -34, -5, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(13, 62, -14, 8).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 19 meters then Move right 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 9).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 13 meters then Shift right by 49 meters then Fly to (6, 66, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 49, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(6, 66, -10, 4).join()"}
{"instruction": "Retreat backward by 31 meters then Shift right by 15 meters then Move to coordinates (56, -7, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(56, -7, -13, 10).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (50, 31, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(50, 31, -13, 4).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Fly to (-19, 2, -19) then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-19, 2, -19, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 6).join()"}
{"instruction": "Fly to (47, 70, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(47, 70, -11, 5).join()"}
{"instruction": "Move backward 8 meters then Move left 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 10).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Fly to (91, 42, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, 42, -7, 6).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move right 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 6).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move right 10 meters then Move backward 12 meters then Move to coordinates (42, 17, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(42, 17, -11, 10).join()"}
{"instruction": "Turn right 90 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 5).join()"}
{"instruction": "Shift right by 47 meters then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 22 meters then Shift right by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 10).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 45 degrees then Fly to (14, -8, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(14, -8, -6, 5).join()"}
{"instruction": "Fly to (88, -9, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(88, -9, -7, 10).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 30 degrees then Turn left 90 degrees then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 20 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (-100, -28, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-100, -28, -15, 10).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Initiate takeoff sequence then Advance forward by 43 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Maintain hover for 3 seconds then Advance forward by 12 meters then Fly to (-43, -75, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-43, -75, -12, 6).join()"}
{"instruction": "Rotate right by 90 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Shift left by 28 meters then Rotate left by 60 degrees then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Turn left 90 degrees then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 50 meters then Rotate left by 30 degrees then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift right by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Shift right by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 5).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 10 seconds then Fly to (-59, 2, -14) then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-59, 2, -14, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Fly to (-83, -21, -13) then Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-83, -21, -13, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 10).join()"}
{"instruction": "Turn right 90 degrees then Move left 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 7).join()"}
{"instruction": "Advance forward by 12 meters then Move forward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 7).join()"}
{"instruction": "Fly to (40, -38, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(40, -38, -9, 5).join()"}
{"instruction": "Move right 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 4).join()"}
{"instruction": "Advance forward by 12 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Hover for 5 seconds then Shift right by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 8).join()"}
{"instruction": "Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 8).join()"}
{"instruction": "Rotate left by 90 degrees then Shift right by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 9).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Please take off then Hover for 9 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move to coordinates (75, 58, -10) then Rotate right by 90 degrees then Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(75, 58, -10, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 6).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land then Take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-65, 23, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-65, 23, -15, 4).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (94, -88, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(94, -88, -15, 9).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Advance forward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 3).join()"}
{"instruction": "Move forward 24 meters then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Fly to (-63, -80, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-63, -80, -20, 4).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Execute takeoff then Advance forward by 46 meters then Execute takeoff", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 3).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Retreat backward by 43 meters then Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 9).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move left 8 meters then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Advance forward by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 6).join()"}
{"instruction": "Fly to (13, -51, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(13, -51, -19, 8).join()"}
{"instruction": "Fly to (94, 56, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(94, 56, -7, 7).join()"}
{"instruction": "Retreat backward by 6 meters then Advance forward by 42 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 5 meters then Move to coordinates (-53, 57, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-53, 57, -15, 9).join()"}
{"instruction": "Move left 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 7).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Shift right by 42 meters then Move left 23 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 6).join()"}
{"instruction": "Retreat backward by 49 meters then Move to coordinates (-40, -73, -7) then Shift left by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-40, -73, -7, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 8).join()"}
{"instruction": "Shift right by 41 meters then Initiate takeoff sequence then Move backward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 3).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 3).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move to coordinates (54, 41, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(54, 41, -6, 3).join()"}
{"instruction": "Advance forward by 15 meters then Fly to (30, 24, -18) then Shift left by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(30, 24, -18, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 8).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move right 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 6).join()"}
{"instruction": "Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 6).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Hover for 9 seconds then Shift left by 13 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 15 degrees then Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 45 meters then Shift left by 36 meters then Shift right by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 10).join()"}
{"instruction": "Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 9).join()"}
{"instruction": "Move to coordinates (29, -58, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, -58, -7, 7).join()"}
{"instruction": "Rotate left by 60 degrees then Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Maintain hover for 6 seconds then Move left 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 10).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move backward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 9).join()"}
{"instruction": "Move backward 38 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 7).join() then client.landAsync().join()"}
{"instruction": "Shift right by 7 meters then Move left 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 3).join()"}
{"instruction": "Move right 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 10).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 10 meters then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move right 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 10).join()"}
{"instruction": "Turn left 45 degrees then Maintain hover for 9 seconds then Move right 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 5).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (91, -85, -18) then Take off then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, -85, -18, 5).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 4).join()"}
{"instruction": "Move to coordinates (26, 27, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(26, 27, -9, 8).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-60, 80, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-60, 80, -18, 10).join()"}
{"instruction": "Fly to (69, 11, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(69, 11, -19, 3).join()"}
{"instruction": "Move backward 38 meters then Move forward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 4).join()"}
{"instruction": "Hover for 6 seconds then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Retreat backward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 7 meters then Rotate right by 45 degrees then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then client.takeoffAsync().join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Shift right by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 5).join()"}
{"instruction": "Execute takeoff then Execute landing then Land", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Shift left by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 5).join()"}
{"instruction": "Move forward 40 meters then Fly to (13, 45, -15) then Move forward 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(13, 45, -15, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 10).join()"}
{"instruction": "Move left 17 meters then Advance forward by 24 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Shift right by 16 meters then Shift right by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 4).join()"}
{"instruction": "Move forward 22 meters then Move forward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 17 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn left 45 degrees then Advance forward by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 9).join()"}
{"instruction": "Advance forward by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 5).join()"}
{"instruction": "Rotate right by 90 degrees then Retreat backward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 9).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Please land then Hover for 6 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate left by 45 degrees then Move to coordinates (66, 56, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(66, 56, -15, 10).join()"}
{"instruction": "Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 3).join()"}
{"instruction": "Maintain hover for 5 seconds then Move forward 38 meters then Move forward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (32, -41, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(32, -41, -17, 5).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move backward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 6).join()"}
{"instruction": "Move backward 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 7).join()"}
{"instruction": "Advance forward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (-76, 98, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-76, 98, -9, 10).join()"}
{"instruction": "Move forward 34 meters then Initiate takeoff sequence then Move left 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 5).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 30 degrees then Shift right by 14 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 16 meters then Move backward 26 meters then Move backward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (40, -73, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(40, -73, -13, 9).join()"}
{"instruction": "Retreat backward by 14 meters then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Maintain hover for 4 seconds then Execute landing then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move forward 23 meters then Move backward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 3).join()"}
{"instruction": "Shift left by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 27, current_z, 5).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 6).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 90 degrees then Turn right 45 degrees then Move right 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 7).join()"}
{"instruction": "Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 6).join()"}
{"instruction": "Initiate landing then Execute takeoff then Shift right by 18 meters", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 6).join()"}
{"instruction": "Move backward 36 meters then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Fly to (47, -6, -13) then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(47, -6, -13, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 7).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Please land then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (-73, 99, -16) then Move left 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-73, 99, -16, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 9).join()"}
{"instruction": "Move backward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 7).join()"}
{"instruction": "Move forward 18 meters then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Shift left by 38 meters then Initiate takeoff sequence then Move left 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 4).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 6).join()"}
{"instruction": "Move forward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 3).join()"}
{"instruction": "Shift right by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 6 seconds then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 46 meters then Fly to (43, 4, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(43, 4, -18, 8).join()"}
{"instruction": "Move left 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 3).join()"}
{"instruction": "Move right 28 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (5, 40, -13) then Fly to (25, -90, -5) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(5, 40, -13, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(25, -90, -5, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 30 degrees then Hover for 6 seconds then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 10).join()"}
{"instruction": "Rotate right by 90 degrees then Shift left by 19 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 5).join()"}
{"instruction": "Move to coordinates (-99, 48, -10) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-99, 48, -10, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move forward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 6).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move to coordinates (5, -83, -16) then Shift right by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(5, -83, -16, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 49 meters then Move right 36 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift left by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 8).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 45 degrees then Retreat backward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 8).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 31 meters then Turn right 90 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 17 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 4).join() then client.landAsync().join()"}
{"instruction": "Move backward 5 meters then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move left 48 meters then Turn right 30 degrees then Advance forward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 3).join()"}
{"instruction": "Fly to (76, 5, -5) then Move to coordinates (-20, 93, -16) then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(76, 5, -5, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-20, 93, -16, 6).join() then client.takeoffAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Execute takeoff then Turn right 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 8).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 43 meters then Move backward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 6 meters then Rotate right by 15 degrees then Retreat backward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 4).join()"}
{"instruction": "Move to coordinates (-46, 40, -10) then Shift left by 48 meters then Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-46, 40, -10, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 5).join()"}
{"instruction": "Move backward 40 meters then Advance forward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 7 meters then Move right 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 3).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 9).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 10 seconds then Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 4).join()"}
{"instruction": "Shift left by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 7).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (6, -6, -9) then Shift right by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(6, -6, -9, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 6).join()"}
{"instruction": "Turn right 60 degrees then Move to coordinates (77, -90, -9) then Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(77, -90, -9, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 6).join()"}
{"instruction": "Move forward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 3).join()"}
{"instruction": "Retreat backward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 7).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 5).join()"}
{"instruction": "Shift left by 14 meters then Shift right by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 6).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 30 meters then Initiate landing then Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 7).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 6).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-59, -51, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-59, -51, -16, 8).join()"}
{"instruction": "Move forward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 7).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move to coordinates (44, -29, -5) then Move to coordinates (-45, -86, -16) then Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(44, -29, -5, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-45, -86, -16, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 3).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate left by 30 degrees then Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 8).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Initiate landing then Retreat backward by 44 meters then Move forward 43 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 3).join()"}
{"instruction": "Move left 15 meters then Retreat backward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 3).join()"}
{"instruction": "Shift left by 9 meters then Shift right by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 10).join()"}
{"instruction": "Please land then Move to coordinates (82, -29, -10) then Maintain hover for 10 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(82, -29, -10, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move to coordinates (91, 81, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, 81, -16, 5).join()"}
{"instruction": "Move to coordinates (-82, 92, -12) then Advance forward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-82, 92, -12, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 5).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Maintain hover for 10 seconds then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 6).join()"}
{"instruction": "Move right 14 meters then Fly to (-63, -80, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-63, -80, -13, 7).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate left by 90 degrees then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 29 meters then Move to coordinates (63, 92, -6) then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(63, 92, -6, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing then Move left 21 meters then Land", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift left by 14 meters then Please land then Move forward 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 8).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 8).join()"}
{"instruction": "Move backward 6 meters then Move left 21 meters then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move right 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 8).join()"}
{"instruction": "Advance forward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 3).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 9).join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 5).join()"}
{"instruction": "Move backward 45 meters then Shift right by 48 meters then Fly to (75, 36, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(75, 36, -20, 5).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (-16, -98, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-16, -98, -15, 10).join()"}
{"instruction": "Move to coordinates (-82, 99, -7) then Please land then Move backward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-82, 99, -7, 8).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 9).join()"}
{"instruction": "Rotate right by 60 degrees then Retreat backward by 28 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move backward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 3).join()"}
{"instruction": "Fly to (-43, -14, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-43, -14, -13, 9).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-51, -39, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-51, -39, -15, 10).join()"}
{"instruction": "Move left 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 4).join()"}
{"instruction": "Please land then Move forward 28 meters then Move forward 35 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 4).join()"}
{"instruction": "Rotate left by 60 degrees then Turn left 15 degrees then Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 5).join()"}
{"instruction": "Rotate left by 90 degrees then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 14 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 60 degrees then Shift left by 31 meters then Fly to (-5, -66, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 31, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-5, -66, -15, 7).join()"}
{"instruction": "Fly to (-62, 71, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-62, 71, -14, 6).join()"}
{"instruction": "Land then Hover for 4 seconds then Advance forward by 14 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 10).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move forward 9 meters then Hover for 9 seconds then Shift left by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 8).join()"}
{"instruction": "Move right 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 4).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 19 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move left 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 7).join()"}
{"instruction": "Turn left 90 degrees then Shift left by 46 meters then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 6).join()"}
{"instruction": "Rotate left by 60 degrees then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Advance forward by 6 meters then Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 10).join()"}
{"instruction": "Advance forward by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Retreat backward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (-70, -24, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, -24, -16, 3).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 41 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Retreat backward by 36 meters then Retreat backward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 3).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 3 seconds then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then client.takeoffAsync().join()"}
{"instruction": "Move backward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 4).join()"}
{"instruction": "Turn right 30 degrees then Shift left by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 4).join()"}
{"instruction": "Move backward 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 4).join()"}
{"instruction": "Move backward 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 4).join()"}
{"instruction": "Move right 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 7).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move right 48 meters then Advance forward by 9 meters then Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence then Move forward 43 meters then Move left 8 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 6).join()"}
{"instruction": "Turn right 15 degrees then Move right 31 meters then Move right 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 3).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 13 meters then Shift left by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 6).join()"}
{"instruction": "Shift left by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 3).join()"}
{"instruction": "Hover for 7 seconds then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then client.takeoffAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move right 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 9).join()"}
{"instruction": "Fly to (-30, 19, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-30, 19, -19, 8).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move backward 47 meters then Execute takeoff then Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 8).join()"}
{"instruction": "Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 10).join()"}
{"instruction": "Fly to (-74, -13, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-74, -13, -16, 9).join()"}
{"instruction": "Execute landing then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 18 meters then Shift right by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 8).join()"}
{"instruction": "Move forward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 6).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Retreat backward by 10 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Initiate landing then Rotate left by 15 degrees then Move to coordinates (9, -14, -17)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(9, -14, -17, 4).join()"}
{"instruction": "Move backward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 4).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (-12, -69, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-12, -69, -13, 9).join()"}
{"instruction": "Move backward 47 meters then Shift right by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 47, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 4).join()"}
{"instruction": "Move forward 24 meters then Maintain hover for 6 seconds then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Execute takeoff then Move forward 34 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 8).join()"}
{"instruction": "Take off then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 38 meters then Move forward 35 meters then Move to coordinates (86, -73, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(86, -73, -14, 3).join()"}
{"instruction": "Advance forward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 10).join()"}
{"instruction": "Advance forward by 44 meters then Turn left 90 degrees then Fly to (11, -61, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(11, -61, -13, 6).join()"}
{"instruction": "Turn left 30 degrees then Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 10).join()"}
{"instruction": "Take off then Take off", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 60 degrees then Maintain hover for 6 seconds then Move right 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 8).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Shift right by 48 meters then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 6).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 30 degrees then Turn right 45 degrees then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Fly to (23, 21, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(23, 21, -18, 8).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Fly to (-80, 74, -8) then Shift left by 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-80, 74, -8, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 8).join()"}
{"instruction": "Shift left by 16 meters then Move forward 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 4).join()"}
{"instruction": "Fly to (69, 22, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(69, 22, -9, 3).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift right by 15 meters then Move right 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 5).join()"}
{"instruction": "Advance forward by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 10).join()"}
{"instruction": "Move forward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 5).join()"}
{"instruction": "Shift right by 22 meters then Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move forward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 3).join()"}
{"instruction": "Advance forward by 20 meters then Hover for 7 seconds then Move left 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 10).join()"}
{"instruction": "Advance forward by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 6).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 4).join()"}
{"instruction": "Move backward 36 meters then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Move backward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 7).join()"}
{"instruction": "Execute takeoff then Initiate takeoff sequence then Fly to (85, -94, -9)", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(85, -94, -9, 6).join()"}
{"instruction": "Move to coordinates (40, -85, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(40, -85, -20, 7).join()"}
{"instruction": "Retreat backward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 7).join()"}
{"instruction": "Move right 32 meters then Advance forward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 7).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Initiate takeoff sequence then Move backward 17 meters then Move forward 20 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 7).join()"}
{"instruction": "Retreat backward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 6).join()"}
{"instruction": "Move forward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 36, current_y, current_z, 5).join()"}
{"instruction": "Move right 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 5).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Hover for 7 seconds then Rotate left by 60 degrees then Move backward 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 5).join()"}
{"instruction": "Fly to (-90, 92, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-90, 92, -14, 8).join()"}
{"instruction": "Fly to (69, 88, -19)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(69, 88, -19, 9).join()"}
{"instruction": "Initiate takeoff sequence then Rotate right by 30 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Move right 20 meters then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 45 degrees then Retreat backward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 7).join()"}
{"instruction": "Move right 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 9).join()"}
{"instruction": "Move right 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 5).join()"}
{"instruction": "Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 6).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 4).join()"}
{"instruction": "Advance forward by 41 meters then Land then Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 5).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift right by 33 meters then Land then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 3).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Retreat backward by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 3).join()"}
{"instruction": "Advance forward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 4).join()"}
{"instruction": "Move to coordinates (-82, -30, -9) then Turn left 15 degrees then Fly to (82, -96, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-82, -30, -9, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(82, -96, -15, 7).join()"}
{"instruction": "Move right 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 3).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 8).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Advance forward by 47 meters then Move to coordinates (98, 58, -10) then Shift right by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(98, 58, -10, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 10).join()"}
{"instruction": "Fly to (-80, 59, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-80, 59, -9, 3).join()"}
{"instruction": "Move forward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 6).join()"}
{"instruction": "Rotate right by 15 degrees then Move forward 9 meters then Move backward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 7).join()"}
{"instruction": "Execute landing then Hover for 6 seconds then Fly to (55, 9, -14)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(55, 9, -14, 4).join()"}
{"instruction": "Advance forward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 10).join()"}
{"instruction": "Turn right 15 degrees then Shift right by 14 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 9).join()"}
{"instruction": "Move forward 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 6).join()"}
{"instruction": "Turn left 60 degrees then Move forward 16 meters then Retreat backward by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 13, current_y, current_z, 8).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Retreat backward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Take off then Hover for 3 seconds then Execute landing", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then client.landAsync().join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Shift right by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 8).join()"}
{"instruction": "Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 7).join()"}
{"instruction": "Fly to (-20, 81, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-20, 81, -9, 9).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 27 meters then Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 4).join()"}
{"instruction": "Retreat backward by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 9).join()"}
{"instruction": "Shift right by 32 meters then Turn left 90 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.landAsync().join()"}
{"instruction": "Shift right by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 3).join()"}
{"instruction": "Please take off then Rotate left by 45 degrees then Move to coordinates (88, -38, -13)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(88, -38, -13, 10).join()"}
{"instruction": "Maintain hover for 4 seconds then Move backward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 4).join()"}
{"instruction": "Execute landing then Move forward 11 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 9).join()"}
{"instruction": "Move backward 30 meters then Move to coordinates (5, -16, -6) then Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(5, -16, -6, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 8).join()"}
{"instruction": "Please take off then Land then Move left 50 meters", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 9).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move to coordinates (36, 14, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(36, 14, -12, 5).join()"}
{"instruction": "Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 9).join()"}
{"instruction": "Retreat backward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 10).join()"}
{"instruction": "Move to coordinates (-97, 67, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-97, 67, -12, 4).join()"}
{"instruction": "Move forward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 10).join()"}
{"instruction": "Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 6).join()"}
{"instruction": "Move backward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 10).join()"}
{"instruction": "Shift left by 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 5).join()"}
{"instruction": "Move right 50 meters then Retreat backward by 6 meters then Shift left by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 3).join()"}
{"instruction": "Rotate right by 45 degrees then Move backward 38 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Execute landing then Move to coordinates (-92, 2, -19)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-92, 2, -19, 6).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 3).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 7 seconds then Move left 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 5).join()"}
{"instruction": "Move to coordinates (-92, -86, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-92, -86, -8, 5).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (-12, 32, -6) then Move left 7 meters then Move left 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-12, 32, -6, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 4).join()"}
{"instruction": "Turn right 15 degrees then Shift left by 22 meters then Move right 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 22, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 8).join()"}
{"instruction": "Rotate right by 30 degrees then Move forward 45 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift left by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 24, current_z, 8).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff then Initiate takeoff sequence then Move forward 37 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 4).join()"}
{"instruction": "Shift left by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 5).join()"}
{"instruction": "Move left 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 3).join()"}
{"instruction": "Move right 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 4).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move right 45 meters then Turn right 60 degrees then Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 8).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 39 meters then Initiate takeoff sequence then Fly to (86, -92, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(86, -92, -17, 6).join()"}
{"instruction": "Rotate left by 45 degrees then Move to coordinates (-13, -15, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-13, -15, -15, 4).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Shift right by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 4).join()"}
{"instruction": "Fly to (67, -92, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(67, -92, -11, 8).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 90 degrees then Shift right by 40 meters then Move backward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 40, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 8).join()"}
{"instruction": "Move backward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 4).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn left 90 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 7).join()"}
{"instruction": "Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 6).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Retreat backward by 18 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 14 meters then Shift left by 41 meters then Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 14, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 6).join()"}
{"instruction": "Move backward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 3).join()"}
{"instruction": "Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 3).join()"}
{"instruction": "Rotate right by 45 degrees then Move backward 16 meters then Retreat backward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 6).join()"}
{"instruction": "Move backward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 3).join()"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Fly to (-50, 46, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-50, 46, -18, 8).join()"}
{"instruction": "Move forward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 8).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Execute landing then Move right 36 meters then Initiate takeoff sequence", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 9 seconds then Move to coordinates (98, -98, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(98, -98, -20, 3).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift right by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 6).join()"}
{"instruction": "Shift right by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 8).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 16 meters then Move right 32 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 16, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 5).join() then client.landAsync().join()"}
{"instruction": "Shift left by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 4).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Maintain hover for 9 seconds then Advance forward by 9 meters then Move right 21 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 21, current_z, 5).join()"}
{"instruction": "Advance forward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 8).join()"}
{"instruction": "Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move to coordinates (-69, -2, -13) then Move backward 14 meters then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-69, -2, -13, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Turn right 45 degrees then Fly to (72, 97, -5) then Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(72, 97, -5, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 5).join()"}
{"instruction": "Move forward 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 49, current_y, current_z, 8).join()"}
{"instruction": "Turn left 45 degrees then Retreat backward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 8).join()"}
{"instruction": "Initiate landing then Maintain hover for 9 seconds then Please land", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then client.landAsync().join()"}
{"instruction": "Move right 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join()"}
{"instruction": "Move forward 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 28 meters then Hover for 8 seconds then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move right 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 3).join()"}
{"instruction": "Hover for 3 seconds then Move forward 31 meters then Move right 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 3).join()"}
{"instruction": "Move forward 26 meters then Move forward 45 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Please land then Move right 15 meters then Move right 50 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 5).join()"}
{"instruction": "Move to coordinates (-32, 8, -11) then Move to coordinates (77, 63, -10) then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, 8, -11, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(77, 63, -10, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 18 meters then Advance forward by 31 meters then Move to coordinates (-76, 12, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-76, 12, -17, 8).join()"}
{"instruction": "Move right 39 meters then Shift right by 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 7).join()"}
{"instruction": "Move left 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 7).join()"}
{"instruction": "Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 9).join()"}
{"instruction": "Move backward 43 meters then Move forward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 7).join()"}
{"instruction": "Shift left by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 7).join()"}
{"instruction": "Turn right 60 degrees then Fly to (69, 76, -14) then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(69, 76, -14, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Initiate takeoff sequence then Shift left by 11 meters then Shift right by 22 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 8).join()"}
{"instruction": "Retreat backward by 42 meters then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Please take off then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 6).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Land then Maintain hover for 9 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move to coordinates (-87, 69, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-87, 69, -8, 8).join()"}
{"instruction": "Move left 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 46, current_z, 8).join()"}
{"instruction": "Shift right by 24 meters then Move right 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 3).join()"}
{"instruction": "Move right 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 4).join()"}
{"instruction": "Maintain hover for 8 seconds then Fly to (92, 20, -12) then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(92, 20, -12, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Shift left by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 9).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate left by 60 degrees then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (25, 8, -11) then Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(25, 8, -11, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 3).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn left 45 degrees then Move forward 24 meters then Move forward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 4).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 7).join()"}
{"instruction": "Move right 23 meters then Shift right by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 7).join()"}
{"instruction": "Move forward 23 meters then Rotate right by 45 degrees then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Rotate left by 15 degrees then Turn right 90 degrees then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Please take off then Execute landing then Execute landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 9).join()"}
{"instruction": "Rotate left by 15 degrees then Turn right 60 degrees then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Fly to (-78, 73, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-78, 73, -6, 8).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff then Advance forward by 12 meters then Rotate left by 15 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift left by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 4).join()"}
{"instruction": "Move to coordinates (-76, 36, -12) then Move left 23 meters then Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-76, 36, -12, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 7).join()"}
{"instruction": "Move left 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 3).join()"}
{"instruction": "Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 5).join()"}
{"instruction": "Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 8).join()"}
{"instruction": "Move right 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 38, current_z, 10).join()"}
{"instruction": "Move to coordinates (28, 47, -13) then Rotate left by 15 degrees then Fly to (37, -2, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(28, 47, -13, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(37, -2, -13, 5).join()"}
{"instruction": "Shift left by 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 10).join()"}
{"instruction": "Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 9).join()"}
{"instruction": "Fly to (-95, 30, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-95, 30, -13, 7).join()"}
{"instruction": "Please take off then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move right 46 meters then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move to coordinates (10, 73, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(10, 73, -13, 7).join()"}
{"instruction": "Advance forward by 43 meters then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 43, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Fly to (84, -27, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(84, -27, -14, 7).join()"}
{"instruction": "Turn right 30 degrees then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move to coordinates (-90, -87, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-90, -87, -9, 9).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Fly to (-50, 23, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-50, 23, -13, 7).join()"}
{"instruction": "Move to coordinates (-48, 2, -13) then Turn right 45 degrees then Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, 2, -13, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Advance forward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 6).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 43 meters then Fly to (31, 98, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(31, 98, -13, 4).join()"}
{"instruction": "Shift left by 15 meters then Move left 25 meters then Advance forward by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 3).join()"}
{"instruction": "Execute landing then Move right 25 meters then Move backward 46 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 10).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 3).join()"}
{"instruction": "Move forward 21 meters then Move to coordinates (-99, -24, -13) then Move left 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 21, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-99, -24, -13, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 10).join()"}
{"instruction": "Move left 35 meters then Shift left by 48 meters then Retreat backward by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 48, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 4).join()"}
{"instruction": "Advance forward by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 9).join()"}
{"instruction": "Move backward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 4).join()"}
{"instruction": "Shift right by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 42, current_z, 6).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift left by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 6).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 4).join()"}
{"instruction": "Move backward 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 5, current_y, current_z, 3).join()"}
{"instruction": "Move right 30 meters then Fly to (-86, -67, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-86, -67, -11, 6).join()"}
{"instruction": "Retreat backward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 4).join()"}
{"instruction": "Move to coordinates (78, 17, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, 17, -17, 5).join()"}
{"instruction": "Maintain hover for 10 seconds then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then client.landAsync().join()"}
{"instruction": "Shift right by 7 meters then Shift right by 26 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 90 degrees then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Shift left by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 4).join()"}
{"instruction": "Rotate left by 60 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.landAsync().join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move to coordinates (31, -47, -16) then Execute takeoff then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(31, -47, -16, 3).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-16, 59, -10)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-16, 59, -10, 7).join()"}
{"instruction": "Rotate right by 15 degrees then Move left 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 5).join()"}
{"instruction": "Move backward 27 meters then Please take off then Move forward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 7).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 6).join()"}
{"instruction": "Fly to (-40, -70, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-40, -70, -15, 4).join()"}
{"instruction": "Move to coordinates (-85, 58, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-85, 58, -14, 10).join()"}
{"instruction": "Please take off then Execute landing then Take off", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift left by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 5).join()"}
{"instruction": "Retreat backward by 21 meters then Hover for 9 seconds then Fly to (42, -37, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(42, -37, -18, 5).join()"}
{"instruction": "Turn right 45 degrees then Rotate left by 90 degrees then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move backward 31 meters then Move forward 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (50, -36, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(50, -36, -16, 5).join()"}
{"instruction": "Shift left by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 9).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Land then Move to coordinates (93, 54, -17)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(93, 54, -17, 4).join()"}
{"instruction": "Advance forward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 9).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift right by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 5, current_z, 4).join()"}
{"instruction": "Land then Move backward 12 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 45 degrees then Shift right by 19 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 4).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 3).join()"}
{"instruction": "Retreat backward by 39 meters then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move forward 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 3).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 41 meters then Maintain hover for 4 seconds then Move left 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 14, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence then Please land then Initiate landing", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Shift left by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 9).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Maintain hover for 8 seconds then Shift right by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 6).join()"}
{"instruction": "Retreat backward by 26 meters then Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 6).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 6).join()"}
{"instruction": "Rotate left by 30 degrees then Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 30 degrees then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Land then Rotate right by 90 degrees then Rotate right by 90 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Shift right by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 5).join()"}
{"instruction": "Move to coordinates (47, 93, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(47, 93, -20, 8).join()"}
{"instruction": "Land then Move to coordinates (24, 50, -9) then Turn right 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(24, 50, -9, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence then Turn left 45 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 4).join()"}
{"instruction": "Execute takeoff then Fly to (66, -77, -14) then Turn left 90 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(66, -77, -14, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Take off then Land then Please land", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Advance forward by 10 meters then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 8).join()"}
{"instruction": "Fly to (-74, -8, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-74, -8, -8, 4).join()"}
{"instruction": "Move forward 34 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 7).join()"}
{"instruction": "Shift right by 31 meters then Rotate right by 15 degrees then Move to coordinates (-51, 7, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-51, 7, -16, 7).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Execute landing then Maintain hover for 4 seconds then Rotate left by 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate left by 15 degrees then Move to coordinates (39, -9, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(39, -9, -15, 6).join()"}
{"instruction": "Shift right by 39 meters then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move left 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence then Move backward 35 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 9).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move to coordinates (-46, -40, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-46, -40, -5, 5).join()"}
{"instruction": "Shift right by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 4).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift left by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 8, current_z, 3).join()"}
{"instruction": "Move to coordinates (-58, -62, -9) then Retreat backward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-58, -62, -9, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 8).join()"}
{"instruction": "Move forward 28 meters then Initiate takeoff sequence then Move right 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 4).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 5).join()"}
{"instruction": "Initiate takeoff sequence then Advance forward by 44 meters then Turn left 15 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 4).join()"}
{"instruction": "Move left 37 meters then Maintain hover for 9 seconds then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then client.takeoffAsync().join()"}
{"instruction": "Advance forward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (78, 51, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, 51, -18, 4).join()"}
{"instruction": "Move backward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 17 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Shift left by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 9).join()"}
{"instruction": "Move to coordinates (-23, -85, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-23, -85, -20, 9).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 45 degrees then Retreat backward by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 9).join()"}
{"instruction": "Move left 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 5).join()"}
{"instruction": "Shift right by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 8).join()"}
{"instruction": "Retreat backward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 28, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (19, -96, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(19, -96, -9, 4).join()"}
{"instruction": "Shift right by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 15, current_z, 10).join()"}
{"instruction": "Rotate right by 45 degrees then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Shift right by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 6).join()"}
{"instruction": "Advance forward by 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 3).join()"}
{"instruction": "Move right 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 8).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land then Turn left 60 degrees then Move backward 34 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 4).join()"}
{"instruction": "Retreat backward by 17 meters then Fly to (-21, 44, -13) then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-21, 44, -13, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Fly to (-97, 15, -11)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-97, 15, -11, 3).join()"}
{"instruction": "Rotate left by 30 degrees then Move backward 25 meters then Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn left 60 degrees then Move backward 49 meters then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 49, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (60, -62, -19) then Advance forward by 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(60, -62, -19, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 5, current_y, current_z, 8).join()"}
{"instruction": "Move forward 11 meters then Retreat backward by 24 meters then Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 11, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 7).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 43 meters then Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 4).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Move to coordinates (22, -27, -15) then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(22, -27, -15, 6).join() then client.landAsync().join()"}
{"instruction": "Retreat backward by 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 10).join()"}
{"instruction": "Fly to (97, -48, -13) then Land then Move to coordinates (-48, 63, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(97, -48, -13, 7).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-48, 63, -9, 10).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land then Take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Maintain hover for 3 seconds then Move forward 50 meters then Move to coordinates (33, 3, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(33, 3, -14, 8).join()"}
{"instruction": "Retreat backward by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 3).join()"}
{"instruction": "Initiate landing then Hover for 6 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Fly to (76, 18, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(76, 18, -16, 9).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move right 37 meters then Move forward 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 45, current_y, current_z, 6).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Retreat backward by 46 meters then Please land then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 46, current_y, current_z, 10).join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Please take off then Advance forward by 26 meters then Execute takeoff", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 3).join() then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence then Shift left by 23 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 3).join()"}
{"instruction": "Shift right by 27 meters then Move to coordinates (-32, 58, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-32, 58, -18, 3).join()"}
{"instruction": "Advance forward by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 28, current_y, current_z, 6).join()"}
{"instruction": "Shift right by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 9).join()"}
{"instruction": "Take off then Execute landing then Turn left 60 degrees", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move forward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 31, current_y, current_z, 6).join()"}
{"instruction": "Advance forward by 22 meters then Retreat backward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 22, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 7).join()"}
{"instruction": "Take off then Move right 22 meters then Execute landing", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Initiate landing then Move left 42 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 9).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move forward 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 5).join()"}
{"instruction": "Move right 13 meters then Turn right 90 degrees then Move left 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 6).join()"}
{"instruction": "Move backward 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 6).join()"}
{"instruction": "Maintain hover for 4 seconds then Initiate landing then Retreat backward by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 5).join()"}
{"instruction": "Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Fly to (-55, 79, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-55, 79, -20, 8).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Shift left by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 36, current_z, 4).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 8).join()"}
{"instruction": "Shift left by 50 meters then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Rotate right by 45 degrees then Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 10).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move backward 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 11, current_y, current_z, 4).join()"}
{"instruction": "Rotate right by 30 degrees then Move backward 14 meters then Retreat backward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (-61, 90, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-61, 90, -12, 8).join()"}
{"instruction": "Move forward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 6).join()"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 7).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Retreat backward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 4).join()"}
{"instruction": "Fly to (-14, -74, -11) then Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-14, -74, -11, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move right 44 meters then Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 4).join()"}
{"instruction": "Retreat backward by 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 5).join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Shift right by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 10).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 4).join()"}
{"instruction": "Move to coordinates (15, 95, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(15, 95, -18, 3).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 37 meters then Please take off then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 3).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Advance forward by 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 3).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 45 degrees then Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 5).join()"}
{"instruction": "Shift right by 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 6, current_z, 4).join()"}
{"instruction": "Shift right by 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 37, current_z, 8).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Retreat backward by 6 meters then Move forward 42 meters then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 6, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move right 22 meters then Shift right by 50 meters then Move right 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 11, current_z, 3).join()"}
{"instruction": "Fly to (7, -11, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(7, -11, -17, 6).join()"}
{"instruction": "Advance forward by 7 meters then Retreat backward by 26 meters then Move right 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 4).join()"}
{"instruction": "Retreat backward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 9).join()"}
{"instruction": "Move left 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 3).join()"}
{"instruction": "Retreat backward by 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 9).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 18, current_z, 5).join()"}
{"instruction": "Advance forward by 50 meters then Shift left by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 5).join()"}
{"instruction": "Advance forward by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 18, current_y, current_z, 9).join()"}
{"instruction": "Fly to (32, 24, -18) then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(32, 24, -18, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Move forward 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 8).join()"}
{"instruction": "Initiate landing then Rotate right by 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move right 33 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 10).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 5).join()"}
{"instruction": "Move left 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 7).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 6).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (0, 97, -13) then Retreat backward by 23 meters then Move left 5 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(0, 97, -13, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 23, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 5, current_z, 5).join()"}
{"instruction": "Move forward 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 6, current_y, current_z, 5).join()"}
{"instruction": "Turn left 60 degrees then Initiate takeoff sequence then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 8 meters then Move to coordinates (4, -80, -17) then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 8, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(4, -80, -17, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Initiate takeoff sequence then Advance forward by 48 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 6).join()"}
{"instruction": "Move right 50 meters then Execute landing then Shift left by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 9).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 38, current_z, 3).join()"}
{"instruction": "Move to coordinates (-21, -41, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-21, -41, -11, 9).join()"}
{"instruction": "Move forward 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 12, current_y, current_z, 10).join()"}
{"instruction": "Shift right by 29 meters then Take off then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 4).join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move backward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 6).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Shift left by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 26, current_z, 9).join()"}
{"instruction": "Move backward 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 41, current_y, current_z, 8).join()"}
{"instruction": "Move backward 16 meters then Please land then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 5).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Initiate takeoff sequence then Turn right 15 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move to coordinates (76, 29, -13) then Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(76, 29, -13, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 8 seconds then Execute takeoff then Move forward 42 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 42, current_y, current_z, 6).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Shift right by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 4).join()"}
{"instruction": "Shift right by 36 meters then Execute takeoff then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 36, current_z, 4).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Retreat backward by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 3).join()"}
{"instruction": "Please land then Move left 49 meters then Move right 28 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 9).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate left by 15 degrees then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (-5, 44, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-5, 44, -5, 7).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Shift left by 37 meters then Initiate takeoff sequence then Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Hover for 5 seconds then Maintain hover for 9 seconds then Fly to (-6, 34, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-6, 34, -11, 4).join()"}
{"instruction": "Fly to (51, 40, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(51, 40, -7, 7).join()"}
{"instruction": "Advance forward by 38 meters then Move to coordinates (-85, 69, -11) then Move left 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-85, 69, -11, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 8).join()"}
{"instruction": "Shift right by 31 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 9).join()"}
{"instruction": "Retreat backward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 6).join()"}
{"instruction": "Execute landing then Rotate left by 15 degrees then Rotate left by 90 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move right 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 17, current_z, 4).join()"}
{"instruction": "Advance forward by 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 23, current_y, current_z, 4).join()"}
{"instruction": "Fly to (-89, 76, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-89, 76, -13, 3).join()"}
{"instruction": "Shift left by 17 meters then Fly to (-25, -2, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-25, -2, -16, 10).join()"}
{"instruction": "Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 10).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift left by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 4).join()"}
{"instruction": "Hover for 6 seconds then Hover for 5 seconds then Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate right by 15 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.landAsync().join()"}
{"instruction": "Please take off then Rotate right by 60 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Maintain hover for 5 seconds then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.landAsync().join()"}
{"instruction": "Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 8).join()"}
{"instruction": "Move to coordinates (44, -79, -7) then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(44, -79, -7, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Land then Turn left 15 degrees then Move backward 10 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 7).join()"}
{"instruction": "Move right 19 meters then Shift right by 44 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 19, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 44, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (-62, 20, -7) then Move forward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-62, 20, -7, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 4).join()"}
{"instruction": "Take off then Hover for 3 seconds then Retreat backward by 35 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 10).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Retreat backward by 7 meters then Rotate left by 60 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then client.landAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move forward 26 meters then Move forward 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 7).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move backward 17 meters then Initiate landing then Move backward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 5).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 4).join()"}
{"instruction": "Fly to (44, -14, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(44, -14, -17, 8).join()"}
{"instruction": "Fly to (91, 88, -15) then Execute landing then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, 88, -15, 7).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Turn left 90 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.landAsync().join()"}
{"instruction": "Advance forward by 34 meters then Move right 43 meters then Shift left by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 4).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move right 23 meters then Initiate landing then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 23, current_z, 5).join() then client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 5).join()"}
{"instruction": "Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Maintain hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move forward 13 meters then Shift right by 45 meters then Shift right by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 5).join()"}
{"instruction": "Please take off then Please take off then Advance forward by 17 meters", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 3).join()"}
{"instruction": "Move left 6 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 6, current_z, 6).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move right 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 33, current_z, 7).join()"}
{"instruction": "Rotate right by 90 degrees then Move forward 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 32, current_y, current_z, 6).join()"}
{"instruction": "Retreat backward by 38 meters then Turn right 90 degrees then Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 10).join()"}
{"instruction": "Advance forward by 27 meters then Turn right 45 degrees then Move forward 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 10).join()"}
{"instruction": "Rotate right by 90 degrees then Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move to coordinates (42, 42, -10) then Turn right 30 degrees then Move backward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(42, 42, -10, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 10, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (-53, -51, -6) then Initiate takeoff sequence then Retreat backward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-53, -51, -6, 5).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 27, current_y, current_z, 7).join()"}
{"instruction": "Initiate takeoff sequence then Hover for 5 seconds then Take off", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.takeoffAsync().join()"}
{"instruction": "Move backward 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 38, current_y, current_z, 5).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (91, -53, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, -53, -7, 4).join()"}
{"instruction": "Shift right by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 5).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Land then Please take off", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Fly to (-75, -90, -12) then Hover for 4 seconds then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-75, -90, -12, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.takeoffAsync().join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 30 degrees then Turn right 45 degrees then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Advance forward by 10 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 4).join() then client.landAsync().join()"}
{"instruction": "Move right 47 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Take off then Initiate takeoff sequence", "api_call": "client.takeoffAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Hover for 3 seconds then Move forward 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 10, current_y, current_z, 6).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 3).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move to coordinates (-82, -84, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-82, -84, -13, 4).join()"}
{"instruction": "Shift left by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 6).join()"}
{"instruction": "Execute takeoff then Shift right by 28 meters then Turn right 90 degrees", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 28, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Shift left by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 17, current_z, 5).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Please take off then Fly to (43, 62, -18) then Fly to (-39, -30, -17)", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(43, 62, -18, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-39, -30, -17, 5).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Turn right 15 degrees then Move backward 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 22, current_y, current_z, 3).join()"}
{"instruction": "Move backward 32 meters then Rotate right by 60 degrees then Move right 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 4).join()"}
{"instruction": "Move forward 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 3).join()"}
{"instruction": "Land then Turn left 45 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 5).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 90 degrees then Move left 15 meters then Move left 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 10, current_z, 7).join()"}
{"instruction": "Advance forward by 38 meters then Move to coordinates (43, -7, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(43, -7, -20, 3).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (35, 60, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(35, 60, -14, 8).join()"}
{"instruction": "Move left 21 meters then Fly to (-57, -62, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-57, -62, -13, 9).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Initiate takeoff sequence then Shift left by 41 meters then Execute landing", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 7).join() then client.landAsync().join()"}
{"instruction": "Rotate left by 30 degrees then Move right 30 meters then Move right 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 10).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Hover for 4 seconds then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn left 30 degrees then Shift right by 48 meters then Advance forward by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 3).join()"}
{"instruction": "Advance forward by 47 meters then Execute takeoff then Retreat backward by 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 47, current_y, current_z, 9).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 25, current_y, current_z, 7).join()"}
{"instruction": "Fly to (35, 93, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(35, 93, -14, 6).join()"}
{"instruction": "Land then Turn right 30 degrees then Shift right by 8 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 4).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move backward 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 34, current_y, current_z, 4).join()"}
{"instruction": "Execute landing then Please land then Retreat backward by 20 meters", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 7).join()"}
{"instruction": "Advance forward by 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 40, current_y, current_z, 4).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Hover for 7 seconds then Maintain hover for 6 seconds then Shift right by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 50, current_z, 5).join()"}
{"instruction": "Move to coordinates (-79, -42, -19) then Hover for 10 seconds then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-79, -42, -19, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then client.landAsync().join()"}
{"instruction": "Move left 16 meters then Rotate right by 60 degrees then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move backward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 8).join()"}
{"instruction": "Move to coordinates (9, -4, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(9, -4, -13, 7).join()"}
{"instruction": "Move right 47 meters then Rotate right by 15 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 47, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then client.landAsync().join()"}
{"instruction": "Shift right by 22 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 5).join()"}
{"instruction": "Shift left by 16 meters then Fly to (85, -68, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(85, -68, -18, 3).join()"}
{"instruction": "Turn right 60 degrees then Fly to (97, -49, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(97, -49, -8, 4).join()"}
{"instruction": "Move forward 44 meters then Turn right 30 degrees then Shift right by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 44, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 39, current_z, 8).join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move left 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 6).join()"}
{"instruction": "Initiate takeoff sequence then Move right 12 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 12, current_z, 10).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Shift left by 21 meters then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 21, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move right 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 4).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Shift right by 7 meters then Fly to (59, -94, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(59, -94, -20, 3).join()"}
{"instruction": "Maintain hover for 8 seconds then Maintain hover for 3 seconds then Move to coordinates (-37, -61, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-37, -61, -9, 3).join()"}
{"instruction": "Initiate landing then Move to coordinates (-9, 0, -9)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-9, 0, -9, 6).join()"}
{"instruction": "Move backward 12 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 12, current_y, current_z, 7).join()"}
{"instruction": "Turn right 60 degrees then Take off then Move left 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 4).join()"}
{"instruction": "Fly to (-70, 60, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, 60, -16, 8).join()"}
{"instruction": "Retreat backward by 44 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 44, current_y, current_z, 4).join()"}
{"instruction": "Shift right by 31 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 31, current_z, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Move forward 15 meters then Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Shift right by 46 meters then Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 46, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move left 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 25, current_z, 5).join()"}
{"instruction": "Move right 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 3).join()"}
{"instruction": "Move forward 7 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 7, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Move left 11 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 11, current_z, 6).join()"}
{"instruction": "Fly to (-19, -91, -8) then Land then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-19, -91, -8, 9).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Move forward 29 meters then Retreat backward by 36 meters then Move to coordinates (-28, -95, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 29, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-28, -95, -14, 4).join()"}
{"instruction": "Maintain hover for 5 seconds then Fly to (60, 45, -10) then Move left 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(60, 45, -10, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 8).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move left 19 meters then Initiate landing then Maintain hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 4).join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move left 42 meters then Retreat backward by 24 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 42, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 24, current_y, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Move right 30 meters then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 8).join() then client.landAsync().join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move backward 15 meters then Hover for 10 seconds then Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 15, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (92, -74, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(92, -74, -7, 8).join()"}
{"instruction": "Move to coordinates (49, 57, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(49, 57, -5, 5).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Take off then Hover for 5 seconds then Shift left by 39 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 39, current_z, 9).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 5).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 45 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Maintain hover for 9 seconds then Move left 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 3).join()"}
{"instruction": "Advance forward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 8).join()"}
{"instruction": "Move right 25 meters then Retreat backward by 36 meters then Shift left by 28 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 25, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 7).join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move left 29 meters then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-13, -86, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-13, -86, -13, 8).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Move left 45 meters then Advance forward by 50 meters then Fly to (10, 20, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 50, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(10, 20, -13, 3).join()"}
{"instruction": "Fly to (-50, -99, -14)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-50, -99, -14, 9).join()"}
{"instruction": "Move forward 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 7).join()"}
{"instruction": "Move left 47 meters then Advance forward by 17 meters then Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 17, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Move to coordinates (90, -68, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(90, -68, -8, 10).join()"}
{"instruction": "Advance forward by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 3).join()"}
{"instruction": "Move backward 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 8 meters then Retreat backward by 7 meters then Move forward 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 8, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Retreat backward by 18 meters then Move forward 46 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 5).join()"}
{"instruction": "Move to coordinates (78, 30, -17) then Rotate right by 45 degrees then Retreat backward by 17 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, 30, -17, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 17, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 8 seconds then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then client.landAsync().join()"}
{"instruction": "Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 5).join()"}
{"instruction": "Retreat backward by 45 meters then Move backward 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 45, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 10).join()"}
{"instruction": "Move forward 46 meters then Turn left 60 degrees then Fly to (73, -81, -18)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 46, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(73, -81, -18, 8).join()"}
{"instruction": "Move right 35 meters then Shift left by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 35, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 6).join()"}
{"instruction": "Shift left by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 29, current_z, 7).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off then Advance forward by 37 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 9).join()"}
{"instruction": "Move right 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 48, current_z, 6).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Shift right by 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 6).join()"}
{"instruction": "Advance forward by 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 34, current_y, current_z, 8).join()"}
{"instruction": "Advance forward by 48 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 48, current_y, current_z, 3).join() then client.landAsync().join()"}
{"instruction": "Move right 32 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 5).join()"}
{"instruction": "Please take off then Maintain hover for 7 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Retreat backward by 16 meters then Rotate left by 45 degrees then Move forward 25 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 16, current_y, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 25, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (-100, 93, -6) then Move right 8 meters then Please take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-100, 93, -6, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 8).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 60 degrees then Maintain hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move forward 35 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 9).join()"}
{"instruction": "Maintain hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Move left 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 41, current_z, 9).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 26 meters then Fly to (39, -35, -7) then Execute landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(39, -35, -7, 7).join() then client.landAsync().join()"}
{"instruction": "Move right 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 27, current_z, 9).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Retreat backward by 31 meters then Move to coordinates (91, 9, -11) then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 31, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(91, 9, -11, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move to coordinates (19, 26, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(19, 26, -8, 8).join()"}
{"instruction": "Rotate right by 15 degrees then Shift left by 16 meters then Move left 49 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 16, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 7).join()"}
{"instruction": "Move right 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 14, current_z, 8).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Maintain hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Maintain hover for 7 seconds then Initiate takeoff sequence then Move backward 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 5).join()"}
{"instruction": "Advance forward by 13 meters then Rotate right by 15 degrees then Turn left 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 13, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move to coordinates (32, -11, -20) then Hover for 7 seconds then Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(32, -11, -20, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Retreat backward by 50 meters then Shift left by 50 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 50, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 50, current_z, 3).join()"}
{"instruction": "Move backward 32 meters then Hover for 5 seconds then Shift left by 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 32, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 10).join()"}
{"instruction": "Move right 7 meters then Hover for 10 seconds then Move to coordinates (78, -87, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 7, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(78, -87, -7, 7).join()"}
{"instruction": "Move left 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 34, current_z, 10).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Advance forward by 16 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 9).join()"}
{"instruction": "Initiate landing then Maintain hover for 9 seconds then Shift left by 44 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 44, current_z, 9).join()"}
{"instruction": "Advance forward by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 26, current_y, current_z, 4).join()"}
{"instruction": "Move backward 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 18, current_y, current_z, 9).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Rotate right by 30 degrees then Shift left by 20 meters then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 10).join() then client.landAsync().join()"}
{"instruction": "Move forward 37 meters then Move left 47 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 37, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 47, current_z, 8).join()"}
{"instruction": "Hover for 6 seconds then Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Rotate right by 45 degrees then Move backward 19 meters then Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Move to coordinates (-91, -48, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-91, -48, -6, 4).join()"}
{"instruction": "Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Rotate left by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move forward 16 meters then Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 4).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (79, -6, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(79, -6, -9, 6).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Shift right by 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 43, current_z, 8).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Move right 29 meters then Rotate left by 45 degrees then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join() then client.takeoffAsync().join()"}
{"instruction": "Move to coordinates (-59, -2, -7) then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-59, -2, -7, 7).join() then client.takeoffAsync().join()"}
{"instruction": "Move right 20 meters then Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 10).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 5).join()"}
{"instruction": "Rotate right by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Shift right by 45 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 45, current_z, 4).join() then client.takeoffAsync().join()"}
{"instruction": "Shift right by 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 26, current_z, 8).join()"}
{"instruction": "Please take off then Fly to (18, 74, -20) then Advance forward by 30 meters", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(18, 74, -20, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 30, current_y, current_z, 5).join()"}
{"instruction": "Move left 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 5).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Rotate left by 15 degrees then Fly to (27, 14, -8) then Move backward 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(27, 14, -8, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 20, current_y, current_z, 6).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move left 32 meters then Initiate takeoff sequence", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 32, current_z, 5).join() then client.takeoffAsync().join()"}
{"instruction": "Rotate left by 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join()"}
{"instruction": "Move backward 30 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 6).join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Advance forward by 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 3).join()"}
{"instruction": "Fly to (86, 50, -13) then Turn right 45 degrees then Move right 34 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(86, 50, -13, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 34, current_z, 7).join()"}
{"instruction": "Move left 12 meters then Turn right 60 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 12, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Advance forward by 38 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 10).join()"}
{"instruction": "Move left 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 7).join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Retreat backward by 7 meters then Move to coordinates (18, -52, -5)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 7, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(18, -52, -5, 8).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Maintain hover for 7 seconds then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then client.takeoffAsync().join()"}
{"instruction": "Turn left 60 degrees then Shift left by 49 meters then Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Maintain hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Shift right by 18 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 7).join()"}
{"instruction": "Move backward 26 meters then Fly to (83, -73, -9)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(83, -73, -9, 8).join()"}
{"instruction": "Move forward 16 meters then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 16, current_y, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift left by 19 meters then Please take off then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 19, current_z, 3).join() then client.takeoffAsync().join() then client.landAsync().join()"}
{"instruction": "Move left 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 33, current_z, 5).join()"}
{"instruction": "Maintain hover for 9 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9)"}
{"instruction": "Move left 9 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 9, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Retreat backward by 30 meters then Hover for 7 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 30, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7)"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move forward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 8).join()"}
{"instruction": "Fly to (-19, -72, -15)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-19, -72, -15, 6).join()"}
{"instruction": "Move backward 43 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 43, current_y, current_z, 9).join()"}
{"instruction": "Initiate takeoff sequence then Move left 28 meters then Hover for 8 seconds", "api_call": "client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 28, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Execute landing then Land then Maintain hover for 5 seconds", "api_call": "client.landAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Turn right 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Rotate right by 15 degrees then Move backward 26 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 26, current_y, current_z, 6).join()"}
{"instruction": "Execute landing then Rotate left by 15 degrees then Execute landing", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Please land then Move to coordinates (-70, -13, -12)", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, -13, -12, 3).join()"}
{"instruction": "Shift right by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 20, current_z, 4).join()"}
{"instruction": "Rotate right by 90 degrees then Move left 15 meters then Move right 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 15, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 3).join()"}
{"instruction": "Maintain hover for 5 seconds then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Maintain hover for 8 seconds then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Move left 45 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 45, current_z, 7).join()"}
{"instruction": "Please take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 7).join()"}
{"instruction": "Maintain hover for 7 seconds then Maintain hover for 4 seconds then Move right 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 8).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Move forward 24 meters then Retreat backward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 24, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 6).join()"}
{"instruction": "Hover for 9 seconds then Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(9) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move backward 21 meters then Rotate left by 30 degrees then Move right 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 21, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 13, current_z, 8).join()"}
{"instruction": "Fly to (38, -42, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(38, -42, -17, 5).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Please take off then Execute landing then Advance forward by 39 meters", "api_call": "client.takeoffAsync().join() then client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 39, current_y, current_z, 4).join()"}
{"instruction": "Advance forward by 19 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 19, current_y, current_z, 8).join()"}
{"instruction": "Fly to (65, 83, -16)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(65, 83, -16, 10).join()"}
{"instruction": "Shift right by 8 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 8, current_z, 7).join()"}
{"instruction": "Move right 22 meters then Fly to (-5, -87, -15) then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 22, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-5, -87, -15, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Move left 49 meters then Fly to (-77, -62, -6) then Retreat backward by 14 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 49, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-77, -62, -6, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 14, current_y, current_z, 10).join()"}
{"instruction": "Turn right 45 degrees then Turn right 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Execute landing", "api_call": "client.landAsync().join()"}
{"instruction": "Please land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 30 degrees then Maintain hover for 7 seconds then Fly to (9, 98, -13)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(9, 98, -13, 10).join()"}
{"instruction": "Move backward 42 meters then Hover for 4 seconds then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 42, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4) then client.landAsync().join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Retreat backward by 40 meters then Please take off then Retreat backward by 39 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 6).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 39, current_y, current_z, 6).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Turn right 90 degrees then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then client.landAsync().join()"}
{"instruction": "Move to coordinates (-14, -41, -7)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-14, -41, -7, 10).join()"}
{"instruction": "Please land then Turn right 60 degrees", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join()"}
{"instruction": "Rotate right by 60 degrees then Please land then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 60).join() then client.landAsync().join() then client.landAsync().join()"}
{"instruction": "Hover for 6 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6)"}
{"instruction": "Maintain hover for 6 seconds then Execute takeoff then Move forward 15 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(6) then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 15, current_y, current_z, 9).join()"}
{"instruction": "Shift left by 35 meters then Retreat backward by 36 meters then Turn left 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 35, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 45).join()"}
{"instruction": "Shift right by 10 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 10, current_z, 10).join()"}
{"instruction": "Hover for 10 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Fly to (47, -66, -10) then Rotate left by 30 degrees then Hover for 8 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(47, -66, -10, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(8)"}
{"instruction": "Maintain hover for 7 seconds then Rotate left by 60 degrees then Shift left by 7 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(7) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 7, current_z, 8).join()"}
{"instruction": "Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Turn left 60 degrees then Retreat backward by 19 meters then Rotate left by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 19, current_y, current_z, 6).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate left by 90 degrees then Take off then Move right 41 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 41, current_z, 3).join()"}
{"instruction": "Rotate left by 60 degrees then Move forward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 60).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 33, current_y, current_z, 4).join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Move to coordinates (29, 6, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(29, 6, -17, 4).join()"}
{"instruction": "Move backward 48 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 48, current_y, current_z, 7).join()"}
{"instruction": "Advance forward by 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 9, current_y, current_z, 6).join()"}
{"instruction": "Move to coordinates (-95, 40, -5) then Turn right 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-95, 40, -5, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 35 meters then Advance forward by 27 meters then Land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 35, current_y, current_z, 10).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 6).join() then client.landAsync().join()"}
{"instruction": "Shift right by 30 meters then Move right 24 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 30, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 24, current_z, 4).join()"}
{"instruction": "Retreat backward by 9 meters then Hover for 4 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 4).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(4)"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Move to coordinates (-11, -69, -14) then Fly to (-54, 57, -17) then Move backward 37 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-11, -69, -14, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-54, 57, -17, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 37, current_y, current_z, 5).join()"}
{"instruction": "Advance forward by 38 meters then Execute takeoff", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 38, current_y, current_z, 9).join() then client.takeoffAsync().join()"}
{"instruction": "Maintain hover for 5 seconds then Initiate landing", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.landAsync().join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Execute landing then Initiate takeoff sequence", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Move backward 36 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 36, current_y, current_z, 3).join()"}
{"instruction": "Move right 18 meters then Move left 13 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 18, current_z, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 13, current_z, 5).join()"}
{"instruction": "Move backward 33 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 33, current_y, current_z, 4).join()"}
{"instruction": "Take off", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Move backward 40 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 40, current_y, current_z, 9).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Rotate right by 15 degrees then Shift right by 32 meters then Fly to (70, -26, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 32, current_z, 8).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(70, -26, -17, 7).join()"}
{"instruction": "Rotate left by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Fly to (17, -23, -17)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(17, -23, -17, 5).join()"}
{"instruction": "Rotate left by 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Turn left 30 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 30).join()"}
{"instruction": "Execute landing then Please take off then Retreat backward by 9 meters", "api_call": "client.landAsync().join() then client.takeoffAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 9, current_y, current_z, 5).join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Advance forward by 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 20, current_y, current_z, 10).join()"}
{"instruction": "Fly to (-66, 43, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-66, 43, -6, 5).join()"}
{"instruction": "Turn left 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 90).join()"}
{"instruction": "Hover for 10 seconds then Move to coordinates (-42, 60, -12)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-42, 60, -12, 6).join()"}
{"instruction": "Rotate right by 90 degrees then Hover for 5 seconds then Take off", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then client.takeoffAsync().join()"}
{"instruction": "Hover for 3 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(3)"}
{"instruction": "Turn right 45 degrees then Move left 30 meters then Move to coordinates (-70, -40, -20)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 30, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-70, -40, -20, 5).join()"}
{"instruction": "Shift left by 43 meters then Fly to (15, -63, -6)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 43, current_z, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(15, -63, -6, 7).join()"}
{"instruction": "Move backward 29 meters then Turn left 15 degrees then Please land", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x - 29, current_y, current_z, 7).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join() then client.landAsync().join()"}
{"instruction": "Fly to (-95, 86, -8)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-95, 86, -8, 3).join()"}
{"instruction": "Maintain hover for 5 seconds then Rotate right by 90 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5) then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 90).join()"}
{"instruction": "Turn left 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw - 15).join()"}
{"instruction": "Move left 23 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 23, current_z, 4).join()"}
{"instruction": "Move right 29 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 29, current_z, 9).join()"}
{"instruction": "Fly to (-30, -67, -13) then Move left 37 meters then Move forward 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(-30, -67, -13, 5).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 37, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 6).join()"}
{"instruction": "Maintain hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Hover for 5 seconds", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(5)"}
{"instruction": "Move left 20 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y - 20, current_z, 10).join()"}
{"instruction": "Move forward 41 meters then Move to coordinates (76, -78, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 41, current_y, current_z, 9).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(76, -78, -11, 9).join()"}
{"instruction": "Advance forward by 27 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 27, current_y, current_z, 10).join()"}
{"instruction": "Turn right 30 degrees then Rotate right by 45 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 30).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 45).join()"}
{"instruction": "Turn right 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Initiate takeoff sequence", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Fly to (81, -50, -11)", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(81, -50, -11, 4).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Execute takeoff", "api_call": "client.takeoffAsync().join()"}
{"instruction": "Please land then Move forward 35 meters", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x + 35, current_y, current_z, 7).join()"}
{"instruction": "Land", "api_call": "client.landAsync().join()"}
{"instruction": "Initiate landing then Execute takeoff", "api_call": "client.landAsync().join() then client.takeoffAsync().join()"}
{"instruction": "Land then Maintain hover for 10 seconds", "api_call": "client.landAsync().join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.hoverAsync().join()\nimport time\ntime.sleep(10)"}
{"instruction": "Initiate landing", "api_call": "client.landAsync().join()"}
{"instruction": "Fly to (5, 2, -5) then Rotate right by 15 degrees", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(5, 2, -5, 3).join() then if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.rotateToYawAsync(current_yaw + 15).join()"}
{"instruction": "Move right 9 meters", "api_call": "if client.getMultirotorState().landed_state == airsim.LandedState.Landed:\n    client.takeoffAsync().join()\nclient.moveToPositionAsync(current_x, current_y + 9, current_z, 8).join()"}
