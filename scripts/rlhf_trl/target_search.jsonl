{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Medium", "description": "无人机Target Search任务：在指定区域内逐行扫描目标，一旦发现立即悬停定位。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 50, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 50, 10)\n    else:\n        x_range = range(50, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Simple", "description": "无人机Target Search任务：在小范围区域执行Z字形搜索，如发现目标则悬停等待。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 20, 10):\n    y = j\n    if j // 10 % 2 == 0:\n        x_range = range(0, 20, 10)\n    else:\n        x_range = range(20, -1, -10)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
{"task_type": "Target Search", "difficulty": "Complex", "description": "无人机Target Search任务：在广阔区域执行Z字形航线搜索，覆盖整个区域后定位目标。", "code": "import airsim\nclient = airsim.MultirotorClient()\nclient.confirmConnection()\nclient.enableApiControl(True)\nclient.armDisarm(True)\nclient.takeoffAsync().join()\n# 执行Z字形搜索覆盖指定区域\ntarget_found = False\nfor j in range(0, 100, 20):\n    y = j\n    if j // 20 % 2 == 0:\n        x_range = range(0, 100, 20)\n    else:\n        x_range = range(100, -1, -20)\n    for x in x_range:\n        client.moveToPositionAsync(x, y, -10, 5).join()\n        # 检查是否发现目标（这里可调用图像识别模型）\n        if target_found:\n            break\n    if target_found:\n        break\nif target_found:\n    client.hoverAsync().join()  # 发现目标后悬停定位\nelse:\n    client.landAsync().join()   # 未找到目标则执行降落\nclient.armDisarm(False)\nclient.enableApiControl(False)"}
